

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Dec 12 12:38:50 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58   000000                     
    59                           ; Generated 21/07/2023 GMT
    60                           ; 
    61                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F67K40 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     
    94                           	psect	idataBANK1
    95   0018D8                     __pidataBANK1:
    96                           	callstack 0
    97                           
    98                           ;initializer for _whiteC
    99   0018D8  77                 	db	119
   100   0018D9  3F66               	dw	16230
   101   0018DB  0000               	dw	0
   102   0018DD  1E41               	dw	7745
   103   0018DF  0000               	dw	0
   104   0018E1  14F0               	dw	5360
   105   0018E3  0000               	dw	0
   106   0018E5  0F14               	dw	3860
   107   0018E7  0000               	dw	0
   108   0018E9  0002               	dw	2
   109   0018EB  0000               	dw	0
   110   0018ED  0000               	dw	0
   111   0018EF  0000               	dw	0
   112                           
   113                           ;initializer for _lightBlue
   114   0018F1  6C                 	db	108
   115   0018F2  2A58               	dw	10840
   116   0018F4  0000               	dw	0
   117   0018F6  0F2D               	dw	3885
   118   0018F8  0000               	dw	0
   119   0018FA  109F               	dw	4255
   120   0018FC  0000               	dw	0
   121   0018FE  0BCC               	dw	3020
   122   001900  0000               	dw	0
   123   001902  0002               	dw	2
   124   001904  0003               	dw	3
   125   001906  0001               	dw	1
   126   001908  0000               	dw	0
   127                           
   128                           ;initializer for _orange
   129   00190A  6F                 	db	111
   130   00190B  2A1D               	dw	10781
   131   00190D  0000               	dw	0
   132   00190F  1AC6               	dw	6854
   133   001911  0000               	dw	0
   134   001913  0A00               	dw	2560
   135   001915  0000               	dw	0
   136   001917  07B2               	dw	1970
   137   001919  0000               	dw	0
   138   00191B  0002               	dw	2
   139   00191D  0003               	dw	3
   140   00191F  0000               	dw	0
   141   001921  0000               	dw	0
   142                           
   143                           ;initializer for _pink
   144   001923  70                 	db	112
   145   001924  2EFE               	dw	12030
   146   001926  0000               	dw	0
   147   001928  1886               	dw	6278
   148   00192A  0000               	dw	0
   149   00192C  0E04               	dw	3588
   150   00192E  0000               	dw	0
   151   001930  0AAB               	dw	2731
   152   001932  0000               	dw	0
   153   001934  0000               	dw	0
   154   001936  0002               	dw	2
   155   001938  0001               	dw	1
   156   00193A  0001               	dw	1
   157                           
   158                           ;initializer for _yellow
   159   00193C  79                 	db	121
   160   00193D  35CF               	dw	13775
   161   00193F  0000               	dw	0
   162   001941  1DE4               	dw	7652
   163   001943  0000               	dw	0
   164   001945  10BD               	dw	4285
   165   001947  0000               	dw	0
   166   001949  09D6               	dw	2518
   167   00194B  0000               	dw	0
   168   00194D  0000               	dw	0
   169   00194F  0002               	dw	2
   170   001951  0000               	dw	0
   171   001953  0001               	dw	1
   172                           
   173                           ;initializer for _blue
   174   001955  62                 	db	98
   175   001956  0B9F               	dw	2975
   176   001958  0000               	dw	0
   177   00195A  0408               	dw	1032
   178   00195C  0000               	dw	0
   179   00195E  03E3               	dw	995
   180   001960  0000               	dw	0
   181   001962  03C0               	dw	960
   182   001964  0000               	dw	0
   183   001966  0002               	dw	2
   184   001968  0004               	dw	4
   185   00196A  0000               	dw	0
   186   00196C  0000               	dw	0
   187                           
   188                           ;initializer for _green
   189   00196E  67                 	db	103
   190   00196F  20A3               	dw	8355
   191   001971  0000               	dw	0
   192   001973  0CE7               	dw	3303
   193   001975  0000               	dw	0
   194   001977  0DD4               	dw	3540
   195   001979  0000               	dw	0
   196   00197B  06CC               	dw	1740
   197   00197D  0000               	dw	0
   198   00197F  0002               	dw	2
   199   001981  0002               	dw	2
   200   001983  0001               	dw	1
   201   001985  0000               	dw	0
   202                           
   203                           ;initializer for _red
   204   001987  72                 	db	114
   205   001988  19D7               	dw	6615
   206   00198A  0000               	dw	0
   207   00198C  1504               	dw	5380
   208   00198E  0000               	dw	0
   209   001990  0307               	dw	775
   210   001992  0000               	dw	0
   211   001994  03D4               	dw	980
   212   001996  0000               	dw	0
   213   001998  0002               	dw	2
   214   00199A  0002               	dw	2
   215   00199C  0000               	dw	0
   216   00199E  0000               	dw	0
   217                           
   218                           ;initializer for _minPow
   219   0019A0  000F               	dw	15
   220                           
   221                           ;initializer for _maxPowR
   222   0019A2  001F               	dw	31
   223                           
   224                           ;initializer for _maxPowL
   225   0019A4  001D               	dw	29
   226                           
   227                           ;initializer for _incidenceThresh
   228   0019A6  01F4               	dw	500
   229                           
   230                           	psect	idataBANK2
   231   00206E                     __pidataBANK2:
   232                           	callstack 0
   233                           
   234                           ;initializer for _blackC
   235   00206E  6B                 	db	107
   236   00206F  0638               	dw	1592
   237   002071  0000               	dw	0
   238   002073  02F8               	dw	760
   239   002075  0000               	dw	0
   240   002077  01D3               	dw	467
   241   002079  0000               	dw	0
   242   00207B  014C               	dw	332
   243   00207D  0000               	dw	0
   244   00207F  0002               	dw	2
   245   002081  0000               	dw	0
   246   002083  0000               	dw	0
   247   002085  0000               	dw	0
   248   000000                     _TX4REG	set	3812
   249   000000                     _RC4STAbits	set	3815
   250   000000                     _SP4BRGH	set	3814
   251   000000                     _TRISFbits	set	3974
   252   000000                     _LATFbits	set	3966
   253   000000                     _LATHbits	set	3968
   254   000000                     _SSP2CON2bits	set	3802
   255   000000                     _RX4PPS	set	3605
   256   000000                     _RC0PPS	set	3682
   257   000000                     _RC7PPS	set	3689
   258   000000                     _RE2PPS	set	3700
   259   000000                     _LATAbits	set	3961
   260   000000                     _LATEbits	set	3965
   261   000000                     _LATGbits	set	3967
   262   000000                     _TRISAbits	set	3969
   263   000000                     _TRISEbits	set	3973
   264   000000                     _TRISGbits	set	3975
   265   000000                     _T2PR	set	4028
   266   000000                     _T2CONbits	set	4029
   267   000000                     _TRISHbits	set	3976
   268   000000                     _CCPR2H	set	4006
   269   000000                     _CCPR1H	set	4010
   270   000000                     _TRISCbits	set	3971
   271   000000                     _TRISDbits	set	3972
   272   000000                     _LATCbits	set	3963
   273   000000                     _LATDbits	set	3964
   274   000000                     _RE4PPS	set	3702
   275   000000                     _RG6PPS	set	3720
   276   000000                     _RD5PPS	set	3695
   277   000000                     _ANSELDbits	set	3751
   278   000000                     _SSP2ADD	set	3798
   279   000000                     _SSP2CON1bits	set	3801
   280   000000                     _RC4REG	set	3811
   281   000000                     _SP4BRGL	set	3813
   282   000000                     _TX4STAbits	set	3816
   283   000000                     _BAUD4CONbits	set	3817
   284   000000                     _CCPR4H	set	3873
   285   000000                     _CCPR3H	set	3877
   286   000000                     _INTCONbits	set	4082
   287   000000                     _T2CLKCONbits	set	4031
   288   000000                     _T2HLTbits	set	4030
   289   000000                     _CCP1CONbits	set	4011
   290   000000                     _CCPTMRS0bits	set	4013
   291   000000                     _CCP2CONbits	set	4007
   292   000000                     _CCP3CONbits	set	3878
   293   000000                     _CCP4CONbits	set	3874
   294   000000                     _SSP2CLKPPS	set	3612
   295   000000                     _SSP2DATPPS	set	3613
   296   000000                     _PIE4bits	set	3629
   297   000000                     _PIR4bits	set	3639
   298   000000                     _SSP2CON2	set	3802
   299   000000                     _SSP2STAT	set	3800
   300   000000                     _SSP2BUF	set	3797
   301   000000                     _RD6PPS	set	3696
   302                           
   303                           	psect	smallconst
   304   000E00                     __psmallconst:
   305                           	callstack 0
   306   000E00  00                 	db	0
   307   000E01  43                 	db	67	;'C'
   308   000E02  61                 	db	97	;'a'
   309   000E03  6C                 	db	108	;'l'
   310   000E04  69                 	db	105	;'i'
   311   000E05  62                 	db	98	;'b'
   312   000E06  72                 	db	114	;'r'
   313   000E07  61                 	db	97	;'a'
   314   000E08  74                 	db	116	;'t'
   315   000E09  69                 	db	105	;'i'
   316   000E0A  6E                 	db	110	;'n'
   317   000E0B  67                 	db	103	;'g'
   318   000E0C  20                 	db	32
   319   000E0D  63                 	db	99	;'c'
   320   000E0E  6F                 	db	111	;'o'
   321   000E0F  6C                 	db	108	;'l'
   322   000E10  6F                 	db	111	;'o'
   323   000E11  72                 	db	114	;'r'
   324   000E12  3A                 	db	58	;':'
   325   000E13  00                 	db	0
   326   000E14                     STR_13:
   327   000E14  43                 	db	67	;'C'
   328   000E15  68                 	db	104	;'h'
   329   000E16  65                 	db	101	;'e'
   330   000E17  63                 	db	99	;'c'
   331   000E18  6B                 	db	107	;'k'
   332   000E19  69                 	db	105	;'i'
   333   000E1A  6E                 	db	110	;'n'
   334   000E1B  67                 	db	103	;'g'
   335   000E1C  2E                 	db	46
   336   000E1D  2E                 	db	46
   337   000E1E  2E                 	db	46
   338   000E1F  00                 	db	0
   339   000E20                     STR_2:
   340   000E20  4E                 	db	78	;'N'
   341   000E21  61                 	db	97	;'a'
   342   000E22  6D                 	db	109	;'m'
   343   000E23  65                 	db	101	;'e'
   344   000E24  3A                 	db	58	;':'
   345   000E25  20                 	db	32
   346   000E26  00                 	db	0
   347   000E27                     STR_6:
   348   000E27  47                 	db	71	;'G'
   349   000E28  72                 	db	114	;'r'
   350   000E29  65                 	db	101	;'e'
   351   000E2A  65                 	db	101	;'e'
   352   000E2B  6E                 	db	110	;'n'
   353   000E2C  3A                 	db	58	;':'
   354   000E2D  00                 	db	0
   355   000E2E                     STR_10:
   356   000E2E  43                 	db	67	;'C'
   357   000E2F  6C                 	db	108	;'l'
   358   000E30  65                 	db	101	;'e'
   359   000E31  61                 	db	97	;'a'
   360   000E32  72                 	db	114	;'r'
   361   000E33  3A                 	db	58	;':'
   362   000E34  00                 	db	0
   363   000E35                     STR_8:
   364   000E35  42                 	db	66	;'B'
   365   000E36  6C                 	db	108	;'l'
   366   000E37  75                 	db	117	;'u'
   367   000E38  65                 	db	101	;'e'
   368   000E39  3A                 	db	58	;':'
   369   000E3A  00                 	db	0
   370   000E3B                     STR_4:
   371   000E3B  52                 	db	82	;'R'
   372   000E3C  65                 	db	101	;'e'
   373   000E3D  64                 	db	100	;'d'
   374   000E3E  3A                 	db	58	;':'
   375   000E3F  00                 	db	0
   376   000E40                     STR_3:
   377   000E40  25                 	db	37
   378   000E41  6C                 	db	108	;'l'
   379   000E42  64                 	db	100	;'d'
   380   000E43  00                 	db	0
   381   000E44                     STR_11:
   382   000E44  0A                 	db	10
   383   000E45  00                 	db	0
   384   000E46                     STR_12:
   385   000E46  0D                 	db	13
   386   000E47  00                 	db	0
   387   000E48  00                 	db	0	; dummy byte at the end
   388   000000                     
   389                           ; #config settings
   390                           
   391                           	psect	cinit
   392   001CF6                     __pcinit:
   393                           	callstack 0
   394   001CF6                     start_initialization:
   395                           	callstack 0
   396   001CF6                     __initialization:
   397                           	callstack 0
   398                           
   399                           ; Initialize objects allocated to BANK2 (25 bytes)
   400                           ; load TBLPTR registers with __pidataBANK2
   401   001CF6  0E6E               	movlw	low __pidataBANK2
   402   001CF8  6EF6               	movwf	tblptrl,c
   403   001CFA  0E20               	movlw	high __pidataBANK2
   404   001CFC  6EF7               	movwf	tblptrh,c
   405   001CFE  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   406   001D00  6EF8               	movwf	tblptru,c
   407   001D02  EE02  F0E1         	lfsr	0,__pdataBANK2
   408   001D06  EE10 F019          	lfsr	1,25
   409   001D0A                     copy_data0:
   410   001D0A  0009               	tblrd		*+
   411   001D0C  CFF5 FFEE          	movff	tablat,postinc0
   412   001D10  50E5               	movf	postdec1,w,c
   413   001D12  50E1               	movf	fsr1l,w,c
   414   001D14  E1FA               	bnz	copy_data0
   415                           
   416                           ; Initialize objects allocated to BANK1 (208 bytes)
   417                           ; load TBLPTR registers with __pidataBANK1
   418   001D16  0ED8               	movlw	low __pidataBANK1
   419   001D18  6EF6               	movwf	tblptrl,c
   420   001D1A  0E18               	movlw	high __pidataBANK1
   421   001D1C  6EF7               	movwf	tblptrh,c
   422   001D1E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   423   001D20  6EF8               	movwf	tblptru,c
   424   001D22  EE01  F000         	lfsr	0,__pdataBANK1
   425   001D26  EE10 F0D0          	lfsr	1,208
   426   001D2A                     copy_data1:
   427   001D2A  0009               	tblrd		*+
   428   001D2C  CFF5 FFEE          	movff	tablat,postinc0
   429   001D30  50E5               	movf	postdec1,w,c
   430   001D32  50E1               	movf	fsr1l,w,c
   431   001D34  E1FA               	bnz	copy_data1
   432                           
   433                           ; Clear objects allocated to BANK4 (200 bytes)
   434   001D36  EE04  F000         	lfsr	0,__pbssBANK4
   435   001D3A  0EC8               	movlw	200
   436   001D3C                     clear_0:
   437   001D3C  6AEE               	clrf	postinc0,c
   438   001D3E  06E8               	decf	wreg,f,c
   439   001D40  E1FD               	bnz	clear_0
   440                           
   441                           ; Clear objects allocated to BANK3 (92 bytes)
   442   001D42  EE03  F000         	lfsr	0,__pbssBANK3
   443   001D46  0E5C               	movlw	92
   444   001D48                     clear_1:
   445   001D48  6AEE               	clrf	postinc0,c
   446   001D4A  06E8               	decf	wreg,f,c
   447   001D4C  E1FD               	bnz	clear_1
   448                           
   449                           ; Clear objects allocated to BANK2 (225 bytes)
   450   001D4E  EE02  F000         	lfsr	0,__pbssBANK2
   451   001D52  0EE1               	movlw	225
   452   001D54                     clear_2:
   453   001D54  6AEE               	clrf	postinc0,c
   454   001D56  06E8               	decf	wreg,f,c
   455   001D58  E1FD               	bnz	clear_2
   456                           
   457                           ; Clear objects allocated to BANK1 (38 bytes)
   458   001D5A  EE01  F0D0         	lfsr	0,__pbssBANK1
   459   001D5E  0E26               	movlw	38
   460   001D60                     clear_3:
   461   001D60  6AEE               	clrf	postinc0,c
   462   001D62  06E8               	decf	wreg,f,c
   463   001D64  E1FD               	bnz	clear_3
   464                           
   465                           ; Clear objects allocated to COMRAM (3 bytes)
   466   001D66  6A49               	clrf	(__pbssCOMRAM+2)& (0+255),c
   467   001D68  6A48               	clrf	(__pbssCOMRAM+1)& (0+255),c
   468   001D6A  6A47               	clrf	__pbssCOMRAM& (0+255),c
   469   001D6C                     end_of_initialization:
   470                           	callstack 0
   471   001D6C                     __end_of__initialization:
   472                           	callstack 0
   473   001D6C  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   474   001D6E  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   475   001D70  0100               	movlb	0
   476   001D72  EFD4  F00C         	goto	_main	;jump to C main() function
   477                           
   478                           	psect	bssCOMRAM
   479   000047                     __pbssCOMRAM:
   480                           	callstack 0
   481   000047                     _TxBufReadCnt:
   482                           	callstack 0
   483   000047                     	ds	1
   484   000048                     _TxBufWriteCnt:
   485                           	callstack 0
   486   000048                     	ds	1
   487   000049                     _RxBufWriteCnt:
   488                           	callstack 0
   489   000049                     	ds	1
   490                           
   491                           	psect	bssBANK1
   492   0001D0                     __pbssBANK1:
   493                           	callstack 0
   494   0001D0                     _EUSART4RXbuf:
   495                           	callstack 0
   496   0001D0                     	ds	20
   497   0001E4                     _width:
   498                           	callstack 0
   499   0001E4                     	ds	2
   500   0001E6                     _prec:
   501                           	callstack 0
   502   0001E6                     	ds	2
   503   0001E8                     _pos:
   504                           	callstack 0
   505   0001E8                     	ds	2
   506   0001EA                     _squaresb4:
   507                           	callstack 0
   508   0001EA                     	ds	2
   509   0001EC                     _count:
   510                           	callstack 0
   511   0001EC                     	ds	2
   512   0001EE                     _newColorFound:
   513                           	callstack 0
   514   0001EE                     	ds	2
   515   0001F0                     _finished:
   516                           	callstack 0
   517   0001F0                     	ds	2
   518   0001F2                     _readingColor:
   519                           	callstack 0
   520   0001F2                     	ds	2
   521   0001F4                     _flags:
   522                           	callstack 0
   523   0001F4                     	ds	1
   524   0001F5                     _RxBufReadCnt:
   525                           	callstack 0
   526   0001F5                     	ds	1
   527                           
   528                           	psect	dataBANK1
   529   000100                     __pdataBANK1:
   530                           	callstack 0
   531   000100                     _whiteC:
   532                           	callstack 0
   533   000100                     	ds	25
   534   000119                     _lightBlue:
   535                           	callstack 0
   536   000119                     	ds	25
   537   000132                     _orange:
   538                           	callstack 0
   539   000132                     	ds	25
   540   00014B                     _pink:
   541                           	callstack 0
   542   00014B                     	ds	25
   543   000164                     _yellow:
   544                           	callstack 0
   545   000164                     	ds	25
   546   00017D                     _blue:
   547                           	callstack 0
   548   00017D                     	ds	25
   549   000196                     _green:
   550                           	callstack 0
   551   000196                     	ds	25
   552   0001AF                     _red:
   553                           	callstack 0
   554   0001AF                     	ds	25
   555   0001C8                     _minPow:
   556                           	callstack 0
   557   0001C8                     	ds	2
   558   0001CA                     _maxPowR:
   559                           	callstack 0
   560   0001CA                     	ds	2
   561   0001CC                     _maxPowL:
   562                           	callstack 0
   563   0001CC                     	ds	2
   564   0001CE                     _incidenceThresh:
   565                           	callstack 0
   566   0001CE                     	ds	2
   567                           
   568                           	psect	bssBANK2
   569   000200                     __pbssBANK2:
   570                           	callstack 0
   571   000200                     _calibColors:
   572                           	callstack 0
   573   000200                     	ds	225
   574                           
   575                           	psect	dataBANK2
   576   0002E1                     __pdataBANK2:
   577                           	callstack 0
   578   0002E1                     _blackC:
   579                           	callstack 0
   580   0002E1                     	ds	25
   581                           
   582                           	psect	bssBANK3
   583   000300                     __pbssBANK3:
   584                           	callstack 0
   585   000300                     _EUSART4TXbuf:
   586                           	callstack 0
   587   000300                     	ds	60
   588   00033C                     _dbuf:
   589                           	callstack 0
   590   00033C                     	ds	32
   591                           
   592                           	psect	bssBANK4
   593   000400                     __pbssBANK4:
   594                           	callstack 0
   595   000400                     _hist:
   596                           	callstack 0
   597   000400                     	ds	200
   598                           
   599                           	psect	cstackBANK3
   600   00035C                     __pcstackBANK3:
   601                           	callstack 0
   602   00035C                     main@currColor:
   603                           	callstack 0
   604                           
   605                           ; 25 bytes @ 0x0
   606   00035C                     	ds	25
   607   000375                     main@Vals:
   608                           	callstack 0
   609                           
   610                           ; 16 bytes @ 0x19
   611   000375                     	ds	16
   612                           
   613                           	psect	cstackBANK0
   614   000060                     __pcstackBANK0:
   615                           	callstack 0
   616   000060                     checkColor@currColor:
   617                           	callstack 0
   618                           
   619                           ; 25 bytes @ 0x0
   620   000060                     	ds	25
   621   000079                     checkColor@prevAbsDiff:
   622                           	callstack 0
   623                           
   624                           ; 4 bytes @ 0x19
   625   000079                     	ds	4
   626   00007D                     checkColor@absDiff:
   627                           	callstack 0
   628                           
   629                           ; 4 bytes @ 0x1D
   630   00007D                     	ds	4
   631   000081                     checkColor@i:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x21
   635   000081                     	ds	2
   636   000083                     checkColor@Vals:
   637                           	callstack 0
   638                           
   639                           ; 16 bytes @ 0x23
   640   000083                     	ds	16
   641   000093                     checkColor@colorDiff:
   642                           	callstack 0
   643                           
   644                           ; 16 bytes @ 0x33
   645   000093                     	ds	16
   646   0000A3                     serialColor@currColor:
   647                           	callstack 0
   648                           
   649                           ; 25 bytes @ 0x43
   650   0000A3                     	ds	25
   651   0000BC                     serialColor@testColor:
   652                           	callstack 0
   653                           
   654                           ; 50 bytes @ 0x5C
   655   0000BC                     	ds	50
   656                           
   657                           	psect	cstackCOMRAM
   658   000001                     __pcstackCOMRAM:
   659                           	callstack 0
   660   000001                     ??_getCharFromTxBuf:
   661   000001                     
   662                           ; 1 bytes @ 0x0
   663   000001                     	ds	2
   664   000003                     ??_HighISR:
   665                           
   666                           ; 1 bytes @ 0x2
   667   000003                     	ds	2
   668   000005                     ??_I2C_2_Master_Idle:
   669   000005                     ?___wmul:
   670                           	callstack 0
   671   000005                     ?___almod:
   672                           	callstack 0
   673   000005                     ?_mLinit:
   674                           	callstack 0
   675   000005                     ?_mRinit:
   676                           	callstack 0
   677   000005                     triLED_tog@state:
   678                           	callstack 0
   679   000005                     initDCmotorsPWM@PWMperiod:
   680                           	callstack 0
   681   000005                     sendCharSerial4@charToSend:
   682                           	callstack 0
   683   000005                     RGBC2color@readVals:
   684                           	callstack 0
   685   000005                     ___wmul@multiplier:
   686                           	callstack 0
   687   000005                     fputc@c:
   688                           	callstack 0
   689   000005                     ___almod@dividend:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0x4
   693   000005                     	ds	1
   694   000006                     ??_I2C_2_Master_Read:
   695   000006                     I2C_2_Master_Write@data_byte:
   696                           	callstack 0
   697   000006                     sendStringSerial4@string:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x5
   701   000006                     	ds	1
   702   000007                     color_writetoaddr@value:
   703                           	callstack 0
   704   000007                     I2C_2_Master_Read@ack:
   705                           	callstack 0
   706   000007                     fputc@fp:
   707                           	callstack 0
   708   000007                     RGBC2color@Vals:
   709                           	callstack 0
   710   000007                     ___wmul@multiplicand:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x6
   714   000007                     	ds	1
   715   000008                     ??_fputc:
   716   000008                     color_writetoaddr@address:
   717                           	callstack 0
   718   000008                     I2C_2_Master_Read@tmp:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0x7
   722   000008                     	ds	1
   723   000009                     ??_color_click_init:
   724   000009                     color_read_all@readVals:
   725                           	callstack 0
   726   000009                     ___wmul@product:
   727                           	callstack 0
   728   000009                     ___almod@divisor:
   729                           	callstack 0
   730                           
   731                           ; 4 bytes @ 0x8
   732   000009                     	ds	2
   733   00000B                     ??_color_read_all:
   734   00000B                     ?___aldiv:
   735                           	callstack 0
   736   00000B                     ___aldiv@dividend:
   737                           	callstack 0
   738                           
   739                           ; 4 bytes @ 0xA
   740   00000B                     	ds	2
   741   00000D                     ___almod@counter:
   742                           	callstack 0
   743   00000D                     mLinit@mL:
   744                           	callstack 0
   745   00000D                     mRinit@mR:
   746                           	callstack 0
   747                           
   748                           ; 8 bytes @ 0xC
   749   00000D                     	ds	1
   750   00000E                     ___almod@sign:
   751                           	callstack 0
   752                           
   753                           ; 1 bytes @ 0xD
   754   00000E                     	ds	1
   755   00000F                     ?_abs:
   756                           	callstack 0
   757   00000F                     abs@a:
   758                           	callstack 0
   759   00000F                     ___aldiv@divisor:
   760                           	callstack 0
   761                           
   762                           ; 4 bytes @ 0xE
   763   00000F                     	ds	2
   764   000011                     ??_abs:
   765                           
   766                           ; 1 bytes @ 0x10
   767   000011                     	ds	1
   768   000012                     color_read_all@tmp:
   769                           	callstack 0
   770                           
   771                           ; 16 bytes @ 0x11
   772   000012                     	ds	1
   773   000013                     ___aldiv@counter:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0x12
   777   000013                     	ds	1
   778   000014                     ___aldiv@sign:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x13
   782   000014                     	ds	1
   783   000015                     ___aldiv@quotient:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x14
   787   000015                     	ds	4
   788   000019                     vfpfcnvrt@fp:
   789                           	callstack 0
   790                           
   791                           ; 1 bytes @ 0x18
   792   000019                     	ds	1
   793   00001A                     vfpfcnvrt@fmt:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x19
   797   00001A                     	ds	1
   798   00001B                     vfpfcnvrt@ap:
   799                           	callstack 0
   800                           
   801                           ; 1 bytes @ 0x1A
   802   00001B                     	ds	1
   803   00001C                     ??_vfpfcnvrt:
   804                           
   805                           ; 1 bytes @ 0x1B
   806   00001C                     	ds	2
   807   00001E                     vfpfcnvrt@done:
   808                           	callstack 0
   809                           
   810                           ; 1 bytes @ 0x1D
   811   00001E                     	ds	1
   812   00001F                     vfpfcnvrt@convarg:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0x1E
   816   00001F                     	ds	3
   817   000022                     ?_checkColor:
   818                           	callstack 0
   819                           
   820                           ; 25 bytes @ 0x21
   821   000022                     	ds	1
   822   000023                     vfpfcnvrt@cp:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x22
   826   000023                     	ds	1
   827   000024                     vfpfcnvrt@c:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x23
   831   000024                     	ds	1
   832   000025                     ?_vfprintf:
   833                           	callstack 0
   834   000025                     vfprintf@fp:
   835                           	callstack 0
   836                           
   837                           ; 1 bytes @ 0x24
   838   000025                     	ds	1
   839   000026                     vfprintf@fmt:
   840                           	callstack 0
   841                           
   842                           ; 1 bytes @ 0x25
   843   000026                     	ds	1
   844   000027                     vfprintf@ap:
   845                           	callstack 0
   846                           
   847                           ; 1 bytes @ 0x26
   848   000027                     	ds	1
   849   000028                     vfprintf@cfmt:
   850                           	callstack 0
   851                           
   852                           ; 1 bytes @ 0x27
   853   000028                     	ds	1
   854   000029                     ?_sprintf:
   855                           	callstack 0
   856   000029                     sprintf@s:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x28
   860   000029                     	ds	1
   861   00002A                     sprintf@fmt:
   862                           	callstack 0
   863                           
   864                           ; 1 bytes @ 0x29
   865   00002A                     	ds	5
   866   00002F                     sprintf@ap:
   867                           	callstack 0
   868                           
   869                           ; 1 bytes @ 0x2E
   870   00002F                     	ds	1
   871   000030                     sprintf@f:
   872                           	callstack 0
   873                           
   874                           ; 12 bytes @ 0x2F
   875   000030                     	ds	11
   876   00003B                     ??_checkColor:
   877                           
   878                           ; 1 bytes @ 0x3A
   879   00003B                     	ds	8
   880   000043                     ??_serialColor:
   881                           
   882                           ; 1 bytes @ 0x42
   883   000043                     	ds	2
   884   000045                     ??_main:
   885                           
   886                           ; 1 bytes @ 0x44
   887   000045                     	ds	2
   888                           
   889 ;;
   890 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   891 ;;
   892 ;; *************** function _main *****************
   893 ;; Defined at:
   894 ;;		line 27 in file "main.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;  currColor      25    0[BANK3 ] struct color
   899 ;;  Vals           16   25[BANK3 ] struct RGBC
   900 ;;  mR              8    0        struct DC_motor
   901 ;;  mL              8    0        struct DC_motor
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   912 ;;      Locals:         0       0       0       0      41       0       0       0       0       0       0       0       
      +0       0       0
   913 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   914 ;;      Totals:         2       0       0       0      41       0       0       0       0       0       0       0       
      +0       0       0
   915 ;;Total ram usage:       43 bytes
   916 ;; Hardware stack levels required when called: 8
   917 ;; This function calls:
   918 ;;		_I2C_2_Master_Init
   919 ;;		_Interrupts_init
   920 ;;		_RGBC2color
   921 ;;		_checkColor
   922 ;;		_color_click_init
   923 ;;		_color_read_all
   924 ;;		_initCalibColors
   925 ;;		_initDCmotorsPWM
   926 ;;		_initUSART4
   927 ;;		_mLinit
   928 ;;		_mRinit
   929 ;;		_sendStringSerial4
   930 ;;		_serialColor
   931 ;;		_triLED_tog
   932 ;; This function is called by:
   933 ;;		Startup code after reset
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text0
   938   0019A8                     __ptext0:
   939                           	callstack 0
   940   0019A8                     _main:
   941                           	callstack 23
   942   0019A8                     
   943                           ;main.c: 29:     initUSART4();
   944   0019A8  EC16  F010         	call	_initUSART4	;wreg free
   945   0019AC                     
   946                           ;main.c: 31:     Interrupts_init();
   947   0019AC  EC62  F010         	call	_Interrupts_init	;wreg free
   948   0019B0                     
   949                           ;main.c: 33:     I2C_2_Master_Init();
   950   0019B0  ECC6  F00F         	call	_I2C_2_Master_Init	;wreg free
   951   0019B4                     
   952                           ;main.c: 35:     color_click_init();
   953   0019B4  EC7C  F00F         	call	_color_click_init	;wreg free
   954   0019B8                     
   955                           ;main.c: 37:     initCalibColors();
   956   0019B8  EC8B  F00D         	call	_initCalibColors	;wreg free
   957   0019BC  EC62  F00F         	call	_mLinit	;wreg free
   958   0019C0  EC48  F00F         	call	_mRinit	;wreg free
   959   0019C4                     
   960                           ;main.c: 44:     initDCmotorsPWM(99);
   961   0019C4  0E63               	movlw	99
   962   0019C6  ECDD  F00D         	call	_initDCmotorsPWM
   963   0019CA                     l4329:
   964                           
   965                           ;main.c: 59:         triLED_tog(1);
   966   0019CA  0E01               	movlw	1
   967   0019CC  ECDB  F00F         	call	_triLED_tog
   968   0019D0                     
   969                           ;main.c: 60:         color_read_all(&Vals);
   970   0019D0  0E75               	movlw	low main@Vals
   971   0019D2  6E09               	movwf	color_read_all@readVals^0,c
   972   0019D4  0E03               	movlw	high main@Vals
   973   0019D6  6E0A               	movwf	(color_read_all@readVals+1)^0,c
   974   0019D8  ECFB  F009         	call	_color_read_all	;wreg free
   975   0019DC                     
   976                           ;main.c: 61:         RGBC2color(&Vals,&currColor);
   977   0019DC  0E75               	movlw	low main@Vals
   978   0019DE  6E05               	movwf	RGBC2color@readVals^0,c
   979   0019E0  0E03               	movlw	high main@Vals
   980   0019E2  6E06               	movwf	(RGBC2color@readVals+1)^0,c
   981   0019E4  0E5C               	movlw	low main@currColor
   982   0019E6  6E07               	movwf	RGBC2color@Vals^0,c
   983   0019E8  0E03               	movlw	high main@currColor
   984   0019EA  6E08               	movwf	(RGBC2color@Vals+1)^0,c
   985   0019EC  EC2C  F00E         	call	_RGBC2color	;wreg free
   986   0019F0                     
   987                           ;main.c: 62:         serialColor(currColor);
   988   0019F0  EE23  F05C         	lfsr	2,main@currColor
   989   0019F4  EE00  F0A3         	lfsr	0,serialColor@currColor
   990   0019F8  0E18               	movlw	24
   991   0019FA                     u3551:
   992   0019FA  CFDB FFEB          	movff	plusw2,plusw0
   993   0019FE  06E8               	decf	wreg,f,c
   994   001A00  E2FC               	bc	u3551
   995   001A02  ECDB  F00A         	call	_serialColor	;wreg free
   996   001A06                     
   997                           ;main.c: 63:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   998   001A06  0E52               	movlw	82
   999   001A08  6E46               	movwf	(??_main+1)^0,c
  1000   001A0A  0E2B               	movlw	43
  1001   001A0C  6E45               	movwf	??_main^0,c
  1002   001A0E  0E00               	movlw	0
  1003   001A10                     u3577:
  1004   001A10  2EE8               	decfsz	wreg,f,c
  1005   001A12  D7FE               	bra	u3577
  1006   001A14  2E45               	decfsz	??_main^0,f,c
  1007   001A16  D7FC               	bra	u3577
  1008   001A18  2E46               	decfsz	(??_main+1)^0,f,c
  1009   001A1A  D7FA               	bra	u3577
  1010   001A1C  D000               	nop2	
  1011   001A1E                     
  1012                           ;main.c: 64:         sendStringSerial4("Checking...");
  1013   001A1E  0E14               	movlw	low STR_13
  1014   001A20  6E06               	movwf	sendStringSerial4@string^0,c
  1015   001A22  5006               	movf	sendStringSerial4@string^0,w,c
  1016   001A24  A4D8               	btfss	status,2,c
  1017   001A26  0E0E               	movlw	high __smallconst
  1018   001A28  6E07               	movwf	(sendStringSerial4@string+1)^0,c
  1019   001A2A  ECBB  F00E         	call	_sendStringSerial4	;wreg free
  1020   001A2E                     
  1021                           ;main.c: 65:         serialColor(checkColor());
  1022   001A2E  EC25  F007         	call	_checkColor	;wreg free
  1023   001A32  CFE9 FFD9          	movff	fsr0l,fsr2l
  1024   001A36  CFEA FFDA          	movff	fsr0h,fsr2h
  1025   001A3A  EE00  F0A3         	lfsr	0,serialColor@currColor
  1026   001A3E  0E18               	movlw	24
  1027   001A40                     u3561:
  1028   001A40  CFDB FFEB          	movff	plusw2,plusw0
  1029   001A44  06E8               	decf	wreg,f,c
  1030   001A46  E2FC               	bc	u3561
  1031   001A48  ECDB  F00A         	call	_serialColor	;wreg free
  1032   001A4C                     
  1033                           ;main.c: 66:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1034   001A4C  0E52               	movlw	82
  1035   001A4E  6E46               	movwf	(??_main+1)^0,c
  1036   001A50  0E2B               	movlw	43
  1037   001A52  6E45               	movwf	??_main^0,c
  1038   001A54  0E00               	movlw	0
  1039   001A56                     u3587:
  1040   001A56  2EE8               	decfsz	wreg,f,c
  1041   001A58  D7FE               	bra	u3587
  1042   001A5A  2E45               	decfsz	??_main^0,f,c
  1043   001A5C  D7FC               	bra	u3587
  1044   001A5E  2E46               	decfsz	(??_main+1)^0,f,c
  1045   001A60  D7FA               	bra	u3587
  1046   001A62  D000               	nop2	
  1047   001A64  EFE5  F00C         	goto	l4329
  1048   001A68  EF27  F000         	goto	start
  1049   001A6C                     __end_of_main:
  1050                           	callstack 0
  1051                           
  1052 ;; *************** function _serialColor *****************
  1053 ;; Defined at:
  1054 ;;		line 116 in file "serial.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;  currColor      25   67[BANK0 ] struct color
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;  testColor      50   92[BANK0 ] unsigned char [50]
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      void 
  1061 ;; Registers used:
  1062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1068 ;;      Params:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1069 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1070 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1071 ;;      Totals:         2      75       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1072 ;;Total ram usage:       77 bytes
  1073 ;; Hardware stack levels used: 1
  1074 ;; Hardware stack levels required when called: 7
  1075 ;; This function calls:
  1076 ;;		_sendCharSerial4
  1077 ;;		_sendStringSerial4
  1078 ;;		_sprintf
  1079 ;; This function is called by:
  1080 ;;		_main
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text1
  1085   0015B6                     __ptext1:
  1086                           	callstack 0
  1087   0015B6                     _serialColor:
  1088                           	callstack 23
  1089   0015B6                     
  1090                           ;serial.c: 118:     char testColor[50];;serial.c: 119:     sendStringSerial4("Name: ");
  1091   0015B6  0E20               	movlw	low STR_2
  1092   0015B8  6E06               	movwf	sendStringSerial4@string^0,c
  1093   0015BA  5006               	movf	sendStringSerial4@string^0,w,c
  1094   0015BC  A4D8               	btfss	status,2,c
  1095   0015BE  0E0E               	movlw	high __smallconst
  1096   0015C0  6E07               	movwf	(sendStringSerial4@string+1)^0,c
  1097   0015C2  ECBB  F00E         	call	_sendStringSerial4	;wreg free
  1098   0015C6                     
  1099                           ;serial.c: 120:  sendCharSerial4(currColor.name);
  1100   0015C6  0100               	movlb	0	; () banked
  1101   0015C8  51A3               	movf	serialColor@currColor& (0+255),w,b
  1102   0015CA  EC44  F010         	call	_sendCharSerial4
  1103   0015CE                     
  1104                           ;serial.c: 122:  sprintf(testColor, "%ld",currColor.red);
  1105   0015CE  0EBC               	movlw	low serialColor@testColor
  1106   0015D0  6E29               	movwf	sprintf@s^0,c
  1107   0015D2  0E40               	movlw	low STR_3
  1108   0015D4  6E2A               	movwf	sprintf@fmt^0,c
  1109   0015D6  C0A4  F02B         	movff	serialColor@currColor+1,?_sprintf+2
  1110   0015DA  C0A5  F02C         	movff	serialColor@currColor+2,?_sprintf+3
  1111   0015DE  C0A6  F02D         	movff	serialColor@currColor+3,?_sprintf+4
  1112   0015E2  C0A7  F02E         	movff	serialColor@currColor+4,?_sprintf+5
  1113   0015E6  EC2E  F00F         	call	_sprintf	;wreg free
  1114   0015EA                     
  1115                           ;serial.c: 123:     sendStringSerial4("Red:");
  1116   0015EA  0E3B               	movlw	low STR_4
  1117   0015EC  6E06               	movwf	sendStringSerial4@string^0,c
  1118   0015EE  5006               	movf	sendStringSerial4@string^0,w,c
  1119   0015F0  A4D8               	btfss	status,2,c
  1120   0015F2  0E0E               	movlw	high __smallconst
  1121   0015F4  6E07               	movwf	(sendStringSerial4@string+1)^0,c
  1122   0015F6  ECBB  F00E         	call	_sendStringSerial4	;wreg free
  1123   0015FA                     
  1124                           ;serial.c: 124:     sendStringSerial4(testColor);
  1125   0015FA  0EBC               	movlw	low serialColor@testColor
  1126   0015FC  6E06               	movwf	sendStringSerial4@string^0,c
  1127   0015FE  6A07               	clrf	(sendStringSerial4@string+1)^0,c
  1128   001600  ECBB  F00E         	call	_sendStringSerial4	;wreg free
  1129   001604                     
  1130                           ;serial.c: 126:     sprintf(testColor, "%ld",currColor.green);
  1131   001604  0EBC               	movlw	low serialColor@testColor
  1132   001606  6E29               	movwf	sprintf@s^0,c
  1133   001608  0E40               	movlw	low STR_3
  1134   00160A  6E2A               	movwf	sprintf@fmt^0,c
  1135   00160C  C0A8  F02B         	movff	serialColor@currColor+5,?_sprintf+2
  1136   001610  C0A9  F02C         	movff	serialColor@currColor+6,?_sprintf+3
  1137   001614  C0AA  F02D         	movff	serialColor@currColor+7,?_sprintf+4
  1138   001618  C0AB  F02E         	movff	serialColor@currColor+8,?_sprintf+5
  1139   00161C  EC2E  F00F         	call	_sprintf	;wreg free
  1140   001620                     
  1141                           ;serial.c: 127:     sendStringSerial4("Green:");
  1142   001620  0E27               	movlw	low STR_6
  1143   001622  6E06               	movwf	sendStringSerial4@string^0,c
  1144   001624  5006               	movf	sendStringSerial4@string^0,w,c
  1145   001626  A4D8               	btfss	status,2,c
  1146   001628  0E0E               	movlw	high __smallconst
  1147   00162A  6E07               	movwf	(sendStringSerial4@string+1)^0,c
  1148   00162C  ECBB  F00E         	call	_sendStringSerial4	;wreg free
  1149   001630                     
  1150                           ;serial.c: 128:     sendStringSerial4(testColor);
  1151   001630  0EBC               	movlw	low serialColor@testColor
  1152   001632  6E06               	movwf	sendStringSerial4@string^0,c
  1153   001634  6A07               	clrf	(sendStringSerial4@string+1)^0,c
  1154   001636  ECBB  F00E         	call	_sendStringSerial4	;wreg free
  1155   00163A                     
  1156                           ;serial.c: 130:     sprintf(testColor, "%ld",currColor.blue);
  1157   00163A  0EBC               	movlw	low serialColor@testColor
  1158   00163C  6E29               	movwf	sprintf@s^0,c
  1159   00163E  0E40               	movlw	low STR_3
  1160   001640  6E2A               	movwf	sprintf@fmt^0,c
  1161   001642  C0AC  F02B         	movff	serialColor@currColor+9,?_sprintf+2
  1162   001646  C0AD  F02C         	movff	serialColor@currColor+10,?_sprintf+3
  1163   00164A  C0AE  F02D         	movff	serialColor@currColor+11,?_sprintf+4
  1164   00164E  C0AF  F02E         	movff	serialColor@currColor+12,?_sprintf+5
  1165   001652  EC2E  F00F         	call	_sprintf	;wreg free
  1166   001656                     
  1167                           ;serial.c: 131:     sendStringSerial4("Blue:");
  1168   001656  0E35               	movlw	low STR_8
  1169   001658  6E06               	movwf	sendStringSerial4@string^0,c
  1170   00165A  5006               	movf	sendStringSerial4@string^0,w,c
  1171   00165C  A4D8               	btfss	status,2,c
  1172   00165E  0E0E               	movlw	high __smallconst
  1173   001660  6E07               	movwf	(sendStringSerial4@string+1)^0,c
  1174   001662  ECBB  F00E         	call	_sendStringSerial4	;wreg free
  1175   001666                     
  1176                           ;serial.c: 132:     sendStringSerial4(testColor);
  1177   001666  0EBC               	movlw	low serialColor@testColor
  1178   001668  6E06               	movwf	sendStringSerial4@string^0,c
  1179   00166A  6A07               	clrf	(sendStringSerial4@string+1)^0,c
  1180   00166C  ECBB  F00E         	call	_sendStringSerial4	;wreg free
  1181   001670                     
  1182                           ;serial.c: 134:     sprintf(testColor, "%ld",currColor.clear);
  1183   001670  0EBC               	movlw	low serialColor@testColor
  1184   001672  6E29               	movwf	sprintf@s^0,c
  1185   001674  0E40               	movlw	low STR_3
  1186   001676  6E2A               	movwf	sprintf@fmt^0,c
  1187   001678  C0B0  F02B         	movff	serialColor@currColor+13,?_sprintf+2
  1188   00167C  C0B1  F02C         	movff	serialColor@currColor+14,?_sprintf+3
  1189   001680  C0B2  F02D         	movff	serialColor@currColor+15,?_sprintf+4
  1190   001684  C0B3  F02E         	movff	serialColor@currColor+16,?_sprintf+5
  1191   001688  EC2E  F00F         	call	_sprintf	;wreg free
  1192   00168C                     
  1193                           ;serial.c: 135:     sendStringSerial4("Clear:");
  1194   00168C  0E2E               	movlw	low STR_10
  1195   00168E  6E06               	movwf	sendStringSerial4@string^0,c
  1196   001690  5006               	movf	sendStringSerial4@string^0,w,c
  1197   001692  A4D8               	btfss	status,2,c
  1198   001694  0E0E               	movlw	high __smallconst
  1199   001696  6E07               	movwf	(sendStringSerial4@string+1)^0,c
  1200   001698  ECBB  F00E         	call	_sendStringSerial4	;wreg free
  1201   00169C                     
  1202                           ;serial.c: 136:     sendStringSerial4(testColor);
  1203   00169C  0EBC               	movlw	low serialColor@testColor
  1204   00169E  6E06               	movwf	sendStringSerial4@string^0,c
  1205   0016A0  6A07               	clrf	(sendStringSerial4@string+1)^0,c
  1206   0016A2  ECBB  F00E         	call	_sendStringSerial4	;wreg free
  1207   0016A6                     
  1208                           ;serial.c: 139:     sendStringSerial4("\n");
  1209   0016A6  0E44               	movlw	low STR_11
  1210   0016A8  6E06               	movwf	sendStringSerial4@string^0,c
  1211   0016AA  5006               	movf	sendStringSerial4@string^0,w,c
  1212   0016AC  A4D8               	btfss	status,2,c
  1213   0016AE  0E0E               	movlw	high __smallconst
  1214   0016B0  6E07               	movwf	(sendStringSerial4@string+1)^0,c
  1215   0016B2  ECBB  F00E         	call	_sendStringSerial4	;wreg free
  1216   0016B6                     
  1217                           ;serial.c: 140:     sendStringSerial4("\r");
  1218   0016B6  0E46               	movlw	low STR_12
  1219   0016B8  6E06               	movwf	sendStringSerial4@string^0,c
  1220   0016BA  5006               	movf	sendStringSerial4@string^0,w,c
  1221   0016BC  A4D8               	btfss	status,2,c
  1222   0016BE  0E0E               	movlw	high __smallconst
  1223   0016C0  6E07               	movwf	(sendStringSerial4@string+1)^0,c
  1224   0016C2  ECBB  F00E         	call	_sendStringSerial4	;wreg free
  1225   0016C6                     
  1226                           ;serial.c: 141:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1227   0016C6  0E52               	movlw	82
  1228   0016C8  6E44               	movwf	(??_serialColor+1)^0,c
  1229   0016CA  0E2B               	movlw	43
  1230   0016CC  6E43               	movwf	??_serialColor^0,c
  1231   0016CE  0E00               	movlw	0
  1232   0016D0                     u3597:
  1233   0016D0  2EE8               	decfsz	wreg,f,c
  1234   0016D2  D7FE               	bra	u3597
  1235   0016D4  2E43               	decfsz	??_serialColor^0,f,c
  1236   0016D6  D7FC               	bra	u3597
  1237   0016D8  2E44               	decfsz	(??_serialColor+1)^0,f,c
  1238   0016DA  D7FA               	bra	u3597
  1239   0016DC  D000               	nop2	
  1240   0016DE  0012               	return		;funcret
  1241   0016E0                     __end_of_serialColor:
  1242                           	callstack 0
  1243                           
  1244 ;; *************** function _sprintf *****************
  1245 ;; Defined at:
  1246 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;  s               1   40[COMRAM] PTR unsigned char 
  1249 ;;		 -> serialColor@testColor(50), 
  1250 ;;  fmt             1   41[COMRAM] PTR const unsigned char 
  1251 ;;		 -> STR_9(4), STR_7(4), STR_5(4), STR_3(4), 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  f              12   47[COMRAM] struct _IO_FILE
  1254 ;;  ret             2    0        int 
  1255 ;;  ap              1   46[COMRAM] PTR void [1]
  1256 ;;		 -> ?_sprintf(2), 
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  2   40[COMRAM] int 
  1259 ;; Registers used:
  1260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1266 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1267 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1269 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1270 ;;Total ram usage:       19 bytes
  1271 ;; Hardware stack levels used: 1
  1272 ;; Hardware stack levels required when called: 6
  1273 ;; This function calls:
  1274 ;;		_vfprintf
  1275 ;; This function is called by:
  1276 ;;		_serialColor
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text2
  1281   001E5C                     __ptext2:
  1282                           	callstack 0
  1283   001E5C                     _sprintf:
  1284                           	callstack 23
  1285   001E5C  0E2B               	movlw	low (?_sprintf+2)
  1286   001E5E  6E2F               	movwf	sprintf@ap^0,c
  1287   001E60  C029  F030         	movff	sprintf@s,sprintf@f
  1288   001E64  0E00               	movlw	0
  1289   001E66  6E34               	movwf	(sprintf@f+4)^0,c
  1290   001E68  0E00               	movlw	0
  1291   001E6A  6E33               	movwf	(sprintf@f+3)^0,c
  1292   001E6C  0E00               	movlw	0
  1293   001E6E  6E3B               	movwf	(sprintf@f+11)^0,c
  1294   001E70  0E00               	movlw	0
  1295   001E72  6E3A               	movwf	(sprintf@f+10)^0,c
  1296   001E74  0E30               	movlw	low sprintf@f
  1297   001E76  6E25               	movwf	vfprintf@fp^0,c
  1298   001E78  C02A  F026         	movff	sprintf@fmt,vfprintf@fmt
  1299   001E7C  0E2F               	movlw	low sprintf@ap
  1300   001E7E  6E27               	movwf	vfprintf@ap^0,c
  1301   001E80  ECEC  F00E         	call	_vfprintf	;wreg free
  1302   001E84  5029               	movf	sprintf@s^0,w,c
  1303   001E86  2433               	addwf	(sprintf@f+3)^0,w,c
  1304   001E88  6ED9               	movwf	fsr2l,c
  1305   001E8A  6ADA               	clrf	fsr2h,c
  1306   001E8C  6ADF               	clrf	indf2,c
  1307   001E8E  0012               	return		;funcret
  1308   001E90                     __end_of_sprintf:
  1309                           	callstack 0
  1310                           
  1311 ;; *************** function _vfprintf *****************
  1312 ;; Defined at:
  1313 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;  fp              1   36[COMRAM] PTR struct _IO_FILE
  1316 ;;		 -> sprintf@f(12), 
  1317 ;;  fmt             1   37[COMRAM] PTR const unsigned char 
  1318 ;;		 -> STR_9(4), STR_7(4), STR_5(4), STR_3(4), 
  1319 ;;  ap              1   38[COMRAM] PTR PTR void 
  1320 ;;		 -> sprintf@ap(1), 
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  cfmt            1   39[COMRAM] PTR unsigned char 
  1323 ;;		 -> STR_9(4), STR_7(4), STR_5(4), STR_3(4), 
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  2   36[COMRAM] int 
  1326 ;; Registers used:
  1327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1333 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1334 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1336 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1337 ;;Total ram usage:        4 bytes
  1338 ;; Hardware stack levels used: 1
  1339 ;; Hardware stack levels required when called: 5
  1340 ;; This function calls:
  1341 ;;		_vfpfcnvrt
  1342 ;; This function is called by:
  1343 ;;		_sprintf
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           	psect	text3
  1348   001DD8                     __ptext3:
  1349                           	callstack 0
  1350   001DD8                     _vfprintf:
  1351                           	callstack 23
  1352   001DD8                     
  1353                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1354   001DD8  C026  F028         	movff	vfprintf@fmt,vfprintf@cfmt
  1355                           
  1356                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1357   001DDC  EFF8  F00E         	goto	l3671
  1358   001DE0                     l3669:
  1359                           
  1360                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1361   001DE0  C025  F019         	movff	vfprintf@fp,vfpfcnvrt@fp
  1362   001DE4  0E28               	movlw	low vfprintf@cfmt
  1363   001DE6  6E1A               	movwf	vfpfcnvrt@fmt^0,c
  1364   001DE8  C027  F01B         	movff	vfprintf@ap,vfpfcnvrt@ap
  1365   001DEC  EC9B  F008         	call	_vfpfcnvrt	;wreg free
  1366   001DF0                     l3671:
  1367                           
  1368                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1369   001DF0  C028  FFF6         	movff	vfprintf@cfmt,tblptrl
  1370   001DF4                     	if	1	;There is more than 1 active tblptr byte
  1371   001DF4  0E0E               	movlw	high __smallconst
  1372   001DF6  6EF7               	movwf	tblptrh,c
  1373   001DF8                     	endif
  1374   001DF8                     	if	0	;tblptru may be non-zero
  1375   001DF8                     	endif
  1376   001DF8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1377   001DF8  0E00               	movlw	low (__smallconst shr (0+16))
  1378   001DFA  6EF8               	movwf	tblptru,c
  1379   001DFC                     	endif
  1380   001DFC  0008               	tblrd		*
  1381   001DFE  50F5               	movf	tablat,w,c
  1382   001E00  0900               	iorlw	0
  1383   001E02  A4D8               	btfss	status,2,c
  1384   001E04  EF06  F00F         	goto	u2711
  1385   001E08  EF08  F00F         	goto	u2710
  1386   001E0C                     u2711:
  1387   001E0C  EFF0  F00E         	goto	l3669
  1388   001E10                     u2710:
  1389   001E10                     
  1390                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1391   001E10  0E00               	movlw	0
  1392   001E12  6E26               	movwf	(?_vfprintf+1)^0,c
  1393   001E14  0E00               	movlw	0
  1394   001E16  6E25               	movwf	?_vfprintf^0,c
  1395   001E18  0012               	return		;funcret
  1396   001E1A                     __end_of_vfprintf:
  1397                           	callstack 0
  1398                           
  1399 ;; *************** function _vfpfcnvrt *****************
  1400 ;; Defined at:
  1401 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  1404 ;;		 -> sprintf@f(12), 
  1405 ;;  fmt             1   25[COMRAM] PTR PTR unsigned char 
  1406 ;;		 -> vfprintf@cfmt(1), 
  1407 ;;  ap              1   26[COMRAM] PTR PTR void 
  1408 ;;		 -> sprintf@ap(1), 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  convarg         4   30[COMRAM] struct .
  1411 ;;  c               1   35[COMRAM] unsigned char 
  1412 ;;  cp              1   34[COMRAM] PTR unsigned char 
  1413 ;;		 -> STR_9(4), STR_7(4), STR_5(4), STR_3(4), 
  1414 ;;  done            1   29[COMRAM] _Bool 
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      void 
  1417 ;; Registers used:
  1418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1424 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1425 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1426 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1427 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1428 ;;Total ram usage:       12 bytes
  1429 ;; Hardware stack levels used: 1
  1430 ;; Hardware stack levels required when called: 4
  1431 ;; This function calls:
  1432 ;;		___aldiv
  1433 ;;		___almod
  1434 ;;		_abs
  1435 ;;		_fputc
  1436 ;; This function is called by:
  1437 ;;		_vfprintf
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text4
  1442   001136                     __ptext4:
  1443                           	callstack 0
  1444   001136                     _vfpfcnvrt:
  1445                           	callstack 23
  1446   001136                     
  1447                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1448   001136  501A               	movf	vfpfcnvrt@fmt^0,w,c
  1449   001138  6ED9               	movwf	fsr2l,c
  1450   00113A  6ADA               	clrf	fsr2h,c
  1451   00113C  CFDF FFF6          	movff	indf2,tblptrl
  1452   001140                     	if	1	;There is more than 1 active tblptr byte
  1453   001140  0E0E               	movlw	high __smallconst
  1454   001142  6EF7               	movwf	tblptrh,c
  1455   001144                     	endif
  1456   001144                     	if	0	;tblptru may be non-zero
  1457   001144                     	endif
  1458   001144                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1459   001144  0E00               	movlw	low (__smallconst shr (0+16))
  1460   001146  6EF8               	movwf	tblptru,c
  1461   001148                     	endif
  1462   001148  0008               	tblrd		*
  1463   00114A  50F5               	movf	tablat,w,c
  1464   00114C  0A25               	xorlw	37
  1465   00114E  A4D8               	btfss	status,2,c
  1466   001150  EFAC  F008         	goto	u2581
  1467   001154  EFAE  F008         	goto	u2580
  1468   001158                     u2581:
  1469   001158  EFE7  F009         	goto	l3607
  1470   00115C                     u2580:
  1471   00115C                     
  1472                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1473   00115C  501A               	movf	vfpfcnvrt@fmt^0,w,c
  1474   00115E  6ED9               	movwf	fsr2l,c
  1475   001160  6ADA               	clrf	fsr2h,c
  1476   001162  2ADF               	incf	indf2,f,c
  1477   001164                     
  1478                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1479   001164  0E00               	movlw	0
  1480   001166  0101               	movlb	1	; () banked
  1481   001168  6FE5               	movwf	(_width+1)& (0+255),b
  1482   00116A  0E00               	movlw	0
  1483   00116C  6FE4               	movwf	_width& (0+255),b
  1484   00116E  C1E4  F1F4         	movff	_width,_flags
  1485   001172                     
  1486                           ; BSR set to: 1
  1487                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1488   001172  69E6               	setf	_prec& (0+255),b
  1489   001174  69E7               	setf	(_prec+1)& (0+255),b
  1490   001176                     
  1491                           ; BSR set to: 1
  1492                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1493   001176  501A               	movf	vfpfcnvrt@fmt^0,w,c
  1494   001178  6ED9               	movwf	fsr2l,c
  1495   00117A  6ADA               	clrf	fsr2h,c
  1496   00117C  50DF               	movf	indf2,w,c
  1497   00117E  6E23               	movwf	vfpfcnvrt@cp^0,c
  1498   001180                     
  1499                           ; BSR set to: 1
  1500                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  1501   001180  C023  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1502   001184                     	if	1	;There is more than 1 active tblptr byte
  1503   001184  0E0E               	movlw	high __smallconst
  1504   001186  6EF7               	movwf	tblptrh,c
  1505   001188                     	endif
  1506   001188                     	if	0	;tblptru may be non-zero
  1507   001188                     	endif
  1508   001188                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1509   001188  0E00               	movlw	low (__smallconst shr (0+16))
  1510   00118A  6EF8               	movwf	tblptru,c
  1511   00118C                     	endif
  1512   00118C  0008               	tblrd		*
  1513   00118E  CFF5 F024          	movff	tablat,vfpfcnvrt@c
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  1516   001192  EFD6  F008         	goto	l3563
  1517   001196                     l3555:
  1518                           
  1519                           ; BSR set to: 1
  1520                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1309:     cp++;
  1521   001196  2A23               	incf	vfpfcnvrt@cp^0,f,c
  1522                           
  1523                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1316:     break;
  1524   001198  EFEF  F008         	goto	l3565
  1525   00119C                     l3557:
  1526                           
  1527                           ; BSR set to: 1
  1528                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  1529   00119C  0E69               	movlw	105
  1530   00119E  6E24               	movwf	vfpfcnvrt@c^0,c
  1531                           
  1532                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1351:     break;
  1533   0011A0  EFEF  F008         	goto	l3565
  1534   0011A4                     l3559:
  1535                           
  1536                           ; BSR set to: 1
  1537                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  1538   0011A4  0E00               	movlw	0
  1539   0011A6  6E24               	movwf	vfpfcnvrt@c^0,c
  1540                           
  1541                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1354:     break;
  1542   0011A8  EFEF  F008         	goto	l3565
  1543   0011AC                     l3563:
  1544                           
  1545                           ; BSR set to: 1
  1546   0011AC  5024               	movf	vfpfcnvrt@c^0,w,c
  1547   0011AE  6E1C               	movwf	??_vfpfcnvrt^0,c
  1548   0011B0  6A1D               	clrf	(??_vfpfcnvrt+1)^0,c
  1549                           
  1550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1551                           ; Switch size 1, requested type "simple"
  1552                           ; Number of cases is 1, Range of values is 0 to 0
  1553                           ; switch strategies available:
  1554                           ; Name         Instructions Cycles
  1555                           ; simple_byte            4     3 (average)
  1556                           ;	Chosen strategy is simple_byte
  1557   0011B2  501D               	movf	(??_vfpfcnvrt+1)^0,w,c
  1558   0011B4  0A00               	xorlw	0	; case 0
  1559   0011B6  B4D8               	btfsc	status,2,c
  1560   0011B8  EFE0  F008         	goto	l4445
  1561   0011BC  EFD2  F008         	goto	l3559
  1562   0011C0                     l4445:
  1563                           
  1564                           ; BSR set to: 1
  1565                           ; Switch size 1, requested type "simple"
  1566                           ; Number of cases is 3, Range of values is 100 to 108
  1567                           ; switch strategies available:
  1568                           ; Name         Instructions Cycles
  1569                           ; simple_byte           10     6 (average)
  1570                           ;	Chosen strategy is simple_byte
  1571   0011C0  501C               	movf	??_vfpfcnvrt^0,w,c
  1572   0011C2  0A64               	xorlw	100	; case 100
  1573   0011C4  B4D8               	btfsc	status,2,c
  1574   0011C6  EFCE  F008         	goto	l3557
  1575   0011CA  0A0D               	xorlw	13	; case 105
  1576   0011CC  B4D8               	btfsc	status,2,c
  1577   0011CE  EFCE  F008         	goto	l3557
  1578   0011D2  0A05               	xorlw	5	; case 108
  1579   0011D4  B4D8               	btfsc	status,2,c
  1580   0011D6  EFCB  F008         	goto	l3555
  1581   0011DA  EFD2  F008         	goto	l3559
  1582   0011DE                     l3565:
  1583                           
  1584                           ; BSR set to: 1
  1585                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1586   0011DE  C023  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1587   0011E2                     	if	1	;There is more than 1 active tblptr byte
  1588   0011E2  0E0E               	movlw	high __smallconst
  1589   0011E4  6EF7               	movwf	tblptrh,c
  1590   0011E6                     	endif
  1591   0011E6                     	if	0	;tblptru may be non-zero
  1592   0011E6                     	endif
  1593   0011E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1594   0011E6  0E00               	movlw	low (__smallconst shr (0+16))
  1595   0011E8  6EF8               	movwf	tblptru,c
  1596   0011EA                     	endif
  1597   0011EA  0008               	tblrd		*
  1598   0011EC  50F5               	movf	tablat,w,c
  1599   0011EE  0A64               	xorlw	100
  1600   0011F0  B4D8               	btfsc	status,2,c
  1601   0011F2  EFFD  F008         	goto	u2591
  1602   0011F6  EFFF  F008         	goto	u2590
  1603   0011FA                     u2591:
  1604   0011FA  EF36  F009         	goto	l3575
  1605   0011FE                     u2590:
  1606   0011FE                     
  1607                           ; BSR set to: 1
  1608   0011FE  C023  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1609   001202                     	if	1	;There is more than 1 active tblptr byte
  1610   001202  0E0E               	movlw	high __smallconst
  1611   001204  6EF7               	movwf	tblptrh,c
  1612   001206                     	endif
  1613   001206                     	if	0	;tblptru may be non-zero
  1614   001206                     	endif
  1615   001206                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1616   001206  0E00               	movlw	low (__smallconst shr (0+16))
  1617   001208  6EF8               	movwf	tblptru,c
  1618   00120A                     	endif
  1619   00120A  0008               	tblrd		*
  1620   00120C  50F5               	movf	tablat,w,c
  1621   00120E  0A69               	xorlw	105
  1622   001210  A4D8               	btfss	status,2,c
  1623   001212  EF0D  F009         	goto	u2601
  1624   001216  EF0F  F009         	goto	u2600
  1625   00121A                     u2601:
  1626   00121A  EFE1  F009         	goto	l3603
  1627   00121E                     u2600:
  1628   00121E  EF36  F009         	goto	l3575
  1629   001222                     l3569:
  1630                           
  1631                           ; BSR set to: 1
  1632                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1633   001222  501B               	movf	vfpfcnvrt@ap^0,w,c
  1634   001224  6ED9               	movwf	fsr2l,c
  1635   001226  6ADA               	clrf	fsr2h,c
  1636   001228  50DF               	movf	indf2,w,c
  1637   00122A  2ADF               	incf	indf2,f,c
  1638   00122C  2ADF               	incf	indf2,f,c
  1639   00122E  6ED9               	movwf	fsr2l,c
  1640   001230  6ADA               	clrf	fsr2h,c
  1641   001232  CFDE F01F          	movff	postinc2,vfpfcnvrt@convarg
  1642   001236  CFDD F020          	movff	postdec2,vfpfcnvrt@convarg+1
  1643   00123A  0E00               	movlw	0
  1644   00123C  BE20               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1645   00123E  0EFF               	movlw	-1
  1646   001240  6E21               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1647   001242  6E22               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1648                           
  1649                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1366:      break;
  1650   001244  EF4B  F009         	goto	l3577
  1651   001248                     l3571:
  1652                           
  1653                           ; BSR set to: 1
  1654                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
  1655   001248  501B               	movf	vfpfcnvrt@ap^0,w,c
  1656   00124A  6ED9               	movwf	fsr2l,c
  1657   00124C  6ADA               	clrf	fsr2h,c
  1658   00124E  0E04               	movlw	4
  1659   001250  26DF               	addwf	indf2,f,c
  1660   001252  5CDF               	subwf	indf2,w,c
  1661   001254  6ED9               	movwf	fsr2l,c
  1662   001256  6ADA               	clrf	fsr2h,c
  1663   001258  CFDE F01F          	movff	postinc2,vfpfcnvrt@convarg
  1664   00125C  CFDE F020          	movff	postinc2,vfpfcnvrt@convarg+1
  1665   001260  CFDE F021          	movff	postinc2,vfpfcnvrt@convarg+2
  1666   001264  CFDE F022          	movff	postinc2,vfpfcnvrt@convarg+3
  1667                           
  1668                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1380:      break;
  1669   001268  EF4B  F009         	goto	l3577
  1670   00126C                     l3575:
  1671                           
  1672                           ; BSR set to: 1
  1673   00126C  5024               	movf	vfpfcnvrt@c^0,w,c
  1674   00126E  6E1C               	movwf	??_vfpfcnvrt^0,c
  1675   001270  6A1D               	clrf	(??_vfpfcnvrt+1)^0,c
  1676                           
  1677                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1678                           ; Switch size 1, requested type "simple"
  1679                           ; Number of cases is 1, Range of values is 0 to 0
  1680                           ; switch strategies available:
  1681                           ; Name         Instructions Cycles
  1682                           ; simple_byte            4     3 (average)
  1683                           ;	Chosen strategy is simple_byte
  1684   001272  501D               	movf	(??_vfpfcnvrt+1)^0,w,c
  1685   001274  0A00               	xorlw	0	; case 0
  1686   001276  B4D8               	btfsc	status,2,c
  1687   001278  EF40  F009         	goto	l4447
  1688   00127C  EF4B  F009         	goto	l3577
  1689   001280                     l4447:
  1690                           
  1691                           ; BSR set to: 1
  1692                           ; Switch size 1, requested type "simple"
  1693                           ; Number of cases is 2, Range of values is 105 to 108
  1694                           ; switch strategies available:
  1695                           ; Name         Instructions Cycles
  1696                           ; simple_byte            7     4 (average)
  1697                           ;	Chosen strategy is simple_byte
  1698   001280  501C               	movf	??_vfpfcnvrt^0,w,c
  1699   001282  0A69               	xorlw	105	; case 105
  1700   001284  B4D8               	btfsc	status,2,c
  1701   001286  EF11  F009         	goto	l3569
  1702   00128A  0A05               	xorlw	5	; case 108
  1703   00128C  B4D8               	btfsc	status,2,c
  1704   00128E  EF24  F009         	goto	l3571
  1705   001292  EF4B  F009         	goto	l3577
  1706   001296                     l3577:
  1707                           
  1708                           ; BSR set to: 1
  1709                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1710   001296  501A               	movf	vfpfcnvrt@fmt^0,w,c
  1711   001298  6ED9               	movwf	fsr2l,c
  1712   00129A  6ADA               	clrf	fsr2h,c
  1713   00129C  2823               	incf	vfpfcnvrt@cp^0,w,c
  1714   00129E  6EDF               	movwf	indf2,c
  1715   0012A0                     
  1716                           ; BSR set to: 1
  1717                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1718   0012A0  0E20               	movlw	32
  1719   0012A2  6E24               	movwf	vfpfcnvrt@c^0,c
  1720   0012A4                     
  1721                           ; BSR set to: 1
  1722                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1723   0012A4  BE22               	btfsc	(vfpfcnvrt@convarg+3)^0,7,c
  1724   0012A6  EF57  F009         	goto	u2611
  1725   0012AA  EF5A  F009         	goto	u2610
  1726   0012AE                     u2611:
  1727   0012AE  0E01               	movlw	1
  1728   0012B0  EF5B  F009         	goto	u2620
  1729   0012B4                     u2610:
  1730   0012B4  0E00               	movlw	0
  1731   0012B6                     u2620:
  1732   0012B6  6E1E               	movwf	vfpfcnvrt@done^0,c
  1733   0012B8                     l3583:
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1736   0012B8  0624               	decf	vfpfcnvrt@c^0,f,c
  1737   0012BA  0E3C               	movlw	low _dbuf
  1738   0012BC  2424               	addwf	vfpfcnvrt@c^0,w,c
  1739   0012BE  6ED9               	movwf	fsr2l,c
  1740   0012C0  6ADA               	clrf	fsr2h,c
  1741   0012C2  0E03               	movlw	high _dbuf
  1742   0012C4  22DA               	addwfc	fsr2h,f,c
  1743   0012C6  C01F  F005         	movff	vfpfcnvrt@convarg,___almod@dividend
  1744   0012CA  C020  F006         	movff	vfpfcnvrt@convarg+1,___almod@dividend+1
  1745   0012CE  C021  F007         	movff	vfpfcnvrt@convarg+2,___almod@dividend+2
  1746   0012D2  C022  F008         	movff	vfpfcnvrt@convarg+3,___almod@dividend+3
  1747   0012D6  0E0A               	movlw	10
  1748   0012D8  6E09               	movwf	___almod@divisor^0,c
  1749   0012DA  0E00               	movlw	0
  1750   0012DC  6E0A               	movwf	(___almod@divisor+1)^0,c
  1751   0012DE  0E00               	movlw	0
  1752   0012E0  6E0B               	movwf	(___almod@divisor+2)^0,c
  1753   0012E2  0E00               	movlw	0
  1754   0012E4  6E0C               	movwf	(___almod@divisor+3)^0,c
  1755   0012E6  ECF6  F00B         	call	___almod	;wreg free
  1756   0012EA  C005  F00F         	movff	?___almod,abs@a
  1757   0012EE  C006  F010         	movff	?___almod+1,abs@a+1
  1758   0012F2  EC96  F00F         	call	_abs	;wreg free
  1759   0012F6  500F               	movf	?_abs^0,w,c
  1760   0012F8  0F30               	addlw	48
  1761   0012FA  6EDF               	movwf	indf2,c
  1762   0012FC                     
  1763                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1764   0012FC  C01F  F00B         	movff	vfpfcnvrt@convarg,___aldiv@dividend
  1765   001300  C020  F00C         	movff	vfpfcnvrt@convarg+1,___aldiv@dividend+1
  1766   001304  C021  F00D         	movff	vfpfcnvrt@convarg+2,___aldiv@dividend+2
  1767   001308  C022  F00E         	movff	vfpfcnvrt@convarg+3,___aldiv@dividend+3
  1768   00130C  0E0A               	movlw	10
  1769   00130E  6E0F               	movwf	___aldiv@divisor^0,c
  1770   001310  0E00               	movlw	0
  1771   001312  6E10               	movwf	(___aldiv@divisor+1)^0,c
  1772   001314  0E00               	movlw	0
  1773   001316  6E11               	movwf	(___aldiv@divisor+2)^0,c
  1774   001318  0E00               	movlw	0
  1775   00131A  6E12               	movwf	(___aldiv@divisor+3)^0,c
  1776   00131C  EC70  F00B         	call	___aldiv	;wreg free
  1777   001320  C00B  F01F         	movff	?___aldiv,vfpfcnvrt@convarg
  1778   001324  C00C  F020         	movff	?___aldiv+1,vfpfcnvrt@convarg+1
  1779   001328  C00D  F021         	movff	?___aldiv+2,vfpfcnvrt@convarg+2
  1780   00132C  C00E  F022         	movff	?___aldiv+3,vfpfcnvrt@convarg+3
  1781   001330                     
  1782                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1783   001330  501F               	movf	vfpfcnvrt@convarg^0,w,c
  1784   001332  1020               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1785   001334  1021               	iorwf	(vfpfcnvrt@convarg+2)^0,w,c
  1786   001336  1022               	iorwf	(vfpfcnvrt@convarg+3)^0,w,c
  1787   001338  B4D8               	btfsc	status,2,c
  1788   00133A  EFA1  F009         	goto	u2631
  1789   00133E  EFA3  F009         	goto	u2630
  1790   001342                     u2631:
  1791   001342  EFAB  F009         	goto	l3591
  1792   001346                     u2630:
  1793   001346  5024               	movf	vfpfcnvrt@c^0,w,c
  1794   001348  A4D8               	btfss	status,2,c
  1795   00134A  EFA9  F009         	goto	u2641
  1796   00134E  EFAB  F009         	goto	u2640
  1797   001352                     u2641:
  1798   001352  EF5C  F009         	goto	l3583
  1799   001356                     u2640:
  1800   001356                     l3591:
  1801                           
  1802                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1803   001356  5024               	movf	vfpfcnvrt@c^0,w,c
  1804   001358  B4D8               	btfsc	status,2,c
  1805   00135A  EFB1  F009         	goto	u2651
  1806   00135E  EFB3  F009         	goto	u2650
  1807   001362                     u2651:
  1808   001362  EFD6  F009         	goto	l3601
  1809   001366                     u2650:
  1810   001366  501E               	movf	vfpfcnvrt@done^0,w,c
  1811   001368  B4D8               	btfsc	status,2,c
  1812   00136A  EFB9  F009         	goto	u2661
  1813   00136E  EFBB  F009         	goto	u2660
  1814   001372                     u2661:
  1815   001372  EFD6  F009         	goto	l3601
  1816   001376                     u2660:
  1817   001376                     
  1818                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1819   001376  0624               	decf	vfpfcnvrt@c^0,f,c
  1820   001378  0E3C               	movlw	low _dbuf
  1821   00137A  2424               	addwf	vfpfcnvrt@c^0,w,c
  1822   00137C  6ED9               	movwf	fsr2l,c
  1823   00137E  6ADA               	clrf	fsr2h,c
  1824   001380  0E03               	movlw	high _dbuf
  1825   001382  22DA               	addwfc	fsr2h,f,c
  1826   001384  0E2D               	movlw	45
  1827   001386  6EDF               	movwf	indf2,c
  1828   001388  EFD6  F009         	goto	l3601
  1829   00138C                     l3597:
  1830                           
  1831                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1832   00138C  0E3C               	movlw	low _dbuf
  1833   00138E  2424               	addwf	vfpfcnvrt@c^0,w,c
  1834   001390  6ED9               	movwf	fsr2l,c
  1835   001392  6ADA               	clrf	fsr2h,c
  1836   001394  0E03               	movlw	high _dbuf
  1837   001396  22DA               	addwfc	fsr2h,f,c
  1838   001398  50DF               	movf	indf2,w,c
  1839   00139A  6E1C               	movwf	??_vfpfcnvrt^0,c
  1840   00139C  501C               	movf	??_vfpfcnvrt^0,w,c
  1841   00139E  6E05               	movwf	fputc@c^0,c
  1842   0013A0  6A06               	clrf	(fputc@c+1)^0,c
  1843   0013A2  C019  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1844   0013A6  EC36  F00D         	call	_fputc	;wreg free
  1845   0013AA  2A24               	incf	vfpfcnvrt@c^0,f,c
  1846   0013AC                     l3601:
  1847                           
  1848                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1849   0013AC  0E20               	movlw	32
  1850   0013AE  1824               	xorwf	vfpfcnvrt@c^0,w,c
  1851   0013B0  A4D8               	btfss	status,2,c
  1852   0013B2  EFDD  F009         	goto	u2671
  1853   0013B6  EFDF  F009         	goto	u2670
  1854   0013BA                     u2671:
  1855   0013BA  EFC6  F009         	goto	l3597
  1856   0013BE                     u2670:
  1857   0013BE  EFFA  F009         	goto	l1362
  1858   0013C2                     l3603:
  1859                           
  1860                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1861   0013C2  501A               	movf	vfpfcnvrt@fmt^0,w,c
  1862   0013C4  6ED9               	movwf	fsr2l,c
  1863   0013C6  6ADA               	clrf	fsr2h,c
  1864   0013C8  2ADF               	incf	indf2,f,c
  1865   0013CA  EFFA  F009         	goto	l1362
  1866   0013CE                     l3607:
  1867                           
  1868                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1869   0013CE  501A               	movf	vfpfcnvrt@fmt^0,w,c
  1870   0013D0  6ED9               	movwf	fsr2l,c
  1871   0013D2  6ADA               	clrf	fsr2h,c
  1872   0013D4  CFDF FFF6          	movff	indf2,tblptrl
  1873   0013D8                     	if	1	;There is more than 1 active tblptr byte
  1874   0013D8  0E0E               	movlw	high __smallconst
  1875   0013DA  6EF7               	movwf	tblptrh,c
  1876   0013DC                     	endif
  1877   0013DC                     	if	0	;tblptru may be non-zero
  1878   0013DC                     	endif
  1879   0013DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1880   0013DC  0E00               	movlw	low (__smallconst shr (0+16))
  1881   0013DE  6EF8               	movwf	tblptru,c
  1882   0013E0                     	endif
  1883   0013E0  0008               	tblrd		*
  1884   0013E2  50F5               	movf	tablat,w,c
  1885   0013E4  6E05               	movwf	fputc@c^0,c
  1886   0013E6  6A06               	clrf	(fputc@c+1)^0,c
  1887   0013E8  C019  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1888   0013EC  EC36  F00D         	call	_fputc	;wreg free
  1889   0013F0  EFE1  F009         	goto	l3603
  1890   0013F4                     l1362:
  1891   0013F4  0012               	return		;funcret
  1892   0013F6                     __end_of_vfpfcnvrt:
  1893                           	callstack 0
  1894                           
  1895 ;; *************** function _fputc *****************
  1896 ;; Defined at:
  1897 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  c               2    4[COMRAM] int 
  1900 ;;  fp              1    6[COMRAM] PTR struct _IO_FILE
  1901 ;;		 -> sprintf@f(12), 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  2    4[COMRAM] int 
  1906 ;; Registers used:
  1907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1913 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1915 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1916 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1917 ;;Total ram usage:        8 bytes
  1918 ;; Hardware stack levels used: 1
  1919 ;; Hardware stack levels required when called: 3
  1920 ;; This function calls:
  1921 ;;		_putch
  1922 ;; This function is called by:
  1923 ;;		_vfpfcnvrt
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text5
  1928   001A6C                     __ptext5:
  1929                           	callstack 0
  1930   001A6C                     _fputc:
  1931                           	callstack 23
  1932   001A6C  5007               	movf	fputc@fp^0,w,c
  1933   001A6E  B4D8               	btfsc	status,2,c
  1934   001A70  EF3C  F00D         	goto	u2521
  1935   001A74  EF3E  F00D         	goto	u2520
  1936   001A78                     u2521:
  1937   001A78  EF46  F00D         	goto	l3529
  1938   001A7C                     u2520:
  1939   001A7C  5007               	movf	fputc@fp^0,w,c
  1940   001A7E  A4D8               	btfss	status,2,c
  1941   001A80  EF44  F00D         	goto	u2531
  1942   001A84  EF46  F00D         	goto	u2530
  1943   001A88                     u2531:
  1944   001A88  EF4B  F00D         	goto	l3531
  1945   001A8C                     u2530:
  1946   001A8C                     l3529:
  1947   001A8C  5005               	movf	fputc@c^0,w,c
  1948   001A8E  EC77  F010         	call	_putch
  1949   001A92  EF8A  F00D         	goto	l1380
  1950   001A96                     l3531:
  1951   001A96  5007               	movf	fputc@fp^0,w,c
  1952   001A98  6ED9               	movwf	fsr2l,c
  1953   001A9A  6ADA               	clrf	fsr2h,c
  1954   001A9C  0E0A               	movlw	10
  1955   001A9E  26D9               	addwf	fsr2l,f,c
  1956   001AA0  50DE               	movf	postinc2,w,c
  1957   001AA2  10DE               	iorwf	postinc2,w,c
  1958   001AA4  B4D8               	btfsc	status,2,c
  1959   001AA6  EF57  F00D         	goto	u2541
  1960   001AAA  EF59  F00D         	goto	u2540
  1961   001AAE                     u2541:
  1962   001AAE  EF72  F00D         	goto	l3535
  1963   001AB2                     u2540:
  1964   001AB2  5007               	movf	fputc@fp^0,w,c
  1965   001AB4  6ED9               	movwf	fsr2l,c
  1966   001AB6  6ADA               	clrf	fsr2h,c
  1967   001AB8  0E0A               	movlw	10
  1968   001ABA  26D9               	addwf	fsr2l,f,c
  1969   001ABC  5007               	movf	fputc@fp^0,w,c
  1970   001ABE  6EE1               	movwf	fsr1l,c
  1971   001AC0  6AE2               	clrf	fsr1h,c
  1972   001AC2  0E03               	movlw	3
  1973   001AC4  26E1               	addwf	fsr1l,f,c
  1974   001AC6  50DE               	movf	postinc2,w,c
  1975   001AC8  5CE6               	subwf	postinc1,w,c
  1976   001ACA  50E6               	movf	postinc1,w,c
  1977   001ACC  0A80               	xorlw	128
  1978   001ACE  6E0C               	movwf	(??_fputc+4)^0,c
  1979   001AD0  50DE               	movf	postinc2,w,c
  1980   001AD2  0A80               	xorlw	128
  1981   001AD4  580C               	subwfb	(??_fputc+4)^0,w,c
  1982   001AD6  B0D8               	btfsc	status,0,c
  1983   001AD8  EF70  F00D         	goto	u2551
  1984   001ADC  EF72  F00D         	goto	u2550
  1985   001AE0                     u2551:
  1986   001AE0  EF8A  F00D         	goto	l1380
  1987   001AE4                     u2550:
  1988   001AE4                     l3535:
  1989   001AE4  5007               	movf	fputc@fp^0,w,c
  1990   001AE6  6ED9               	movwf	fsr2l,c
  1991   001AE8  6ADA               	clrf	fsr2h,c
  1992   001AEA  0E03               	movlw	3
  1993   001AEC  26D9               	addwf	fsr2l,f,c
  1994   001AEE  50DF               	movf	indf2,w,c
  1995   001AF0  6E08               	movwf	??_fputc^0,c
  1996   001AF2  5007               	movf	fputc@fp^0,w,c
  1997   001AF4  6ED9               	movwf	fsr2l,c
  1998   001AF6  6ADA               	clrf	fsr2h,c
  1999   001AF8  50DF               	movf	indf2,w,c
  2000   001AFA  2408               	addwf	??_fputc^0,w,c
  2001   001AFC  6ED9               	movwf	fsr2l,c
  2002   001AFE  6ADA               	clrf	fsr2h,c
  2003   001B00  C005  FFDF         	movff	fputc@c,indf2
  2004   001B04  5007               	movf	fputc@fp^0,w,c
  2005   001B06  6ED9               	movwf	fsr2l,c
  2006   001B08  6ADA               	clrf	fsr2h,c
  2007   001B0A  0E03               	movlw	3
  2008   001B0C  26D9               	addwf	fsr2l,f,c
  2009   001B0E  2ADE               	incf	postinc2,f,c
  2010   001B10  0E00               	movlw	0
  2011   001B12  22DD               	addwfc	postdec2,f,c
  2012   001B14                     l1380:
  2013   001B14  0012               	return		;funcret
  2014   001B16                     __end_of_fputc:
  2015                           	callstack 0
  2016                           
  2017 ;; *************** function _putch *****************
  2018 ;; Defined at:
  2019 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  c               1    wreg     unsigned char 
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;  c               1    0[COMRAM] unsigned char 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      void 
  2026 ;; Registers used:
  2027 ;;		wreg
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2037 ;;Total ram usage:        0 bytes
  2038 ;; Hardware stack levels used: 1
  2039 ;; Hardware stack levels required when called: 2
  2040 ;; This function calls:
  2041 ;;		Nothing
  2042 ;; This function is called by:
  2043 ;;		_fputc
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text6
  2048   0020EE                     __ptext6:
  2049                           	callstack 0
  2050   0020EE                     _putch:
  2051                           	callstack 23
  2052   0020EE  0012               	return		;funcret
  2053   0020F0                     __end_of_putch:
  2054                           	callstack 0
  2055                           
  2056 ;; *************** function ___almod *****************
  2057 ;; Defined at:
  2058 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\almod.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  dividend        4    4[COMRAM] long 
  2061 ;;  divisor         4    8[COMRAM] long 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  sign            1   13[COMRAM] unsigned char 
  2064 ;;  counter         1   12[COMRAM] unsigned char 
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  4    4[COMRAM] long 
  2067 ;; Registers used:
  2068 ;;		wreg, status,2, status,0
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2074 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2075 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2077 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2078 ;;Total ram usage:       10 bytes
  2079 ;; Hardware stack levels used: 1
  2080 ;; Hardware stack levels required when called: 2
  2081 ;; This function calls:
  2082 ;;		Nothing
  2083 ;; This function is called by:
  2084 ;;		_vfpfcnvrt
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text7
  2089   0017EC                     __ptext7:
  2090                           	callstack 0
  2091   0017EC                     ___almod:
  2092                           	callstack 24
  2093   0017EC  0E00               	movlw	0
  2094   0017EE  6E0E               	movwf	___almod@sign^0,c
  2095   0017F0  BE08               	btfsc	(___almod@dividend+3)^0,7,c
  2096   0017F2  EFFF  F00B         	goto	u2460
  2097   0017F6  EFFD  F00B         	goto	u2461
  2098   0017FA                     u2461:
  2099   0017FA  EF09  F00C         	goto	l3497
  2100   0017FE                     u2460:
  2101   0017FE  1E08               	comf	(___almod@dividend+3)^0,f,c
  2102   001800  1E07               	comf	(___almod@dividend+2)^0,f,c
  2103   001802  1E06               	comf	(___almod@dividend+1)^0,f,c
  2104   001804  6C05               	negf	___almod@dividend^0,c
  2105   001806  0E00               	movlw	0
  2106   001808  2206               	addwfc	(___almod@dividend+1)^0,f,c
  2107   00180A  2207               	addwfc	(___almod@dividend+2)^0,f,c
  2108   00180C  2208               	addwfc	(___almod@dividend+3)^0,f,c
  2109   00180E  0E01               	movlw	1
  2110   001810  6E0E               	movwf	___almod@sign^0,c
  2111   001812                     l3497:
  2112   001812  BE0C               	btfsc	(___almod@divisor+3)^0,7,c
  2113   001814  EF10  F00C         	goto	u2470
  2114   001818  EF0E  F00C         	goto	u2471
  2115   00181C                     u2471:
  2116   00181C  EF18  F00C         	goto	l3501
  2117   001820                     u2470:
  2118   001820  1E0C               	comf	(___almod@divisor+3)^0,f,c
  2119   001822  1E0B               	comf	(___almod@divisor+2)^0,f,c
  2120   001824  1E0A               	comf	(___almod@divisor+1)^0,f,c
  2121   001826  6C09               	negf	___almod@divisor^0,c
  2122   001828  0E00               	movlw	0
  2123   00182A  220A               	addwfc	(___almod@divisor+1)^0,f,c
  2124   00182C  220B               	addwfc	(___almod@divisor+2)^0,f,c
  2125   00182E  220C               	addwfc	(___almod@divisor+3)^0,f,c
  2126   001830                     l3501:
  2127   001830  5009               	movf	___almod@divisor^0,w,c
  2128   001832  100A               	iorwf	(___almod@divisor+1)^0,w,c
  2129   001834  100B               	iorwf	(___almod@divisor+2)^0,w,c
  2130   001836  100C               	iorwf	(___almod@divisor+3)^0,w,c
  2131   001838  B4D8               	btfsc	status,2,c
  2132   00183A  EF21  F00C         	goto	u2481
  2133   00183E  EF23  F00C         	goto	u2480
  2134   001842                     u2481:
  2135   001842  EF53  F00C         	goto	l3517
  2136   001846                     u2480:
  2137   001846  0E01               	movlw	1
  2138   001848  6E0D               	movwf	___almod@counter^0,c
  2139   00184A  EF2D  F00C         	goto	l3507
  2140   00184E                     l3505:
  2141   00184E  90D8               	bcf	status,0,c
  2142   001850  3609               	rlcf	___almod@divisor^0,f,c
  2143   001852  360A               	rlcf	(___almod@divisor+1)^0,f,c
  2144   001854  360B               	rlcf	(___almod@divisor+2)^0,f,c
  2145   001856  360C               	rlcf	(___almod@divisor+3)^0,f,c
  2146   001858  2A0D               	incf	___almod@counter^0,f,c
  2147   00185A                     l3507:
  2148   00185A  AE0C               	btfss	(___almod@divisor+3)^0,7,c
  2149   00185C  EF32  F00C         	goto	u2491
  2150   001860  EF34  F00C         	goto	u2490
  2151   001864                     u2491:
  2152   001864  EF27  F00C         	goto	l3505
  2153   001868                     u2490:
  2154   001868                     l3509:
  2155   001868  5009               	movf	___almod@divisor^0,w,c
  2156   00186A  5C05               	subwf	___almod@dividend^0,w,c
  2157   00186C  500A               	movf	(___almod@divisor+1)^0,w,c
  2158   00186E  5806               	subwfb	(___almod@dividend+1)^0,w,c
  2159   001870  500B               	movf	(___almod@divisor+2)^0,w,c
  2160   001872  5807               	subwfb	(___almod@dividend+2)^0,w,c
  2161   001874  500C               	movf	(___almod@divisor+3)^0,w,c
  2162   001876  5808               	subwfb	(___almod@dividend+3)^0,w,c
  2163   001878  A0D8               	btfss	status,0,c
  2164   00187A  EF41  F00C         	goto	u2501
  2165   00187E  EF43  F00C         	goto	u2500
  2166   001882                     u2501:
  2167   001882  EF4B  F00C         	goto	l3513
  2168   001886                     u2500:
  2169   001886  5009               	movf	___almod@divisor^0,w,c
  2170   001888  5E05               	subwf	___almod@dividend^0,f,c
  2171   00188A  500A               	movf	(___almod@divisor+1)^0,w,c
  2172   00188C  5A06               	subwfb	(___almod@dividend+1)^0,f,c
  2173   00188E  500B               	movf	(___almod@divisor+2)^0,w,c
  2174   001890  5A07               	subwfb	(___almod@dividend+2)^0,f,c
  2175   001892  500C               	movf	(___almod@divisor+3)^0,w,c
  2176   001894  5A08               	subwfb	(___almod@dividend+3)^0,f,c
  2177   001896                     l3513:
  2178   001896  90D8               	bcf	status,0,c
  2179   001898  320C               	rrcf	(___almod@divisor+3)^0,f,c
  2180   00189A  320B               	rrcf	(___almod@divisor+2)^0,f,c
  2181   00189C  320A               	rrcf	(___almod@divisor+1)^0,f,c
  2182   00189E  3209               	rrcf	___almod@divisor^0,f,c
  2183   0018A0  2E0D               	decfsz	___almod@counter^0,f,c
  2184   0018A2  EF34  F00C         	goto	l3509
  2185   0018A6                     l3517:
  2186   0018A6  500E               	movf	___almod@sign^0,w,c
  2187   0018A8  B4D8               	btfsc	status,2,c
  2188   0018AA  EF59  F00C         	goto	u2511
  2189   0018AE  EF5B  F00C         	goto	u2510
  2190   0018B2                     u2511:
  2191   0018B2  EF63  F00C         	goto	l3521
  2192   0018B6                     u2510:
  2193   0018B6  1E08               	comf	(___almod@dividend+3)^0,f,c
  2194   0018B8  1E07               	comf	(___almod@dividend+2)^0,f,c
  2195   0018BA  1E06               	comf	(___almod@dividend+1)^0,f,c
  2196   0018BC  6C05               	negf	___almod@dividend^0,c
  2197   0018BE  0E00               	movlw	0
  2198   0018C0  2206               	addwfc	(___almod@dividend+1)^0,f,c
  2199   0018C2  2207               	addwfc	(___almod@dividend+2)^0,f,c
  2200   0018C4  2208               	addwfc	(___almod@dividend+3)^0,f,c
  2201   0018C6                     l3521:
  2202   0018C6  C005  F005         	movff	___almod@dividend,?___almod
  2203   0018CA  C006  F006         	movff	___almod@dividend+1,?___almod+1
  2204   0018CE  C007  F007         	movff	___almod@dividend+2,?___almod+2
  2205   0018D2  C008  F008         	movff	___almod@dividend+3,?___almod+3
  2206   0018D6  0012               	return		;funcret
  2207   0018D8                     __end_of___almod:
  2208                           	callstack 0
  2209                           
  2210 ;; *************** function _sendStringSerial4 *****************
  2211 ;; Defined at:
  2212 ;;		line 39 in file "serial.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  string          2    5[COMRAM] PTR unsigned char 
  2215 ;;		 -> STR_13(12), STR_12(2), STR_11(2), STR_10(7), 
  2216 ;;		 -> STR_8(6), STR_6(7), STR_4(5), serialColor@testColor(50), 
  2217 ;;		 -> STR_2(7), STR_1(19), 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;		None
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2232 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2233 ;;Total ram usage:        2 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; Hardware stack levels required when called: 3
  2236 ;; This function calls:
  2237 ;;		_sendCharSerial4
  2238 ;; This function is called by:
  2239 ;;		_serialColor
  2240 ;;		_main
  2241 ;;		_calibCards
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text8
  2246   001D76                     __ptext8:
  2247                           	callstack 0
  2248   001D76                     _sendStringSerial4:
  2249                           	callstack 26
  2250   001D76                     
  2251                           ;serial.c: 42:     while(*string != 0){
  2252   001D76  EFD2  F00E         	goto	l3711
  2253   001D7A                     l3707:
  2254                           
  2255                           ;serial.c: 44:         sendCharSerial4(*string++);
  2256   001D7A  C006  FFF6         	movff	sendStringSerial4@string,tblptrl
  2257   001D7E  C007  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2258   001D82  0E00               	movlw	low (__smallconst shr (0+16))
  2259   001D84  6EF8               	movwf	tblptru,c
  2260   001D86  0E0D               	movlw	(high __ramtop+-1)
  2261   001D88  64F7               	cpfsgt	tblptrh,c
  2262   001D8A  D003               	bra	u2757
  2263   001D8C  0008               	tblrd		*
  2264   001D8E  50F5               	movf	tablat,w,c
  2265   001D90  D005               	bra	u2750
  2266   001D92                     u2757:
  2267   001D92  CFF6 FFE9          	movff	tblptrl,fsr0l
  2268   001D96  CFF7 FFEA          	movff	tblptrh,fsr0h
  2269   001D9A  50EF               	movf	indf0,w,c
  2270   001D9C                     u2750:
  2271   001D9C  EC44  F010         	call	_sendCharSerial4
  2272   001DA0  4A06               	infsnz	sendStringSerial4@string^0,f,c
  2273   001DA2  2A07               	incf	(sendStringSerial4@string+1)^0,f,c
  2274   001DA4                     l3711:
  2275                           
  2276                           ;serial.c: 42:     while(*string != 0){
  2277   001DA4  C006  FFF6         	movff	sendStringSerial4@string,tblptrl
  2278   001DA8  C007  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2279   001DAC  0E00               	movlw	low (__smallconst shr (0+16))
  2280   001DAE  6EF8               	movwf	tblptru,c
  2281   001DB0  0E0D               	movlw	(high __ramtop+-1)
  2282   001DB2  64F7               	cpfsgt	tblptrh,c
  2283   001DB4  D003               	bra	u2767
  2284   001DB6  0008               	tblrd		*
  2285   001DB8  50F5               	movf	tablat,w,c
  2286   001DBA  D005               	bra	u2760
  2287   001DBC                     u2767:
  2288   001DBC  CFF6 FFE9          	movff	tblptrl,fsr0l
  2289   001DC0  CFF7 FFEA          	movff	tblptrh,fsr0h
  2290   001DC4  50EF               	movf	indf0,w,c
  2291   001DC6                     u2760:
  2292   001DC6  0900               	iorlw	0
  2293   001DC8  A4D8               	btfss	status,2,c
  2294   001DCA  EFE9  F00E         	goto	u2771
  2295   001DCE  EFEB  F00E         	goto	u2770
  2296   001DD2                     u2771:
  2297   001DD2  EFBD  F00E         	goto	l3707
  2298   001DD6                     u2770:
  2299   001DD6  0012               	return		;funcret
  2300   001DD8                     __end_of_sendStringSerial4:
  2301                           	callstack 0
  2302                           
  2303 ;; *************** function _sendCharSerial4 *****************
  2304 ;; Defined at:
  2305 ;;		line 33 in file "serial.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;  charToSend      1    wreg     unsigned char 
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;  charToSend      1    4[COMRAM] unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		wreg
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2320 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2322 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2323 ;;Total ram usage:        1 bytes
  2324 ;; Hardware stack levels used: 1
  2325 ;; Hardware stack levels required when called: 2
  2326 ;; This function calls:
  2327 ;;		Nothing
  2328 ;; This function is called by:
  2329 ;;		_sendStringSerial4
  2330 ;;		_serialColor
  2331 ;;		_calibCards
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           	psect	text9
  2336   002088                     __ptext9:
  2337                           	callstack 0
  2338   002088                     _sendCharSerial4:
  2339                           	callstack 26
  2340                           
  2341                           ;incstack = 0
  2342                           ;sendCharSerial4@charToSend stored from wreg
  2343   002088  6E05               	movwf	sendCharSerial4@charToSend^0,c
  2344   00208A                     l394:
  2345   00208A  010E               	movlb	14	; () banked
  2346   00208C  A537               	btfss	55,2,b	;volatile
  2347   00208E  EF4B  F010         	goto	u2701
  2348   002092  EF4D  F010         	goto	u2700
  2349   002096                     u2701:
  2350   002096  EF45  F010         	goto	l394
  2351   00209A                     u2700:
  2352   00209A                     
  2353                           ; BSR set to: 14
  2354                           ;serial.c: 35:     TX4REG = charToSend;
  2355   00209A  C005  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2356   00209E                     
  2357                           ; BSR set to: 14
  2358   00209E  0012               	return		;funcret
  2359   0020A0                     __end_of_sendCharSerial4:
  2360                           	callstack 0
  2361                           
  2362 ;; *************** function _mRinit *****************
  2363 ;; Defined at:
  2364 ;;		line 18 in file "breakup.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;		None
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  mR              8   12[COMRAM] struct DC_motor
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  8    4[COMRAM] struct DC_motor
  2371 ;; Registers used:
  2372 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2378 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2379 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2381 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;Total ram usage:       16 bytes
  2383 ;; Hardware stack levels used: 1
  2384 ;; Hardware stack levels required when called: 2
  2385 ;; This function calls:
  2386 ;;		Nothing
  2387 ;; This function is called by:
  2388 ;;		_main
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           	psect	text10
  2393   001E90                     __ptext10:
  2394                           	callstack 0
  2395   001E90                     _mRinit:
  2396                           	callstack 28
  2397   001E90                     
  2398                           ;breakup.c: 20:     DC_motor mR;;breakup.c: 21:     mR.power=0;
  2399   001E90  0E00               	movlw	0
  2400   001E92  6E0D               	movwf	mRinit@mR^0,c
  2401                           
  2402                           ;breakup.c: 22:     mR.direction=1;
  2403   001E94  0E01               	movlw	1
  2404   001E96  6E0E               	movwf	(mRinit@mR+1)^0,c
  2405                           
  2406                           ;breakup.c: 23:     mR.brakemode=1;
  2407   001E98  0E01               	movlw	1
  2408   001E9A  6E0F               	movwf	(mRinit@mR+2)^0,c
  2409   001E9C                     
  2410                           ;breakup.c: 24:     mR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  2411   001E9C  0E25               	movlw	37
  2412   001E9E  6E11               	movwf	(mRinit@mR+4)^0,c
  2413   001EA0  0E0F               	movlw	15
  2414   001EA2  6E12               	movwf	(mRinit@mR+5)^0,c
  2415   001EA4                     
  2416                           ;breakup.c: 25:     mR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  2417   001EA4  0E21               	movlw	33
  2418   001EA6  6E13               	movwf	(mRinit@mR+6)^0,c
  2419   001EA8  0E0F               	movlw	15
  2420   001EAA  6E14               	movwf	(mRinit@mR+7)^0,c
  2421                           
  2422                           ;breakup.c: 26:     mR.PWMperiod=99;
  2423   001EAC  0E63               	movlw	99
  2424   001EAE  6E10               	movwf	(mRinit@mR+3)^0,c
  2425   001EB0                     
  2426                           ;breakup.c: 28:     return mR;
  2427   001EB0  EE20  F00D         	lfsr	2,mRinit@mR
  2428   001EB4  EE00  F005         	lfsr	0,?_mRinit
  2429   001EB8  0E07               	movlw	7
  2430   001EBA                     u3061:
  2431   001EBA  CFDB FFEB          	movff	plusw2,plusw0
  2432   001EBE  06E8               	decf	wreg,f,c
  2433   001EC0  E2FC               	bc	u3061
  2434   001EC2  0012               	return		;funcret
  2435   001EC4                     __end_of_mRinit:
  2436                           	callstack 0
  2437                           
  2438 ;; *************** function _mLinit *****************
  2439 ;; Defined at:
  2440 ;;		line 5 in file "breakup.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;		None
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  mL              8   12[COMRAM] struct DC_motor
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  8    4[COMRAM] struct DC_motor
  2447 ;; Registers used:
  2448 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2454 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2455 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2457 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2458 ;;Total ram usage:       16 bytes
  2459 ;; Hardware stack levels used: 1
  2460 ;; Hardware stack levels required when called: 2
  2461 ;; This function calls:
  2462 ;;		Nothing
  2463 ;; This function is called by:
  2464 ;;		_main
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text11
  2469   001EC4                     __ptext11:
  2470                           	callstack 0
  2471   001EC4                     _mLinit:
  2472                           	callstack 28
  2473   001EC4                     
  2474                           ;breakup.c: 7:     DC_motor mL;;breakup.c: 8:     mL.power=0;
  2475   001EC4  0E00               	movlw	0
  2476   001EC6  6E0D               	movwf	mLinit@mL^0,c
  2477                           
  2478                           ;breakup.c: 9:     mL.direction=1;
  2479   001EC8  0E01               	movlw	1
  2480   001ECA  6E0E               	movwf	(mLinit@mL+1)^0,c
  2481                           
  2482                           ;breakup.c: 10:     mL.brakemode=1;
  2483   001ECC  0E01               	movlw	1
  2484   001ECE  6E0F               	movwf	(mLinit@mL+2)^0,c
  2485   001ED0                     
  2486                           ;breakup.c: 11:     mL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  2487   001ED0  0EAA               	movlw	170
  2488   001ED2  6E11               	movwf	(mLinit@mL+4)^0,c
  2489   001ED4  0E0F               	movlw	15
  2490   001ED6  6E12               	movwf	(mLinit@mL+5)^0,c
  2491   001ED8                     
  2492                           ;breakup.c: 12:     mL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  2493   001ED8  0EA6               	movlw	166
  2494   001EDA  6E13               	movwf	(mLinit@mL+6)^0,c
  2495   001EDC  0E0F               	movlw	15
  2496   001EDE  6E14               	movwf	(mLinit@mL+7)^0,c
  2497                           
  2498                           ;breakup.c: 13:     mL.PWMperiod=99;
  2499   001EE0  0E63               	movlw	99
  2500   001EE2  6E10               	movwf	(mLinit@mL+3)^0,c
  2501   001EE4                     
  2502                           ;breakup.c: 15:     return mL;
  2503   001EE4  EE20  F00D         	lfsr	2,mLinit@mL
  2504   001EE8  EE00  F005         	lfsr	0,?_mLinit
  2505   001EEC  0E07               	movlw	7
  2506   001EEE                     u3051:
  2507   001EEE  CFDB FFEB          	movff	plusw2,plusw0
  2508   001EF2  06E8               	decf	wreg,f,c
  2509   001EF4  E2FC               	bc	u3051
  2510   001EF6  0012               	return		;funcret
  2511   001EF8                     __end_of_mLinit:
  2512                           	callstack 0
  2513                           
  2514 ;; *************** function _initUSART4 *****************
  2515 ;; Defined at:
  2516 ;;		line 5 in file "serial.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;		None
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, status,2
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2534 ;;Total ram usage:        0 bytes
  2535 ;; Hardware stack levels used: 1
  2536 ;; Hardware stack levels required when called: 2
  2537 ;; This function calls:
  2538 ;;		Nothing
  2539 ;; This function is called by:
  2540 ;;		_main
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text12
  2545   00202C                     __ptext12:
  2546                           	callstack 0
  2547   00202C                     _initUSART4:
  2548                           	callstack 28
  2549   00202C                     
  2550                           ;serial.c: 9:     TRISCbits.TRISC1 = 1;
  2551   00202C  8283               	bsf	131,1,c	;volatile
  2552                           
  2553                           ;serial.c: 10:     TRISCbits.TRISC0 = 1;
  2554   00202E  8083               	bsf	131,0,c	;volatile
  2555   002030                     
  2556                           ;serial.c: 12:     RC0PPS = 0x12;
  2557   002030  0E12               	movlw	18
  2558   002032  010E               	movlb	14	; () banked
  2559   002034  6F62               	movwf	98,b	;volatile
  2560                           
  2561                           ;serial.c: 13:     RX4PPS = 0x11;
  2562   002036  0E11               	movlw	17
  2563   002038  6F15               	movwf	21,b	;volatile
  2564   00203A                     
  2565                           ; BSR set to: 14
  2566                           ;serial.c: 15:     BAUD4CONbits.BRG16 = 0;
  2567   00203A  97E9               	bcf	233,3,b	;volatile
  2568   00203C                     
  2569                           ; BSR set to: 14
  2570                           ;serial.c: 16:     TX4STAbits.BRGH = 0;
  2571   00203C  95E8               	bcf	232,2,b	;volatile
  2572                           
  2573                           ;serial.c: 17:     SP4BRGL = 103;
  2574   00203E  0E67               	movlw	103
  2575   002040  6FE5               	movwf	229,b	;volatile
  2576                           
  2577                           ;serial.c: 18:     SP4BRGH = 0;
  2578   002042  0E00               	movlw	0
  2579   002044  6FE6               	movwf	230,b	;volatile
  2580   002046                     
  2581                           ; BSR set to: 14
  2582                           ;serial.c: 20:     RC4STAbits.CREN = 1;
  2583   002046  89E7               	bsf	231,4,b	;volatile
  2584   002048                     
  2585                           ; BSR set to: 14
  2586                           ;serial.c: 21:     RC4STAbits.SPEN = 1;
  2587   002048  8FE7               	bsf	231,7,b	;volatile
  2588   00204A                     
  2589                           ; BSR set to: 14
  2590                           ;serial.c: 22:     TX4STAbits.TXEN = 1;
  2591   00204A  8BE8               	bsf	232,5,b	;volatile
  2592   00204C                     
  2593                           ; BSR set to: 14
  2594   00204C  0012               	return		;funcret
  2595   00204E                     __end_of_initUSART4:
  2596                           	callstack 0
  2597                           
  2598 ;; *************** function _initDCmotorsPWM *****************
  2599 ;; Defined at:
  2600 ;;		line 6 in file "dc_motor.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  PWMperiod       1    wreg     unsigned char 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  PWMperiod       1    4[COMRAM] unsigned char 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg, status,2
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2617 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2618 ;;Total ram usage:        1 bytes
  2619 ;; Hardware stack levels used: 1
  2620 ;; Hardware stack levels required when called: 2
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_main
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text13
  2629   001BBA                     __ptext13:
  2630                           	callstack 0
  2631   001BBA                     _initDCmotorsPWM:
  2632                           	callstack 28
  2633                           
  2634                           ; BSR set to: 14
  2635                           ;incstack = 0
  2636                           ;initDCmotorsPWM@PWMperiod stored from wreg
  2637   001BBA  6E05               	movwf	initDCmotorsPWM@PWMperiod^0,c
  2638   001BBC                     
  2639                           ;dc_motor.c: 6: void initDCmotorsPWM(unsigned char PWMperiod);dc_motor.c: 7: {;dc_motor.
      +                          c: 10:     LATDbits.LATD4=0;
  2640   001BBC  987C               	bcf	124,4,c	;volatile
  2641                           
  2642                           ;dc_motor.c: 11:     TRISDbits.TRISD4=0;
  2643   001BBE  9884               	bcf	132,4,c	;volatile
  2644                           
  2645                           ;dc_motor.c: 13:     LATHbits.LATH0=0;
  2646   001BC0  9080               	bcf	128,0,c	;volatile
  2647                           
  2648                           ;dc_motor.c: 14:     TRISHbits.TRISH0=0;
  2649   001BC2  9088               	bcf	136,0,c	;volatile
  2650                           
  2651                           ;dc_motor.c: 16:     LATFbits.LATF0=0;
  2652   001BC4  907E               	bcf	126,0,c	;volatile
  2653                           
  2654                           ;dc_motor.c: 17:     TRISFbits.TRISF0=0;
  2655   001BC6  9086               	bcf	134,0,c	;volatile
  2656                           
  2657                           ;dc_motor.c: 20:     LATEbits.LATE2=0;
  2658   001BC8  947D               	bcf	125,2,c	;volatile
  2659                           
  2660                           ;dc_motor.c: 21:     LATEbits.LATE4=0;
  2661   001BCA  987D               	bcf	125,4,c	;volatile
  2662                           
  2663                           ;dc_motor.c: 22:     LATCbits.LATC7=0;
  2664   001BCC  9E7B               	bcf	123,7,c	;volatile
  2665                           
  2666                           ;dc_motor.c: 23:     LATGbits.LATG6=0;
  2667   001BCE  9C7F               	bcf	127,6,c	;volatile
  2668                           
  2669                           ;dc_motor.c: 25:     TRISEbits.TRISE2=0;
  2670   001BD0  9485               	bcf	133,2,c	;volatile
  2671                           
  2672                           ;dc_motor.c: 26:     TRISEbits.TRISE4=0;
  2673   001BD2  9885               	bcf	133,4,c	;volatile
  2674                           
  2675                           ;dc_motor.c: 27:     TRISCbits.TRISC7=0;
  2676   001BD4  9E83               	bcf	131,7,c	;volatile
  2677                           
  2678                           ;dc_motor.c: 28:     TRISGbits.TRISG6=0;
  2679   001BD6  9C87               	bcf	135,6,c	;volatile
  2680   001BD8                     
  2681                           ;dc_motor.c: 31:     RE2PPS=0x05;
  2682   001BD8  0E05               	movlw	5
  2683   001BDA  010E               	movlb	14	; () banked
  2684   001BDC  6F74               	movwf	116,b	;volatile
  2685                           
  2686                           ;dc_motor.c: 32:     RE4PPS=0x06;
  2687   001BDE  0E06               	movlw	6
  2688   001BE0  6F76               	movwf	118,b	;volatile
  2689                           
  2690                           ;dc_motor.c: 33:     RC7PPS=0x07;
  2691   001BE2  0E07               	movlw	7
  2692   001BE4  6F69               	movwf	105,b	;volatile
  2693                           
  2694                           ;dc_motor.c: 34:     RG6PPS=0x08;
  2695   001BE6  0E08               	movlw	8
  2696   001BE8  6F88               	movwf	136,b	;volatile
  2697   001BEA                     
  2698                           ; BSR set to: 14
  2699                           ;dc_motor.c: 37:     T2CONbits.CKPS=0b0100;
  2700   001BEA  50BD               	movf	189,w,c	;volatile
  2701   001BEC  0B8F               	andlw	-113
  2702   001BEE  0940               	iorlw	64
  2703   001BF0  6EBD               	movwf	189,c	;volatile
  2704   001BF2                     
  2705                           ; BSR set to: 14
  2706                           ;dc_motor.c: 38:     T2HLTbits.MODE=0b00000;
  2707   001BF2  0EE0               	movlw	-32
  2708   001BF4  16BE               	andwf	190,f,c	;volatile
  2709   001BF6                     
  2710                           ; BSR set to: 14
  2711                           ;dc_motor.c: 39:     T2CLKCONbits.CS=0b0001;
  2712   001BF6  50BF               	movf	191,w,c	;volatile
  2713   001BF8  0BF0               	andlw	-16
  2714   001BFA  0901               	iorlw	1
  2715   001BFC  6EBF               	movwf	191,c	;volatile
  2716   001BFE                     
  2717                           ; BSR set to: 14
  2718                           ;dc_motor.c: 43:     T2PR=PWMperiod;
  2719   001BFE  C005  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2720   001C02                     
  2721                           ; BSR set to: 14
  2722                           ;dc_motor.c: 44:     T2CONbits.ON=1;
  2723   001C02  8EBD               	bsf	189,7,c	;volatile
  2724   001C04                     
  2725                           ; BSR set to: 14
  2726                           ;dc_motor.c: 48:     CCPR1H=0;
  2727   001C04  0E00               	movlw	0
  2728   001C06  6EAA               	movwf	170,c	;volatile
  2729   001C08                     
  2730                           ; BSR set to: 14
  2731                           ;dc_motor.c: 49:     CCPR2H=0;
  2732   001C08  0E00               	movlw	0
  2733   001C0A  6EA6               	movwf	166,c	;volatile
  2734   001C0C                     
  2735                           ; BSR set to: 14
  2736                           ;dc_motor.c: 50:     CCPR3H=0;
  2737   001C0C  0E00               	movlw	0
  2738   001C0E  010F               	movlb	15	; () banked
  2739   001C10  6F25               	movwf	37,b	;volatile
  2740   001C12                     
  2741                           ; BSR set to: 15
  2742                           ;dc_motor.c: 51:     CCPR4H=0;
  2743   001C12  0E00               	movlw	0
  2744   001C14  6F21               	movwf	33,b	;volatile
  2745   001C16                     
  2746                           ; BSR set to: 15
  2747                           ;dc_motor.c: 54:     CCPTMRS0bits.C1TSEL=0;
  2748   001C16  0EFC               	movlw	-4
  2749   001C18  16AD               	andwf	173,f,c	;volatile
  2750   001C1A                     
  2751                           ; BSR set to: 15
  2752                           ;dc_motor.c: 55:     CCPTMRS0bits.C2TSEL=0;
  2753   001C1A  0EF3               	movlw	-13
  2754   001C1C  16AD               	andwf	173,f,c	;volatile
  2755   001C1E                     
  2756                           ; BSR set to: 15
  2757                           ;dc_motor.c: 56:     CCPTMRS0bits.C3TSEL=0;
  2758   001C1E  0ECF               	movlw	-49
  2759   001C20  16AD               	andwf	173,f,c	;volatile
  2760   001C22                     
  2761                           ; BSR set to: 15
  2762                           ;dc_motor.c: 57:     CCPTMRS0bits.C4TSEL=0;
  2763   001C22  0E3F               	movlw	-193
  2764   001C24  16AD               	andwf	173,f,c	;volatile
  2765   001C26                     
  2766                           ; BSR set to: 15
  2767                           ;dc_motor.c: 60:     CCP1CONbits.FMT=1;
  2768   001C26  88AB               	bsf	171,4,c	;volatile
  2769   001C28                     
  2770                           ; BSR set to: 15
  2771                           ;dc_motor.c: 61:     CCP1CONbits.CCP1MODE=0b1100;
  2772   001C28  50AB               	movf	171,w,c	;volatile
  2773   001C2A  0BF0               	andlw	-16
  2774   001C2C  090C               	iorlw	12
  2775   001C2E  6EAB               	movwf	171,c	;volatile
  2776   001C30                     
  2777                           ; BSR set to: 15
  2778                           ;dc_motor.c: 62:     CCP1CONbits.EN=1;
  2779   001C30  8EAB               	bsf	171,7,c	;volatile
  2780   001C32                     
  2781                           ; BSR set to: 15
  2782                           ;dc_motor.c: 64:     CCP2CONbits.FMT=1;
  2783   001C32  88A7               	bsf	167,4,c	;volatile
  2784   001C34                     
  2785                           ; BSR set to: 15
  2786                           ;dc_motor.c: 65:     CCP2CONbits.CCP2MODE=0b1100;
  2787   001C34  50A7               	movf	167,w,c	;volatile
  2788   001C36  0BF0               	andlw	-16
  2789   001C38  090C               	iorlw	12
  2790   001C3A  6EA7               	movwf	167,c	;volatile
  2791   001C3C                     
  2792                           ; BSR set to: 15
  2793                           ;dc_motor.c: 66:     CCP2CONbits.EN=1;
  2794   001C3C  8EA7               	bsf	167,7,c	;volatile
  2795   001C3E                     
  2796                           ; BSR set to: 15
  2797                           ;dc_motor.c: 68:     CCP3CONbits.FMT=1;
  2798   001C3E  8926               	bsf	38,4,b	;volatile
  2799   001C40                     
  2800                           ; BSR set to: 15
  2801                           ;dc_motor.c: 69:     CCP3CONbits.CCP3MODE=0b1100;
  2802   001C40  5126               	movf	38,w,b	;volatile
  2803   001C42  0BF0               	andlw	-16
  2804   001C44  090C               	iorlw	12
  2805   001C46  6F26               	movwf	38,b	;volatile
  2806   001C48                     
  2807                           ; BSR set to: 15
  2808                           ;dc_motor.c: 70:     CCP3CONbits.EN=1;
  2809   001C48  8F26               	bsf	38,7,b	;volatile
  2810   001C4A                     
  2811                           ; BSR set to: 15
  2812                           ;dc_motor.c: 72:     CCP4CONbits.FMT=1;
  2813   001C4A  8922               	bsf	34,4,b	;volatile
  2814   001C4C                     
  2815                           ; BSR set to: 15
  2816                           ;dc_motor.c: 73:     CCP4CONbits.CCP4MODE=0b1100;
  2817   001C4C  5122               	movf	34,w,b	;volatile
  2818   001C4E  0BF0               	andlw	-16
  2819   001C50  090C               	iorlw	12
  2820   001C52  6F22               	movwf	34,b	;volatile
  2821   001C54                     
  2822                           ; BSR set to: 15
  2823                           ;dc_motor.c: 74:     CCP4CONbits.EN=1;
  2824   001C54  8F22               	bsf	34,7,b	;volatile
  2825   001C56                     
  2826                           ; BSR set to: 15
  2827   001C56  0012               	return		;funcret
  2828   001C58                     __end_of_initDCmotorsPWM:
  2829                           	callstack 0
  2830                           
  2831 ;; *************** function _initCalibColors *****************
  2832 ;; Defined at:
  2833 ;;		line 75 in file "color.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;		None
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;		None
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      void 
  2840 ;; Registers used:
  2841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2851 ;;Total ram usage:        0 bytes
  2852 ;; Hardware stack levels used: 1
  2853 ;; Hardware stack levels required when called: 2
  2854 ;; This function calls:
  2855 ;;		Nothing
  2856 ;; This function is called by:
  2857 ;;		_main
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           	psect	text14
  2862   001B16                     __ptext14:
  2863                           	callstack 0
  2864   001B16                     _initCalibColors:
  2865                           	callstack 28
  2866   001B16                     
  2867                           ;color.c: 76:  calibColors[0] = red;
  2868   001B16  EE21  F0AF         	lfsr	2,_red
  2869   001B1A  EE12  F000         	lfsr	1,_calibColors
  2870   001B1E  0E18               	movlw	24
  2871   001B20                     u2841:
  2872   001B20  CFDB FFE3          	movff	plusw2,plusw1
  2873   001B24  06E8               	decf	wreg,f,c
  2874   001B26  E2FC               	bc	u2841
  2875                           
  2876                           ;color.c: 77:     calibColors[1] = green;
  2877   001B28  EE21  F096         	lfsr	2,_green
  2878   001B2C  EE12  F019         	lfsr	1,_calibColors+25
  2879   001B30  0E18               	movlw	24
  2880   001B32                     u2851:
  2881   001B32  CFDB FFE3          	movff	plusw2,plusw1
  2882   001B36  06E8               	decf	wreg,f,c
  2883   001B38  E2FC               	bc	u2851
  2884                           
  2885                           ;color.c: 78:     calibColors[2] = blue;
  2886   001B3A  EE21  F07D         	lfsr	2,_blue
  2887   001B3E  EE12  F032         	lfsr	1,_calibColors+50
  2888   001B42  0E18               	movlw	24
  2889   001B44                     u2861:
  2890   001B44  CFDB FFE3          	movff	plusw2,plusw1
  2891   001B48  06E8               	decf	wreg,f,c
  2892   001B4A  E2FC               	bc	u2861
  2893                           
  2894                           ;color.c: 79:     calibColors[3] = yellow;
  2895   001B4C  EE21  F064         	lfsr	2,_yellow
  2896   001B50  EE12  F04B         	lfsr	1,_calibColors+75
  2897   001B54  0E18               	movlw	24
  2898   001B56                     u2871:
  2899   001B56  CFDB FFE3          	movff	plusw2,plusw1
  2900   001B5A  06E8               	decf	wreg,f,c
  2901   001B5C  E2FC               	bc	u2871
  2902                           
  2903                           ;color.c: 80:     calibColors[4] = pink;
  2904   001B5E  EE21  F04B         	lfsr	2,_pink
  2905   001B62  EE12  F064         	lfsr	1,_calibColors+100
  2906   001B66  0E18               	movlw	24
  2907   001B68                     u2881:
  2908   001B68  CFDB FFE3          	movff	plusw2,plusw1
  2909   001B6C  06E8               	decf	wreg,f,c
  2910   001B6E  E2FC               	bc	u2881
  2911                           
  2912                           ;color.c: 81:     calibColors[5] = orange;
  2913   001B70  EE21  F032         	lfsr	2,_orange
  2914   001B74  EE12  F07D         	lfsr	1,_calibColors+125
  2915   001B78  0E18               	movlw	24
  2916   001B7A                     u2891:
  2917   001B7A  CFDB FFE3          	movff	plusw2,plusw1
  2918   001B7E  06E8               	decf	wreg,f,c
  2919   001B80  E2FC               	bc	u2891
  2920                           
  2921                           ;color.c: 82:     calibColors[6] = lightBlue;
  2922   001B82  EE21  F019         	lfsr	2,_lightBlue
  2923   001B86  EE12  F096         	lfsr	1,_calibColors+150
  2924   001B8A  0E18               	movlw	24
  2925   001B8C                     u2901:
  2926   001B8C  CFDB FFE3          	movff	plusw2,plusw1
  2927   001B90  06E8               	decf	wreg,f,c
  2928   001B92  E2FC               	bc	u2901
  2929                           
  2930                           ;color.c: 83:     calibColors[7] = whiteC;
  2931   001B94  EE21  F000         	lfsr	2,_whiteC
  2932   001B98  EE12  F0AF         	lfsr	1,_calibColors+175
  2933   001B9C  0E18               	movlw	24
  2934   001B9E                     u2911:
  2935   001B9E  CFDB FFE3          	movff	plusw2,plusw1
  2936   001BA2  06E8               	decf	wreg,f,c
  2937   001BA4  E2FC               	bc	u2911
  2938                           
  2939                           ;color.c: 84:     calibColors[8] = blackC;
  2940   001BA6  EE22  F0E1         	lfsr	2,_blackC
  2941   001BAA  EE12  F0C8         	lfsr	1,_calibColors+200
  2942   001BAE  0E18               	movlw	24
  2943   001BB0                     u2921:
  2944   001BB0  CFDB FFE3          	movff	plusw2,plusw1
  2945   001BB4  06E8               	decf	wreg,f,c
  2946   001BB6  E2FC               	bc	u2921
  2947   001BB8  0012               	return		;funcret
  2948   001BBA                     __end_of_initCalibColors:
  2949                           	callstack 0
  2950                           
  2951 ;; *************** function _color_click_init *****************
  2952 ;; Defined at:
  2953 ;;		line 10 in file "color.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;		None
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;		None
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  1    wreg      void 
  2960 ;; Registers used:
  2961 ;;		wreg, status,2, status,0, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2969 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2970 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2971 ;;Total ram usage:        1 bytes
  2972 ;; Hardware stack levels used: 1
  2973 ;; Hardware stack levels required when called: 5
  2974 ;; This function calls:
  2975 ;;		_I2C_2_Master_Init
  2976 ;;		_color_writetoaddr
  2977 ;; This function is called by:
  2978 ;;		_main
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text15
  2983   001EF8                     __ptext15:
  2984                           	callstack 0
  2985   001EF8                     _color_click_init:
  2986                           	callstack 25
  2987   001EF8                     
  2988                           ;color.c: 13:     I2C_2_Master_Init();
  2989   001EF8  ECC6  F00F         	call	_I2C_2_Master_Init	;wreg free
  2990   001EFC                     
  2991                           ;color.c: 16:   color_writetoaddr(0x00, 0x01);
  2992   001EFC  0E01               	movlw	1
  2993   001EFE  6E07               	movwf	color_writetoaddr@value^0,c
  2994   001F00  0E00               	movlw	0
  2995   001F02  EC27  F010         	call	_color_writetoaddr
  2996   001F06                     
  2997                           ;color.c: 17:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2998   001F06  0E3F               	movlw	63
  2999   001F08  6E09               	movwf	??_color_click_init^0,c
  3000   001F0A  0E55               	movlw	85
  3001   001F0C                     u3607:
  3002   001F0C  2EE8               	decfsz	wreg,f,c
  3003   001F0E  D7FE               	bra	u3607
  3004   001F10  2E09               	decfsz	??_color_click_init^0,f,c
  3005   001F12  D7FC               	bra	u3607
  3006   001F14  0000               	nop	
  3007   001F16                     
  3008                           ;color.c: 20:  color_writetoaddr(0x00, 0x03);
  3009   001F16  0E03               	movlw	3
  3010   001F18  6E07               	movwf	color_writetoaddr@value^0,c
  3011   001F1A  0E00               	movlw	0
  3012   001F1C  EC27  F010         	call	_color_writetoaddr
  3013   001F20                     
  3014                           ;color.c: 23:  color_writetoaddr(0x01, 0xD5);
  3015   001F20  0ED5               	movlw	213
  3016   001F22  6E07               	movwf	color_writetoaddr@value^0,c
  3017   001F24  0E01               	movlw	1
  3018   001F26  EC27  F010         	call	_color_writetoaddr
  3019   001F2A  0012               	return		;funcret
  3020   001F2C                     __end_of_color_click_init:
  3021                           	callstack 0
  3022                           
  3023 ;; *************** function _color_writetoaddr *****************
  3024 ;; Defined at:
  3025 ;;		line 39 in file "color.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  address         1    wreg     unsigned char 
  3028 ;;  value           1    6[COMRAM] unsigned char 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;  address         1    7[COMRAM] unsigned char 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      void 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2, status,0, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3040 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3041 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3043 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3044 ;;Total ram usage:        2 bytes
  3045 ;; Hardware stack levels used: 1
  3046 ;; Hardware stack levels required when called: 4
  3047 ;; This function calls:
  3048 ;;		_I2C_2_Master_Start
  3049 ;;		_I2C_2_Master_Stop
  3050 ;;		_I2C_2_Master_Write
  3051 ;; This function is called by:
  3052 ;;		_color_click_init
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text16
  3057   00204E                     __ptext16:
  3058                           	callstack 0
  3059   00204E                     _color_writetoaddr:
  3060                           	callstack 25
  3061                           
  3062                           ;incstack = 0
  3063                           ;color_writetoaddr@address stored from wreg
  3064   00204E  6E08               	movwf	color_writetoaddr@address^0,c
  3065   002050                     
  3066                           ;color.c: 40:     I2C_2_Master_Start();
  3067   002050  EC6D  F010         	call	_I2C_2_Master_Start	;wreg free
  3068                           
  3069                           ;color.c: 41:     I2C_2_Master_Write(0x52 | 0x00);
  3070   002054  0E52               	movlw	82
  3071   002056  EC5C  F010         	call	_I2C_2_Master_Write
  3072                           
  3073                           ;color.c: 42:     I2C_2_Master_Write(0x80 | address);
  3074   00205A  5008               	movf	color_writetoaddr@address^0,w,c
  3075   00205C  0980               	iorlw	128
  3076   00205E  EC5C  F010         	call	_I2C_2_Master_Write
  3077                           
  3078                           ;color.c: 43:     I2C_2_Master_Write(value);
  3079   002062  5007               	movf	color_writetoaddr@value^0,w,c
  3080   002064  EC5C  F010         	call	_I2C_2_Master_Write
  3081                           
  3082                           ;color.c: 44:     I2C_2_Master_Stop();
  3083   002068  EC68  F010         	call	_I2C_2_Master_Stop	;wreg free
  3084   00206C  0012               	return		;funcret
  3085   00206E                     __end_of_color_writetoaddr:
  3086                           	callstack 0
  3087                           
  3088 ;; *************** function _I2C_2_Master_Init *****************
  3089 ;; Defined at:
  3090 ;;		line 4 in file "i2c.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg, status,2
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3108 ;;Total ram usage:        0 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; Hardware stack levels required when called: 2
  3111 ;; This function calls:
  3112 ;;		Nothing
  3113 ;; This function is called by:
  3114 ;;		_color_click_init
  3115 ;;		_main
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           	psect	text17
  3120   001F8C                     __ptext17:
  3121                           	callstack 0
  3122   001F8C                     _I2C_2_Master_Init:
  3123                           	callstack 27
  3124   001F8C                     
  3125                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3126   001F8C  010E               	movlb	14	; () banked
  3127   001F8E  51D9               	movf	217,w,b	;volatile
  3128   001F90  0BF0               	andlw	-16
  3129   001F92  0908               	iorlw	8
  3130   001F94  6FD9               	movwf	217,b	;volatile
  3131   001F96                     
  3132                           ; BSR set to: 14
  3133                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3134   001F96  8BD9               	bsf	217,5,b	;volatile
  3135                           
  3136                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3137   001F98  0E9F               	movlw	159
  3138   001F9A  6FD6               	movwf	214,b	;volatile
  3139   001F9C                     
  3140                           ; BSR set to: 14
  3141                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3142   001F9C  8A84               	bsf	132,5,c	;volatile
  3143   001F9E                     
  3144                           ; BSR set to: 14
  3145                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3146   001F9E  8C84               	bsf	132,6,c	;volatile
  3147   001FA0                     
  3148                           ; BSR set to: 14
  3149                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3150   001FA0  9BA7               	bcf	167,5,b	;volatile
  3151   001FA2                     
  3152                           ; BSR set to: 14
  3153                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3154   001FA2  9DA7               	bcf	167,6,b	;volatile
  3155                           
  3156                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3157   001FA4  0E1D               	movlw	29
  3158   001FA6  6F1D               	movwf	29,b	;volatile
  3159                           
  3160                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3161   001FA8  0E1E               	movlw	30
  3162   001FAA  6F1C               	movwf	28,b	;volatile
  3163                           
  3164                           ;i2c.c: 18:   RD5PPS=0x1C;
  3165   001FAC  0E1C               	movlw	28
  3166   001FAE  6F6F               	movwf	111,b	;volatile
  3167                           
  3168                           ;i2c.c: 19:   RD6PPS=0x1B;
  3169   001FB0  0E1B               	movlw	27
  3170   001FB2  6F70               	movwf	112,b	;volatile
  3171   001FB4                     
  3172                           ; BSR set to: 14
  3173   001FB4  0012               	return		;funcret
  3174   001FB6                     __end_of_I2C_2_Master_Init:
  3175                           	callstack 0
  3176                           
  3177 ;; *************** function _checkColor *****************
  3178 ;; Defined at:
  3179 ;;		line 127 in file "color.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;		None
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  colorDiff      16   51[BANK0 ] struct RGBC
  3184 ;;  i               2   33[BANK0 ] int 
  3185 ;;  currColor      25    0[BANK0 ] struct color
  3186 ;;  Vals           16   35[BANK0 ] struct RGBC
  3187 ;;  absDiff         4   29[BANK0 ] long 
  3188 ;;  prevAbsDiff     4   25[BANK0 ] long 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  25   33[COMRAM] struct color
  3191 ;; Registers used:
  3192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3198 ;;      Params:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3199 ;;      Locals:         0      67       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3200 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3201 ;;      Totals:        33      67       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3202 ;;Total ram usage:      100 bytes
  3203 ;; Hardware stack levels used: 1
  3204 ;; Hardware stack levels required when called: 5
  3205 ;; This function calls:
  3206 ;;		___aldiv
  3207 ;;		___wmul
  3208 ;;		_abs
  3209 ;;		_color_read_all
  3210 ;;		_triLED_tog
  3211 ;; This function is called by:
  3212 ;;		_main
  3213 ;;		_checkWall
  3214 ;;		_checkWhite
  3215 ;;		_color2instruction
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text18
  3220   000E4A                     __ptext18:
  3221                           	callstack 0
  3222   000E4A                     _checkColor:
  3223                           	callstack 25
  3224   000E4A                     
  3225                           ;color.c: 129:     triLED_tog(1);
  3226   000E4A  0E01               	movlw	1
  3227   000E4C  ECDB  F00F         	call	_triLED_tog
  3228   000E50                     
  3229                           ;color.c: 131:  RGBC Vals;;color.c: 132:  color currColor;;color.c: 134:  color_read_all
      +                          (&Vals);
  3230   000E50  0E83               	movlw	low checkColor@Vals
  3231   000E52  6E09               	movwf	color_read_all@readVals^0,c
  3232   000E54  6A0A               	clrf	(color_read_all@readVals+1)^0,c
  3233   000E56  ECFB  F009         	call	_color_read_all	;wreg free
  3234   000E5A                     
  3235                           ;color.c: 137:  long absDiff;;color.c: 138:  long prevAbsDiff = 8000000;
  3236   000E5A  0E00               	movlw	0
  3237   000E5C  0100               	movlb	0	; () banked
  3238   000E5E  6F79               	movwf	checkColor@prevAbsDiff& (0+255),b
  3239   000E60  0E12               	movlw	18
  3240   000E62  6F7A               	movwf	(checkColor@prevAbsDiff+1)& (0+255),b
  3241   000E64  0E7A               	movlw	122
  3242   000E66  6F7B               	movwf	(checkColor@prevAbsDiff+2)& (0+255),b
  3243   000E68  0E00               	movlw	0
  3244   000E6A  6F7C               	movwf	(checkColor@prevAbsDiff+3)& (0+255),b
  3245   000E6C                     
  3246                           ; BSR set to: 0
  3247                           ;color.c: 140:  for(int i =0;i<9;i++){
  3248   000E6C  0E00               	movlw	0
  3249   000E6E  6F82               	movwf	(checkColor@i+1)& (0+255),b
  3250   000E70  0E00               	movlw	0
  3251   000E72  6F81               	movwf	checkColor@i& (0+255),b
  3252   000E74                     l4201:
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;color.c: 142:   RGBC colorDiff;;color.c: 144:   colorDiff.red = ((Vals.red) - calibColo
      +                          rs[i].red)/1000;
  3256   000E74  C081  F005         	movff	checkColor@i,___wmul@multiplier
  3257   000E78  C082  F006         	movff	checkColor@i+1,___wmul@multiplier+1
  3258   000E7C  0E00               	movlw	0
  3259   000E7E  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  3260   000E80  0E19               	movlw	25
  3261   000E82  6E07               	movwf	___wmul@multiplicand^0,c
  3262   000E84  EC03  F010         	call	___wmul	;wreg free
  3263   000E88  0E01               	movlw	low (_calibColors+1)
  3264   000E8A  2405               	addwf	?___wmul^0,w,c
  3265   000E8C  6ED9               	movwf	fsr2l,c
  3266   000E8E  0E02               	movlw	high (_calibColors+1)
  3267   000E90  2006               	addwfc	(?___wmul+1)^0,w,c
  3268   000E92  6EDA               	movwf	fsr2h,c
  3269   000E94  CFDE F03B          	movff	postinc2,??_checkColor
  3270   000E98  CFDE F03C          	movff	postinc2,??_checkColor+1
  3271   000E9C  CFDE F03D          	movff	postinc2,??_checkColor+2
  3272   000EA0  CFDE F03E          	movff	postinc2,??_checkColor+3
  3273   000EA4  503B               	movf	??_checkColor^0,w,c
  3274   000EA6  0100               	movlb	0	; () banked
  3275   000EA8  5D83               	subwf	checkColor@Vals& (0+255),w,b
  3276   000EAA  6E0B               	movwf	___aldiv@dividend^0,c
  3277   000EAC  503C               	movf	(??_checkColor+1)^0,w,c
  3278   000EAE  5984               	subwfb	(checkColor@Vals+1)& (0+255),w,b
  3279   000EB0  6E0C               	movwf	(___aldiv@dividend+1)^0,c
  3280   000EB2  503D               	movf	(??_checkColor+2)^0,w,c
  3281   000EB4  5985               	subwfb	(checkColor@Vals+2)& (0+255),w,b
  3282   000EB6  6E0D               	movwf	(___aldiv@dividend+2)^0,c
  3283   000EB8  503E               	movf	(??_checkColor+3)^0,w,c
  3284   000EBA  5986               	subwfb	(checkColor@Vals+3)& (0+255),w,b
  3285   000EBC  6E0E               	movwf	(___aldiv@dividend+3)^0,c
  3286   000EBE  0EE8               	movlw	232
  3287   000EC0  6E0F               	movwf	___aldiv@divisor^0,c
  3288   000EC2  0E03               	movlw	3
  3289   000EC4  6E10               	movwf	(___aldiv@divisor+1)^0,c
  3290   000EC6  0E00               	movlw	0
  3291   000EC8  6E11               	movwf	(___aldiv@divisor+2)^0,c
  3292   000ECA  0E00               	movlw	0
  3293   000ECC  6E12               	movwf	(___aldiv@divisor+3)^0,c
  3294   000ECE  EC70  F00B         	call	___aldiv	;wreg free
  3295   000ED2  C00B  F093         	movff	?___aldiv,checkColor@colorDiff
  3296   000ED6  C00C  F094         	movff	?___aldiv+1,checkColor@colorDiff+1
  3297   000EDA  C00D  F095         	movff	?___aldiv+2,checkColor@colorDiff+2
  3298   000EDE  C00E  F096         	movff	?___aldiv+3,checkColor@colorDiff+3
  3299                           
  3300                           ;color.c: 145:   colorDiff.green = ((Vals.green) - calibColors[i].green )/1000;
  3301   000EE2  C081  F005         	movff	checkColor@i,___wmul@multiplier
  3302   000EE6  C082  F006         	movff	checkColor@i+1,___wmul@multiplier+1
  3303   000EEA  0E00               	movlw	0
  3304   000EEC  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  3305   000EEE  0E19               	movlw	25
  3306   000EF0  6E07               	movwf	___wmul@multiplicand^0,c
  3307   000EF2  EC03  F010         	call	___wmul	;wreg free
  3308   000EF6  0E05               	movlw	low (_calibColors+5)
  3309   000EF8  2405               	addwf	?___wmul^0,w,c
  3310   000EFA  6ED9               	movwf	fsr2l,c
  3311   000EFC  0E02               	movlw	high (_calibColors+5)
  3312   000EFE  2006               	addwfc	(?___wmul+1)^0,w,c
  3313   000F00  6EDA               	movwf	fsr2h,c
  3314   000F02  CFDE F03B          	movff	postinc2,??_checkColor
  3315   000F06  CFDE F03C          	movff	postinc2,??_checkColor+1
  3316   000F0A  CFDE F03D          	movff	postinc2,??_checkColor+2
  3317   000F0E  CFDE F03E          	movff	postinc2,??_checkColor+3
  3318   000F12  503B               	movf	??_checkColor^0,w,c
  3319   000F14  0100               	movlb	0	; () banked
  3320   000F16  5D87               	subwf	(checkColor@Vals+4)& (0+255),w,b
  3321   000F18  6E0B               	movwf	___aldiv@dividend^0,c
  3322   000F1A  503C               	movf	(??_checkColor+1)^0,w,c
  3323   000F1C  5988               	subwfb	(checkColor@Vals+5)& (0+255),w,b
  3324   000F1E  6E0C               	movwf	(___aldiv@dividend+1)^0,c
  3325   000F20  503D               	movf	(??_checkColor+2)^0,w,c
  3326   000F22  5989               	subwfb	(checkColor@Vals+6)& (0+255),w,b
  3327   000F24  6E0D               	movwf	(___aldiv@dividend+2)^0,c
  3328   000F26  503E               	movf	(??_checkColor+3)^0,w,c
  3329   000F28  598A               	subwfb	(checkColor@Vals+7)& (0+255),w,b
  3330   000F2A  6E0E               	movwf	(___aldiv@dividend+3)^0,c
  3331   000F2C  0EE8               	movlw	232
  3332   000F2E  6E0F               	movwf	___aldiv@divisor^0,c
  3333   000F30  0E03               	movlw	3
  3334   000F32  6E10               	movwf	(___aldiv@divisor+1)^0,c
  3335   000F34  0E00               	movlw	0
  3336   000F36  6E11               	movwf	(___aldiv@divisor+2)^0,c
  3337   000F38  0E00               	movlw	0
  3338   000F3A  6E12               	movwf	(___aldiv@divisor+3)^0,c
  3339   000F3C  EC70  F00B         	call	___aldiv	;wreg free
  3340   000F40  C00B  F097         	movff	?___aldiv,checkColor@colorDiff+4
  3341   000F44  C00C  F098         	movff	?___aldiv+1,checkColor@colorDiff+5
  3342   000F48  C00D  F099         	movff	?___aldiv+2,checkColor@colorDiff+6
  3343   000F4C  C00E  F09A         	movff	?___aldiv+3,checkColor@colorDiff+7
  3344                           
  3345                           ;color.c: 146:   colorDiff.blue = ((Vals.blue) - calibColors[i].blue )/1000;
  3346   000F50  C081  F005         	movff	checkColor@i,___wmul@multiplier
  3347   000F54  C082  F006         	movff	checkColor@i+1,___wmul@multiplier+1
  3348   000F58  0E00               	movlw	0
  3349   000F5A  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  3350   000F5C  0E19               	movlw	25
  3351   000F5E  6E07               	movwf	___wmul@multiplicand^0,c
  3352   000F60  EC03  F010         	call	___wmul	;wreg free
  3353   000F64  0E09               	movlw	low (_calibColors+9)
  3354   000F66  2405               	addwf	?___wmul^0,w,c
  3355   000F68  6ED9               	movwf	fsr2l,c
  3356   000F6A  0E02               	movlw	high (_calibColors+9)
  3357   000F6C  2006               	addwfc	(?___wmul+1)^0,w,c
  3358   000F6E  6EDA               	movwf	fsr2h,c
  3359   000F70  CFDE F03B          	movff	postinc2,??_checkColor
  3360   000F74  CFDE F03C          	movff	postinc2,??_checkColor+1
  3361   000F78  CFDE F03D          	movff	postinc2,??_checkColor+2
  3362   000F7C  CFDE F03E          	movff	postinc2,??_checkColor+3
  3363   000F80  503B               	movf	??_checkColor^0,w,c
  3364   000F82  0100               	movlb	0	; () banked
  3365   000F84  5D8B               	subwf	(checkColor@Vals+8)& (0+255),w,b
  3366   000F86  6E0B               	movwf	___aldiv@dividend^0,c
  3367   000F88  503C               	movf	(??_checkColor+1)^0,w,c
  3368   000F8A  598C               	subwfb	(checkColor@Vals+9)& (0+255),w,b
  3369   000F8C  6E0C               	movwf	(___aldiv@dividend+1)^0,c
  3370   000F8E  503D               	movf	(??_checkColor+2)^0,w,c
  3371   000F90  598D               	subwfb	(checkColor@Vals+10)& (0+255),w,b
  3372   000F92  6E0D               	movwf	(___aldiv@dividend+2)^0,c
  3373   000F94  503E               	movf	(??_checkColor+3)^0,w,c
  3374   000F96  598E               	subwfb	(checkColor@Vals+11)& (0+255),w,b
  3375   000F98  6E0E               	movwf	(___aldiv@dividend+3)^0,c
  3376   000F9A  0EE8               	movlw	232
  3377   000F9C  6E0F               	movwf	___aldiv@divisor^0,c
  3378   000F9E  0E03               	movlw	3
  3379   000FA0  6E10               	movwf	(___aldiv@divisor+1)^0,c
  3380   000FA2  0E00               	movlw	0
  3381   000FA4  6E11               	movwf	(___aldiv@divisor+2)^0,c
  3382   000FA6  0E00               	movlw	0
  3383   000FA8  6E12               	movwf	(___aldiv@divisor+3)^0,c
  3384   000FAA  EC70  F00B         	call	___aldiv	;wreg free
  3385   000FAE  C00B  F09B         	movff	?___aldiv,checkColor@colorDiff+8
  3386   000FB2  C00C  F09C         	movff	?___aldiv+1,checkColor@colorDiff+9
  3387   000FB6  C00D  F09D         	movff	?___aldiv+2,checkColor@colorDiff+10
  3388   000FBA  C00E  F09E         	movff	?___aldiv+3,checkColor@colorDiff+11
  3389                           
  3390                           ;color.c: 147:   colorDiff.clear = ((Vals.clear) - calibColors[i].clear )/1000 ;
  3391   000FBE  C081  F005         	movff	checkColor@i,___wmul@multiplier
  3392   000FC2  C082  F006         	movff	checkColor@i+1,___wmul@multiplier+1
  3393   000FC6  0E00               	movlw	0
  3394   000FC8  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  3395   000FCA  0E19               	movlw	25
  3396   000FCC  6E07               	movwf	___wmul@multiplicand^0,c
  3397   000FCE  EC03  F010         	call	___wmul	;wreg free
  3398   000FD2  0E0D               	movlw	low (_calibColors+13)
  3399   000FD4  2405               	addwf	?___wmul^0,w,c
  3400   000FD6  6ED9               	movwf	fsr2l,c
  3401   000FD8  0E02               	movlw	high (_calibColors+13)
  3402   000FDA  2006               	addwfc	(?___wmul+1)^0,w,c
  3403   000FDC  6EDA               	movwf	fsr2h,c
  3404   000FDE  CFDE F03B          	movff	postinc2,??_checkColor
  3405   000FE2  CFDE F03C          	movff	postinc2,??_checkColor+1
  3406   000FE6  CFDE F03D          	movff	postinc2,??_checkColor+2
  3407   000FEA  CFDE F03E          	movff	postinc2,??_checkColor+3
  3408   000FEE  503B               	movf	??_checkColor^0,w,c
  3409   000FF0  0100               	movlb	0	; () banked
  3410   000FF2  5D8F               	subwf	(checkColor@Vals+12)& (0+255),w,b
  3411   000FF4  6E0B               	movwf	___aldiv@dividend^0,c
  3412   000FF6  503C               	movf	(??_checkColor+1)^0,w,c
  3413   000FF8  5990               	subwfb	(checkColor@Vals+13)& (0+255),w,b
  3414   000FFA  6E0C               	movwf	(___aldiv@dividend+1)^0,c
  3415   000FFC  503D               	movf	(??_checkColor+2)^0,w,c
  3416   000FFE  5991               	subwfb	(checkColor@Vals+14)& (0+255),w,b
  3417   001000  6E0D               	movwf	(___aldiv@dividend+2)^0,c
  3418   001002  503E               	movf	(??_checkColor+3)^0,w,c
  3419   001004  5992               	subwfb	(checkColor@Vals+15)& (0+255),w,b
  3420   001006  6E0E               	movwf	(___aldiv@dividend+3)^0,c
  3421   001008  0EE8               	movlw	232
  3422   00100A  6E0F               	movwf	___aldiv@divisor^0,c
  3423   00100C  0E03               	movlw	3
  3424   00100E  6E10               	movwf	(___aldiv@divisor+1)^0,c
  3425   001010  0E00               	movlw	0
  3426   001012  6E11               	movwf	(___aldiv@divisor+2)^0,c
  3427   001014  0E00               	movlw	0
  3428   001016  6E12               	movwf	(___aldiv@divisor+3)^0,c
  3429   001018  EC70  F00B         	call	___aldiv	;wreg free
  3430   00101C  C00B  F09F         	movff	?___aldiv,checkColor@colorDiff+12
  3431   001020  C00C  F0A0         	movff	?___aldiv+1,checkColor@colorDiff+13
  3432   001024  C00D  F0A1         	movff	?___aldiv+2,checkColor@colorDiff+14
  3433   001028  C00E  F0A2         	movff	?___aldiv+3,checkColor@colorDiff+15
  3434   00102C                     
  3435                           ;color.c: 150:   absDiff = abs(colorDiff.red) + abs(colorDiff.green) + abs(colorDiff.blu
      +                          e) + abs(colorDiff.clear);
  3436   00102C  C093  F00F         	movff	checkColor@colorDiff,abs@a
  3437   001030  C094  F010         	movff	checkColor@colorDiff+1,abs@a+1
  3438   001034  EC96  F00F         	call	_abs	;wreg free
  3439   001038  C00F  F03B         	movff	?_abs,??_checkColor
  3440   00103C  C010  F03C         	movff	?_abs+1,??_checkColor+1
  3441   001040  C097  F00F         	movff	checkColor@colorDiff+4,abs@a
  3442   001044  C098  F010         	movff	checkColor@colorDiff+5,abs@a+1
  3443   001048  EC96  F00F         	call	_abs	;wreg free
  3444   00104C  500F               	movf	?_abs^0,w,c
  3445   00104E  243B               	addwf	??_checkColor^0,w,c
  3446   001050  6E3D               	movwf	(??_checkColor+2)^0,c
  3447   001052  5010               	movf	(?_abs+1)^0,w,c
  3448   001054  203C               	addwfc	(??_checkColor+1)^0,w,c
  3449   001056  6E3E               	movwf	(??_checkColor+3)^0,c
  3450   001058  C09B  F00F         	movff	checkColor@colorDiff+8,abs@a
  3451   00105C  C09C  F010         	movff	checkColor@colorDiff+9,abs@a+1
  3452   001060  EC96  F00F         	call	_abs	;wreg free
  3453   001064  500F               	movf	?_abs^0,w,c
  3454   001066  243D               	addwf	(??_checkColor+2)^0,w,c
  3455   001068  6E3F               	movwf	(??_checkColor+4)^0,c
  3456   00106A  5010               	movf	(?_abs+1)^0,w,c
  3457   00106C  203E               	addwfc	(??_checkColor+3)^0,w,c
  3458   00106E  6E40               	movwf	(??_checkColor+5)^0,c
  3459   001070  C09F  F00F         	movff	checkColor@colorDiff+12,abs@a
  3460   001074  C0A0  F010         	movff	checkColor@colorDiff+13,abs@a+1
  3461   001078  EC96  F00F         	call	_abs	;wreg free
  3462   00107C  500F               	movf	?_abs^0,w,c
  3463   00107E  243F               	addwf	(??_checkColor+4)^0,w,c
  3464   001080  6E41               	movwf	(??_checkColor+6)^0,c
  3465   001082  5010               	movf	(?_abs+1)^0,w,c
  3466   001084  2040               	addwfc	(??_checkColor+5)^0,w,c
  3467   001086  6E42               	movwf	(??_checkColor+7)^0,c
  3468   001088  C041  F07D         	movff	??_checkColor+6,checkColor@absDiff
  3469   00108C  C042  F07E         	movff	??_checkColor+7,checkColor@absDiff+1
  3470   001090  0100               	movlb	0	; () banked
  3471   001092  0E00               	movlw	0
  3472   001094  BF7E               	btfsc	(checkColor@absDiff+1)& (0+255),7,b
  3473   001096  0EFF               	movlw	-1
  3474   001098  6F7F               	movwf	(checkColor@absDiff+2)& (0+255),b
  3475   00109A  6F80               	movwf	(checkColor@absDiff+3)& (0+255),b
  3476   00109C                     
  3477                           ; BSR set to: 0
  3478                           ;color.c: 153:   if(absDiff < prevAbsDiff){
  3479   00109C  5179               	movf	checkColor@prevAbsDiff& (0+255),w,b
  3480   00109E  5D7D               	subwf	checkColor@absDiff& (0+255),w,b
  3481   0010A0  517A               	movf	(checkColor@prevAbsDiff+1)& (0+255),w,b
  3482   0010A2  597E               	subwfb	(checkColor@absDiff+1)& (0+255),w,b
  3483   0010A4  517B               	movf	(checkColor@prevAbsDiff+2)& (0+255),w,b
  3484   0010A6  597F               	subwfb	(checkColor@absDiff+2)& (0+255),w,b
  3485   0010A8  5180               	movf	(checkColor@absDiff+3)& (0+255),w,b
  3486   0010AA  0A80               	xorlw	128
  3487   0010AC  6E3B               	movwf	??_checkColor^0,c
  3488   0010AE  517C               	movf	(checkColor@prevAbsDiff+3)& (0+255),w,b
  3489   0010B0  0A80               	xorlw	128
  3490   0010B2  583B               	subwfb	??_checkColor^0,w,c
  3491   0010B4  B0D8               	btfsc	status,0,c
  3492   0010B6  EF5F  F008         	goto	u3291
  3493   0010BA  EF61  F008         	goto	u3290
  3494   0010BE                     u3291:
  3495   0010BE  EF80  F008         	goto	l4211
  3496   0010C2                     u3290:
  3497   0010C2                     
  3498                           ; BSR set to: 0
  3499                           ;color.c: 156:    prevAbsDiff = absDiff;
  3500   0010C2  C07D  F079         	movff	checkColor@absDiff,checkColor@prevAbsDiff
  3501   0010C6  C07E  F07A         	movff	checkColor@absDiff+1,checkColor@prevAbsDiff+1
  3502   0010CA  C07F  F07B         	movff	checkColor@absDiff+2,checkColor@prevAbsDiff+2
  3503   0010CE  C080  F07C         	movff	checkColor@absDiff+3,checkColor@prevAbsDiff+3
  3504   0010D2                     
  3505                           ; BSR set to: 0
  3506                           ;color.c: 157:    currColor = calibColors[i];
  3507   0010D2  C081  F005         	movff	checkColor@i,___wmul@multiplier
  3508   0010D6  C082  F006         	movff	checkColor@i+1,___wmul@multiplier+1
  3509   0010DA  0E00               	movlw	0
  3510   0010DC  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  3511   0010DE  0E19               	movlw	25
  3512   0010E0  6E07               	movwf	___wmul@multiplicand^0,c
  3513   0010E2  EC03  F010         	call	___wmul	;wreg free
  3514   0010E6  0E00               	movlw	low _calibColors
  3515   0010E8  2405               	addwf	?___wmul^0,w,c
  3516   0010EA  6ED9               	movwf	fsr2l,c
  3517   0010EC  0E02               	movlw	high _calibColors
  3518   0010EE  2006               	addwfc	(?___wmul+1)^0,w,c
  3519   0010F0  6EDA               	movwf	fsr2h,c
  3520   0010F2  EE10  F060         	lfsr	1,checkColor@currColor
  3521   0010F6  0E18               	movlw	24
  3522   0010F8                     u3301:
  3523   0010F8  CFDB FFE3          	movff	plusw2,plusw1
  3524   0010FC  06E8               	decf	wreg,f,c
  3525   0010FE  E2FC               	bc	u3301
  3526   001100                     l4211:
  3527                           
  3528                           ;color.c: 159:  }
  3529   001100  0100               	movlb	0	; () banked
  3530   001102  4B81               	infsnz	checkColor@i& (0+255),f,b
  3531   001104  2B82               	incf	(checkColor@i+1)& (0+255),f,b
  3532   001106                     
  3533                           ; BSR set to: 0
  3534   001106  BF82               	btfsc	(checkColor@i+1)& (0+255),7,b
  3535   001108  EF8F  F008         	goto	u3311
  3536   00110C  5182               	movf	(checkColor@i+1)& (0+255),w,b
  3537   00110E  E109               	bnz	u3310
  3538   001110  0E09               	movlw	9
  3539   001112  5D81               	subwf	checkColor@i& (0+255),w,b
  3540   001114  A0D8               	btfss	status,0,c
  3541   001116  EF8F  F008         	goto	u3311
  3542   00111A  EF91  F008         	goto	u3310
  3543   00111E                     u3311:
  3544   00111E  EF3A  F007         	goto	l4201
  3545   001122                     u3310:
  3546   001122                     
  3547                           ; BSR set to: 0
  3548                           ;color.c: 161:  return currColor;
  3549   001122  EE20  F060         	lfsr	2,checkColor@currColor
  3550   001126  EE00  F022         	lfsr	0,?_checkColor
  3551   00112A  0E18               	movlw	24
  3552   00112C                     u3321:
  3553   00112C  CFDB FFEB          	movff	plusw2,plusw0
  3554   001130  06E8               	decf	wreg,f,c
  3555   001132  E2FC               	bc	u3321
  3556   001134                     
  3557                           ; BSR set to: 0
  3558   001134  0012               	return		;funcret
  3559   001136                     __end_of_checkColor:
  3560                           	callstack 0
  3561                           
  3562 ;; *************** function _triLED_tog *****************
  3563 ;; Defined at:
  3564 ;;		line 28 in file "color.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;  state           1    wreg     unsigned char 
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;  state           1    4[COMRAM] unsigned char 
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3579 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3581 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3582 ;;Total ram usage:        1 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; Hardware stack levels required when called: 2
  3585 ;; This function calls:
  3586 ;;		Nothing
  3587 ;; This function is called by:
  3588 ;;		_checkColor
  3589 ;;		_main
  3590 ;;		_calibCards
  3591 ;;		_checkIncidence
  3592 ;;		_checkWhite
  3593 ;;		_color2instruction
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           	psect	text19
  3598   001FB6                     __ptext19:
  3599                           	callstack 0
  3600   001FB6                     _triLED_tog:
  3601                           	callstack 28
  3602                           
  3603                           ; BSR set to: 0
  3604                           ;incstack = 0
  3605                           ;triLED_tog@state stored from wreg
  3606   001FB6  6E05               	movwf	triLED_tog@state^0,c
  3607   001FB8                     
  3608                           ;color.c: 30:     TRISGbits.TRISG0 = 0;
  3609   001FB8  9087               	bcf	135,0,c	;volatile
  3610                           
  3611                           ;color.c: 31:     TRISEbits.TRISE7 = 0;
  3612   001FBA  9E85               	bcf	133,7,c	;volatile
  3613                           
  3614                           ;color.c: 32:     TRISAbits.TRISA3 = 0;
  3615   001FBC  9681               	bcf	129,3,c	;volatile
  3616   001FBE                     
  3617                           ;color.c: 34:     LATGbits.LATG0 = state;
  3618   001FBE  B005               	btfsc	triLED_tog@state^0,0,c
  3619   001FC0  D002               	bra	u2725
  3620   001FC2  907F               	bcf	127,0,c	;volatile
  3621   001FC4  D001               	bra	u2726
  3622   001FC6                     u2725:
  3623   001FC6  807F               	bsf	127,0,c	;volatile
  3624   001FC8                     u2726:
  3625                           
  3626                           ;color.c: 35:     LATEbits.LATE7 = state;
  3627   001FC8  B005               	btfsc	triLED_tog@state^0,0,c
  3628   001FCA  D002               	bra	u2735
  3629   001FCC  9E7D               	bcf	125,7,c	;volatile
  3630   001FCE  D001               	bra	u2736
  3631   001FD0                     u2735:
  3632   001FD0  8E7D               	bsf	125,7,c	;volatile
  3633   001FD2                     u2736:
  3634                           
  3635                           ;color.c: 36:     LATAbits.LATA3 = state;
  3636   001FD2  B005               	btfsc	triLED_tog@state^0,0,c
  3637   001FD4  D002               	bra	u2745
  3638   001FD6  9679               	bcf	121,3,c	;volatile
  3639   001FD8  D001               	bra	u2746
  3640   001FDA                     u2745:
  3641   001FDA  8679               	bsf	121,3,c	;volatile
  3642   001FDC                     u2746:
  3643   001FDC  0012               	return		;funcret
  3644   001FDE                     __end_of_triLED_tog:
  3645                           	callstack 0
  3646                           
  3647 ;; *************** function _color_read_all *****************
  3648 ;; Defined at:
  3649 ;;		line 47 in file "color.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;  readVals        2    8[COMRAM] PTR struct RGBC
  3652 ;;		 -> main@Vals(16), checkIncidence@tmp(16), checkColor@Vals(16), calibCards@readVals(16), 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;  tmp            16   17[COMRAM] struct RGBC
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      void 
  3657 ;; Registers used:
  3658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3665 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3666 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3667 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3668 ;;Total ram usage:       25 bytes
  3669 ;; Hardware stack levels used: 1
  3670 ;; Hardware stack levels required when called: 4
  3671 ;; This function calls:
  3672 ;;		_I2C_2_Master_Read
  3673 ;;		_I2C_2_Master_RepStart
  3674 ;;		_I2C_2_Master_Start
  3675 ;;		_I2C_2_Master_Stop
  3676 ;;		_I2C_2_Master_Write
  3677 ;; This function is called by:
  3678 ;;		_checkColor
  3679 ;;		_main
  3680 ;;		_calibCards
  3681 ;;		_checkIncidence
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           	psect	text20
  3686   0013F6                     __ptext20:
  3687                           	callstack 0
  3688   0013F6                     _color_read_all:
  3689                           	callstack 26
  3690   0013F6                     
  3691                           ;color.c: 50:  RGBC tmp;;color.c: 52:  I2C_2_Master_Start();
  3692   0013F6  EC6D  F010         	call	_I2C_2_Master_Start	;wreg free
  3693                           
  3694                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  3695   0013FA  0E52               	movlw	82
  3696   0013FC  EC5C  F010         	call	_I2C_2_Master_Write
  3697                           
  3698                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  3699   001400  0EB4               	movlw	180
  3700   001402  EC5C  F010         	call	_I2C_2_Master_Write
  3701                           
  3702                           ;color.c: 55:  I2C_2_Master_RepStart();
  3703   001406  EC72  F010         	call	_I2C_2_Master_RepStart	;wreg free
  3704                           
  3705                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  3706   00140A  0E53               	movlw	83
  3707   00140C  EC5C  F010         	call	_I2C_2_Master_Write
  3708                           
  3709                           ;color.c: 58:  tmp.red=I2C_2_Master_Read(1);
  3710   001410  0E01               	movlw	1
  3711   001412  EC0D  F00F         	call	_I2C_2_Master_Read
  3712   001416  6E0B               	movwf	??_color_read_all^0,c
  3713   001418  500B               	movf	??_color_read_all^0,w,c
  3714   00141A  6E12               	movwf	color_read_all@tmp^0,c
  3715   00141C  6A13               	clrf	(color_read_all@tmp+1)^0,c
  3716   00141E  6A14               	clrf	(color_read_all@tmp+2)^0,c
  3717   001420  6A15               	clrf	(color_read_all@tmp+3)^0,c
  3718                           
  3719                           ;color.c: 59:  tmp.red=tmp.red | (I2C_2_Master_Read(1)<<8);
  3720   001422  0E01               	movlw	1
  3721   001424  EC0D  F00F         	call	_I2C_2_Master_Read
  3722   001428  6E0B               	movwf	??_color_read_all^0,c
  3723   00142A  500B               	movf	??_color_read_all^0,w,c
  3724   00142C  6E0D               	movwf	(??_color_read_all+2)^0,c
  3725   00142E  6A0C               	clrf	(??_color_read_all+1)^0,c
  3726   001430  C00C  F00E         	movff	??_color_read_all+1,??_color_read_all+3
  3727   001434  C00D  F00F         	movff	??_color_read_all+2,??_color_read_all+4
  3728   001438  0E00               	movlw	0
  3729   00143A  BE0F               	btfsc	(??_color_read_all+4)^0,7,c
  3730   00143C  0EFF               	movlw	255
  3731   00143E  6E10               	movwf	(??_color_read_all+5)^0,c
  3732   001440  6E11               	movwf	(??_color_read_all+6)^0,c
  3733   001442  5012               	movf	color_read_all@tmp^0,w,c
  3734   001444  100E               	iorwf	(??_color_read_all+3)^0,w,c
  3735   001446  6E12               	movwf	color_read_all@tmp^0,c
  3736   001448  5013               	movf	(color_read_all@tmp+1)^0,w,c
  3737   00144A  100F               	iorwf	(??_color_read_all+4)^0,w,c
  3738   00144C  6E13               	movwf	(color_read_all@tmp+1)^0,c
  3739   00144E  5014               	movf	(color_read_all@tmp+2)^0,w,c
  3740   001450  1010               	iorwf	(??_color_read_all+5)^0,w,c
  3741   001452  6E14               	movwf	(color_read_all@tmp+2)^0,c
  3742   001454  5015               	movf	(color_read_all@tmp+3)^0,w,c
  3743   001456  1011               	iorwf	(??_color_read_all+6)^0,w,c
  3744   001458  6E15               	movwf	(color_read_all@tmp+3)^0,c
  3745                           
  3746                           ;color.c: 60:  tmp.green=I2C_2_Master_Read(1);
  3747   00145A  0E01               	movlw	1
  3748   00145C  EC0D  F00F         	call	_I2C_2_Master_Read
  3749   001460  6E0B               	movwf	??_color_read_all^0,c
  3750   001462  500B               	movf	??_color_read_all^0,w,c
  3751   001464  6E16               	movwf	(color_read_all@tmp+4)^0,c
  3752   001466  6A17               	clrf	(color_read_all@tmp+5)^0,c
  3753   001468  6A18               	clrf	(color_read_all@tmp+6)^0,c
  3754   00146A  6A19               	clrf	(color_read_all@tmp+7)^0,c
  3755                           
  3756                           ;color.c: 61:  tmp.green=tmp.green | (I2C_2_Master_Read(1)<<8);
  3757   00146C  0E01               	movlw	1
  3758   00146E  EC0D  F00F         	call	_I2C_2_Master_Read
  3759   001472  6E0B               	movwf	??_color_read_all^0,c
  3760   001474  500B               	movf	??_color_read_all^0,w,c
  3761   001476  6E0D               	movwf	(??_color_read_all+2)^0,c
  3762   001478  6A0C               	clrf	(??_color_read_all+1)^0,c
  3763   00147A  C00C  F00E         	movff	??_color_read_all+1,??_color_read_all+3
  3764   00147E  C00D  F00F         	movff	??_color_read_all+2,??_color_read_all+4
  3765   001482  0E00               	movlw	0
  3766   001484  BE0F               	btfsc	(??_color_read_all+4)^0,7,c
  3767   001486  0EFF               	movlw	255
  3768   001488  6E10               	movwf	(??_color_read_all+5)^0,c
  3769   00148A  6E11               	movwf	(??_color_read_all+6)^0,c
  3770   00148C  5016               	movf	(color_read_all@tmp+4)^0,w,c
  3771   00148E  100E               	iorwf	(??_color_read_all+3)^0,w,c
  3772   001490  6E16               	movwf	(color_read_all@tmp+4)^0,c
  3773   001492  5017               	movf	(color_read_all@tmp+5)^0,w,c
  3774   001494  100F               	iorwf	(??_color_read_all+4)^0,w,c
  3775   001496  6E17               	movwf	(color_read_all@tmp+5)^0,c
  3776   001498  5018               	movf	(color_read_all@tmp+6)^0,w,c
  3777   00149A  1010               	iorwf	(??_color_read_all+5)^0,w,c
  3778   00149C  6E18               	movwf	(color_read_all@tmp+6)^0,c
  3779   00149E  5019               	movf	(color_read_all@tmp+7)^0,w,c
  3780   0014A0  1011               	iorwf	(??_color_read_all+6)^0,w,c
  3781   0014A2  6E19               	movwf	(color_read_all@tmp+7)^0,c
  3782                           
  3783                           ;color.c: 62:  tmp.blue=I2C_2_Master_Read(1);
  3784   0014A4  0E01               	movlw	1
  3785   0014A6  EC0D  F00F         	call	_I2C_2_Master_Read
  3786   0014AA  6E0B               	movwf	??_color_read_all^0,c
  3787   0014AC  500B               	movf	??_color_read_all^0,w,c
  3788   0014AE  6E1A               	movwf	(color_read_all@tmp+8)^0,c
  3789   0014B0  6A1B               	clrf	(color_read_all@tmp+9)^0,c
  3790   0014B2  6A1C               	clrf	(color_read_all@tmp+10)^0,c
  3791   0014B4  6A1D               	clrf	(color_read_all@tmp+11)^0,c
  3792                           
  3793                           ;color.c: 63:  tmp.blue=tmp.blue | (I2C_2_Master_Read(1)<<8);
  3794   0014B6  0E01               	movlw	1
  3795   0014B8  EC0D  F00F         	call	_I2C_2_Master_Read
  3796   0014BC  6E0B               	movwf	??_color_read_all^0,c
  3797   0014BE  500B               	movf	??_color_read_all^0,w,c
  3798   0014C0  6E0D               	movwf	(??_color_read_all+2)^0,c
  3799   0014C2  6A0C               	clrf	(??_color_read_all+1)^0,c
  3800   0014C4  C00C  F00E         	movff	??_color_read_all+1,??_color_read_all+3
  3801   0014C8  C00D  F00F         	movff	??_color_read_all+2,??_color_read_all+4
  3802   0014CC  0E00               	movlw	0
  3803   0014CE  BE0F               	btfsc	(??_color_read_all+4)^0,7,c
  3804   0014D0  0EFF               	movlw	255
  3805   0014D2  6E10               	movwf	(??_color_read_all+5)^0,c
  3806   0014D4  6E11               	movwf	(??_color_read_all+6)^0,c
  3807   0014D6  501A               	movf	(color_read_all@tmp+8)^0,w,c
  3808   0014D8  100E               	iorwf	(??_color_read_all+3)^0,w,c
  3809   0014DA  6E1A               	movwf	(color_read_all@tmp+8)^0,c
  3810   0014DC  501B               	movf	(color_read_all@tmp+9)^0,w,c
  3811   0014DE  100F               	iorwf	(??_color_read_all+4)^0,w,c
  3812   0014E0  6E1B               	movwf	(color_read_all@tmp+9)^0,c
  3813   0014E2  501C               	movf	(color_read_all@tmp+10)^0,w,c
  3814   0014E4  1010               	iorwf	(??_color_read_all+5)^0,w,c
  3815   0014E6  6E1C               	movwf	(color_read_all@tmp+10)^0,c
  3816   0014E8  501D               	movf	(color_read_all@tmp+11)^0,w,c
  3817   0014EA  1011               	iorwf	(??_color_read_all+6)^0,w,c
  3818   0014EC  6E1D               	movwf	(color_read_all@tmp+11)^0,c
  3819                           
  3820                           ;color.c: 64:  tmp.clear=I2C_2_Master_Read(1);
  3821   0014EE  0E01               	movlw	1
  3822   0014F0  EC0D  F00F         	call	_I2C_2_Master_Read
  3823   0014F4  6E0B               	movwf	??_color_read_all^0,c
  3824   0014F6  500B               	movf	??_color_read_all^0,w,c
  3825   0014F8  6E1E               	movwf	(color_read_all@tmp+12)^0,c
  3826   0014FA  6A1F               	clrf	(color_read_all@tmp+13)^0,c
  3827   0014FC  6A20               	clrf	(color_read_all@tmp+14)^0,c
  3828   0014FE  6A21               	clrf	(color_read_all@tmp+15)^0,c
  3829                           
  3830                           ;color.c: 65:  tmp.clear=tmp.clear | (I2C_2_Master_Read(0)<<8);
  3831   001500  0E00               	movlw	0
  3832   001502  EC0D  F00F         	call	_I2C_2_Master_Read
  3833   001506  6E0B               	movwf	??_color_read_all^0,c
  3834   001508  500B               	movf	??_color_read_all^0,w,c
  3835   00150A  6E0D               	movwf	(??_color_read_all+2)^0,c
  3836   00150C  6A0C               	clrf	(??_color_read_all+1)^0,c
  3837   00150E  C00C  F00E         	movff	??_color_read_all+1,??_color_read_all+3
  3838   001512  C00D  F00F         	movff	??_color_read_all+2,??_color_read_all+4
  3839   001516  0E00               	movlw	0
  3840   001518  BE0F               	btfsc	(??_color_read_all+4)^0,7,c
  3841   00151A  0EFF               	movlw	255
  3842   00151C  6E10               	movwf	(??_color_read_all+5)^0,c
  3843   00151E  6E11               	movwf	(??_color_read_all+6)^0,c
  3844   001520  501E               	movf	(color_read_all@tmp+12)^0,w,c
  3845   001522  100E               	iorwf	(??_color_read_all+3)^0,w,c
  3846   001524  6E1E               	movwf	(color_read_all@tmp+12)^0,c
  3847   001526  501F               	movf	(color_read_all@tmp+13)^0,w,c
  3848   001528  100F               	iorwf	(??_color_read_all+4)^0,w,c
  3849   00152A  6E1F               	movwf	(color_read_all@tmp+13)^0,c
  3850   00152C  5020               	movf	(color_read_all@tmp+14)^0,w,c
  3851   00152E  1010               	iorwf	(??_color_read_all+5)^0,w,c
  3852   001530  6E20               	movwf	(color_read_all@tmp+14)^0,c
  3853   001532  5021               	movf	(color_read_all@tmp+15)^0,w,c
  3854   001534  1011               	iorwf	(??_color_read_all+6)^0,w,c
  3855   001536  6E21               	movwf	(color_read_all@tmp+15)^0,c
  3856                           
  3857                           ;color.c: 66:  I2C_2_Master_Stop();
  3858   001538  EC68  F010         	call	_I2C_2_Master_Stop	;wreg free
  3859   00153C                     
  3860                           ;color.c: 69:  readVals -> red = tmp.red;
  3861   00153C  C009  FFD9         	movff	color_read_all@readVals,fsr2l
  3862   001540  C00A  FFDA         	movff	color_read_all@readVals+1,fsr2h
  3863   001544  C012  FFDE         	movff	color_read_all@tmp,postinc2
  3864   001548  C013  FFDE         	movff	color_read_all@tmp+1,postinc2
  3865   00154C  C014  FFDE         	movff	color_read_all@tmp+2,postinc2
  3866   001550  C015  FFDE         	movff	color_read_all@tmp+3,postinc2
  3867   001554                     
  3868                           ;color.c: 70:  readVals -> green = tmp.green;
  3869   001554  EE20  F016         	lfsr	2,color_read_all@tmp+4
  3870   001558  EE10 F004          	lfsr	1,4
  3871   00155C  5009               	movf	color_read_all@readVals^0,w,c
  3872   00155E  26E1               	addwf	fsr1l,f,c
  3873   001560  500A               	movf	(color_read_all@readVals+1)^0,w,c
  3874   001562  22E2               	addwfc	fsr1h,f,c
  3875   001564  CFDE FFE6          	movff	postinc2,postinc1
  3876   001568  CFDE FFE6          	movff	postinc2,postinc1
  3877   00156C  CFDE FFE6          	movff	postinc2,postinc1
  3878   001570  CFDE FFE6          	movff	postinc2,postinc1
  3879   001574                     
  3880                           ;color.c: 71:  readVals -> blue = tmp.blue;
  3881   001574  EE20  F01A         	lfsr	2,color_read_all@tmp+8
  3882   001578  EE10 F008          	lfsr	1,8
  3883   00157C  5009               	movf	color_read_all@readVals^0,w,c
  3884   00157E  26E1               	addwf	fsr1l,f,c
  3885   001580  500A               	movf	(color_read_all@readVals+1)^0,w,c
  3886   001582  22E2               	addwfc	fsr1h,f,c
  3887   001584  CFDE FFE6          	movff	postinc2,postinc1
  3888   001588  CFDE FFE6          	movff	postinc2,postinc1
  3889   00158C  CFDE FFE6          	movff	postinc2,postinc1
  3890   001590  CFDE FFE6          	movff	postinc2,postinc1
  3891   001594                     
  3892                           ;color.c: 72:  readVals -> clear = tmp.clear;
  3893   001594  EE20  F01E         	lfsr	2,color_read_all@tmp+12
  3894   001598  EE10 F00C          	lfsr	1,12
  3895   00159C  5009               	movf	color_read_all@readVals^0,w,c
  3896   00159E  26E1               	addwf	fsr1l,f,c
  3897   0015A0  500A               	movf	(color_read_all@readVals+1)^0,w,c
  3898   0015A2  22E2               	addwfc	fsr1h,f,c
  3899   0015A4  CFDE FFE6          	movff	postinc2,postinc1
  3900   0015A8  CFDE FFE6          	movff	postinc2,postinc1
  3901   0015AC  CFDE FFE6          	movff	postinc2,postinc1
  3902   0015B0  CFDE FFE6          	movff	postinc2,postinc1
  3903   0015B4  0012               	return		;funcret
  3904   0015B6                     __end_of_color_read_all:
  3905                           	callstack 0
  3906                           
  3907 ;; *************** function _I2C_2_Master_Write *****************
  3908 ;; Defined at:
  3909 ;;		line 45 in file "i2c.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  data_byte       1    wreg     unsigned char 
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  data_byte       1    5[COMRAM] unsigned char 
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      void 
  3916 ;; Registers used:
  3917 ;;		wreg, status,2, status,0, cstack
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3924 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3926 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3927 ;;Total ram usage:        1 bytes
  3928 ;; Hardware stack levels used: 1
  3929 ;; Hardware stack levels required when called: 3
  3930 ;; This function calls:
  3931 ;;		_I2C_2_Master_Idle
  3932 ;; This function is called by:
  3933 ;;		_color_writetoaddr
  3934 ;;		_color_read_all
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text21
  3939   0020B8                     __ptext21:
  3940                           	callstack 0
  3941   0020B8                     _I2C_2_Master_Write:
  3942                           	callstack 26
  3943                           
  3944                           ;incstack = 0
  3945                           ;I2C_2_Master_Write@data_byte stored from wreg
  3946   0020B8  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  3947   0020BA                     
  3948                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3949   0020BA  ECEF  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3950   0020BE                     
  3951                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3952   0020BE  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3953   0020C2  0012               	return		;funcret
  3954   0020C4                     __end_of_I2C_2_Master_Write:
  3955                           	callstack 0
  3956                           
  3957 ;; *************** function _I2C_2_Master_Stop *****************
  3958 ;; Defined at:
  3959 ;;		line 39 in file "i2c.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;		None
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;		None
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  1    wreg      void 
  3966 ;; Registers used:
  3967 ;;		wreg, status,2, status,0, cstack
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3977 ;;Total ram usage:        0 bytes
  3978 ;; Hardware stack levels used: 1
  3979 ;; Hardware stack levels required when called: 3
  3980 ;; This function calls:
  3981 ;;		_I2C_2_Master_Idle
  3982 ;; This function is called by:
  3983 ;;		_color_writetoaddr
  3984 ;;		_color_read_all
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           	psect	text22
  3989   0020D0                     __ptext22:
  3990                           	callstack 0
  3991   0020D0                     _I2C_2_Master_Stop:
  3992                           	callstack 26
  3993   0020D0                     
  3994                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3995   0020D0  ECEF  F00F         	call	_I2C_2_Master_Idle	;wreg free
  3996   0020D4                     
  3997                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3998   0020D4  010E               	movlb	14	; () banked
  3999   0020D6  85DA               	bsf	218,2,b	;volatile
  4000   0020D8                     
  4001                           ; BSR set to: 14
  4002   0020D8  0012               	return		;funcret
  4003   0020DA                     __end_of_I2C_2_Master_Stop:
  4004                           	callstack 0
  4005                           
  4006 ;; *************** function _I2C_2_Master_Start *****************
  4007 ;; Defined at:
  4008 ;;		line 27 in file "i2c.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;		None
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;		None
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  1    wreg      void 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0, cstack
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4026 ;;Total ram usage:        0 bytes
  4027 ;; Hardware stack levels used: 1
  4028 ;; Hardware stack levels required when called: 3
  4029 ;; This function calls:
  4030 ;;		_I2C_2_Master_Idle
  4031 ;; This function is called by:
  4032 ;;		_color_writetoaddr
  4033 ;;		_color_read_all
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text23
  4038   0020DA                     __ptext23:
  4039                           	callstack 0
  4040   0020DA                     _I2C_2_Master_Start:
  4041                           	callstack 26
  4042   0020DA                     
  4043                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4044   0020DA  ECEF  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4045   0020DE                     
  4046                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4047   0020DE  010E               	movlb	14	; () banked
  4048   0020E0  81DA               	bsf	218,0,b	;volatile
  4049   0020E2                     
  4050                           ; BSR set to: 14
  4051   0020E2  0012               	return		;funcret
  4052   0020E4                     __end_of_I2C_2_Master_Start:
  4053                           	callstack 0
  4054                           
  4055 ;; *************** function _I2C_2_Master_RepStart *****************
  4056 ;; Defined at:
  4057 ;;		line 33 in file "i2c.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;		None
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;		None
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  1    wreg      void 
  4064 ;; Registers used:
  4065 ;;		wreg, status,2, status,0, cstack
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4075 ;;Total ram usage:        0 bytes
  4076 ;; Hardware stack levels used: 1
  4077 ;; Hardware stack levels required when called: 3
  4078 ;; This function calls:
  4079 ;;		_I2C_2_Master_Idle
  4080 ;; This function is called by:
  4081 ;;		_color_read_all
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           	psect	text24
  4086   0020E4                     __ptext24:
  4087                           	callstack 0
  4088   0020E4                     _I2C_2_Master_RepStart:
  4089                           	callstack 26
  4090   0020E4                     
  4091                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4092   0020E4  ECEF  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4093   0020E8                     
  4094                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4095   0020E8  010E               	movlb	14	; () banked
  4096   0020EA  83DA               	bsf	218,1,b	;volatile
  4097   0020EC                     
  4098                           ; BSR set to: 14
  4099   0020EC  0012               	return		;funcret
  4100   0020EE                     __end_of_I2C_2_Master_RepStart:
  4101                           	callstack 0
  4102                           
  4103 ;; *************** function _I2C_2_Master_Read *****************
  4104 ;; Defined at:
  4105 ;;		line 51 in file "i2c.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;  ack             1    wreg     unsigned char 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;  ack             1    6[COMRAM] unsigned char 
  4110 ;;  tmp             1    7[COMRAM] unsigned char 
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  1    wreg      unsigned char 
  4113 ;; Registers used:
  4114 ;;		wreg, status,2, status,0, cstack
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4121 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4122 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4123 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4124 ;;Total ram usage:        3 bytes
  4125 ;; Hardware stack levels used: 1
  4126 ;; Hardware stack levels required when called: 3
  4127 ;; This function calls:
  4128 ;;		_I2C_2_Master_Idle
  4129 ;; This function is called by:
  4130 ;;		_color_read_all
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           	psect	text25
  4135   001E1A                     __ptext25:
  4136                           	callstack 0
  4137   001E1A                     _I2C_2_Master_Read:
  4138                           	callstack 26
  4139                           
  4140                           ; BSR set to: 14
  4141                           ;incstack = 0
  4142                           ;I2C_2_Master_Read@ack stored from wreg
  4143   001E1A  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  4144   001E1C                     
  4145                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4146   001E1C  ECEF  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4147   001E20                     
  4148                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4149   001E20  010E               	movlb	14	; () banked
  4150   001E22  87DA               	bsf	218,3,b	;volatile
  4151                           
  4152                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4153   001E24  ECEF  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4154   001E28                     
  4155                           ;i2c.c: 57:   tmp = SSP2BUF;
  4156   001E28  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4157                           
  4158                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4159   001E2C  ECEF  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4160   001E30                     
  4161                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4162   001E30  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  4163   001E32  B4D8               	btfsc	status,2,c
  4164   001E34  EF1E  F00F         	goto	u2681
  4165   001E38  EF22  F00F         	goto	u2680
  4166   001E3C                     u2681:
  4167   001E3C  6A06               	clrf	??_I2C_2_Master_Read^0,c
  4168   001E3E  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  4169   001E40  EF23  F00F         	goto	u2698
  4170   001E44                     u2680:
  4171   001E44  6A06               	clrf	??_I2C_2_Master_Read^0,c
  4172   001E46                     u2698:
  4173   001E46  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  4174   001E48  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  4175   001E4A  010E               	movlb	14	; () banked
  4176   001E4C  51DA               	movf	218,w,b	;volatile
  4177   001E4E  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  4178   001E50  0BDF               	andlw	-33
  4179   001E52  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  4180   001E54  6FDA               	movwf	218,b	;volatile
  4181   001E56                     
  4182                           ; BSR set to: 14
  4183                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4184   001E56  89DA               	bsf	218,4,b	;volatile
  4185   001E58                     
  4186                           ; BSR set to: 14
  4187                           ;i2c.c: 61:   return tmp;
  4188   001E58  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  4189   001E5A                     
  4190                           ; BSR set to: 14
  4191   001E5A  0012               	return		;funcret
  4192   001E5C                     __end_of_I2C_2_Master_Read:
  4193                           	callstack 0
  4194                           
  4195 ;; *************** function _I2C_2_Master_Idle *****************
  4196 ;; Defined at:
  4197 ;;		line 22 in file "i2c.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;		None
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;		None
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      void 
  4204 ;; Registers used:
  4205 ;;		wreg, status,2, status,0
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4213 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4214 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4215 ;;Total ram usage:        1 bytes
  4216 ;; Hardware stack levels used: 1
  4217 ;; Hardware stack levels required when called: 2
  4218 ;; This function calls:
  4219 ;;		Nothing
  4220 ;; This function is called by:
  4221 ;;		_I2C_2_Master_Start
  4222 ;;		_I2C_2_Master_RepStart
  4223 ;;		_I2C_2_Master_Stop
  4224 ;;		_I2C_2_Master_Write
  4225 ;;		_I2C_2_Master_Read
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           	psect	text26
  4230   001FDE                     __ptext26:
  4231                           	callstack 0
  4232   001FDE                     _I2C_2_Master_Idle:
  4233                           	callstack 26
  4234   001FDE                     l540:
  4235   001FDE  010E               	movlb	14	; () banked
  4236   001FE0  B5D8               	btfsc	216,2,b	;volatile
  4237   001FE2  EFF5  F00F         	goto	u2561
  4238   001FE6  EFF7  F00F         	goto	u2560
  4239   001FEA                     u2561:
  4240   001FEA  EFEF  F00F         	goto	l540
  4241   001FEE                     u2560:
  4242   001FEE                     
  4243                           ; BSR set to: 14
  4244   001FEE  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4245   001FF2  0E1F               	movlw	31
  4246   001FF4  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  4247   001FF6  A4D8               	btfss	status,2,c
  4248   001FF8  EF00  F010         	goto	u2571
  4249   001FFC  EF02  F010         	goto	u2570
  4250   002000                     u2571:
  4251   002000  EFEF  F00F         	goto	l540
  4252   002004                     u2570:
  4253   002004                     
  4254                           ; BSR set to: 14
  4255   002004  0012               	return		;funcret
  4256   002006                     __end_of_I2C_2_Master_Idle:
  4257                           	callstack 0
  4258                           
  4259 ;; *************** function _abs *****************
  4260 ;; Defined at:
  4261 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  4262 ;; Parameters:    Size  Location     Type
  4263 ;;  a               2   14[COMRAM] int 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;		None
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  2   14[COMRAM] int 
  4268 ;; Registers used:
  4269 ;;		wreg, status,2, status,0
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4277 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4278 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4279 ;;Total ram usage:        4 bytes
  4280 ;; Hardware stack levels used: 1
  4281 ;; Hardware stack levels required when called: 2
  4282 ;; This function calls:
  4283 ;;		Nothing
  4284 ;; This function is called by:
  4285 ;;		_checkColor
  4286 ;;		_vfpfcnvrt
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           	psect	text27
  4291   001F2C                     __ptext27:
  4292                           	callstack 0
  4293   001F2C                     _abs:
  4294                           	callstack 24
  4295   001F2C  BE10               	btfsc	(abs@a+1)^0,7,c
  4296   001F2E  EF9B  F00F         	goto	u2391
  4297   001F32  EF9D  F00F         	goto	u2390
  4298   001F36                     u2391:
  4299   001F36  EFA3  F00F         	goto	l1304
  4300   001F3A                     u2390:
  4301   001F3A  C00F  F00F         	movff	abs@a,?_abs
  4302   001F3E  C010  F010         	movff	abs@a+1,?_abs+1
  4303   001F42  EFAF  F00F         	goto	l1307
  4304   001F46                     l1304:
  4305   001F46  C00F  F011         	movff	abs@a,??_abs
  4306   001F4A  C010  F012         	movff	abs@a+1,??_abs+1
  4307   001F4E  1E11               	comf	??_abs^0,f,c
  4308   001F50  1E12               	comf	(??_abs+1)^0,f,c
  4309   001F52  4A11               	infsnz	??_abs^0,f,c
  4310   001F54  2A12               	incf	(??_abs+1)^0,f,c
  4311   001F56  C011  F00F         	movff	??_abs,?_abs
  4312   001F5A  C012  F010         	movff	??_abs+1,?_abs+1
  4313   001F5E                     l1307:
  4314   001F5E  0012               	return		;funcret
  4315   001F60                     __end_of_abs:
  4316                           	callstack 0
  4317                           
  4318 ;; *************** function ___wmul *****************
  4319 ;; Defined at:
  4320 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;  multiplier      2    4[COMRAM] unsigned int 
  4323 ;;  multiplicand    2    6[COMRAM] unsigned int 
  4324 ;; Auto vars:     Size  Location     Type
  4325 ;;  product         2    8[COMRAM] unsigned int 
  4326 ;; Return value:  Size  Location     Type
  4327 ;;                  2    4[COMRAM] unsigned int 
  4328 ;; Registers used:
  4329 ;;		wreg, status,2, status,0, prodl, prodh
  4330 ;; Tracked objects:
  4331 ;;		On entry : 0/0
  4332 ;;		On exit  : 0/0
  4333 ;;		Unchanged: 0/0
  4334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4335 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4336 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4338 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4339 ;;Total ram usage:        6 bytes
  4340 ;; Hardware stack levels used: 1
  4341 ;; Hardware stack levels required when called: 2
  4342 ;; This function calls:
  4343 ;;		Nothing
  4344 ;; This function is called by:
  4345 ;;		_checkColor
  4346 ;;		_calibCards
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           	psect	text28
  4351   002006                     __ptext28:
  4352                           	callstack 0
  4353   002006                     ___wmul:
  4354                           	callstack 27
  4355   002006  5005               	movf	___wmul@multiplier^0,w,c
  4356   002008  0207               	mulwf	___wmul@multiplicand^0,c
  4357   00200A  CFF3 F009          	movff	prodl,___wmul@product
  4358   00200E  CFF4 F00A          	movff	prodh,___wmul@product+1
  4359   002012  5005               	movf	___wmul@multiplier^0,w,c
  4360   002014  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  4361   002016  50F3               	movf	243,w,c
  4362   002018  260A               	addwf	(___wmul@product+1)^0,f,c
  4363   00201A  5006               	movf	(___wmul@multiplier+1)^0,w,c
  4364   00201C  0207               	mulwf	___wmul@multiplicand^0,c
  4365   00201E  50F3               	movf	243,w,c
  4366   002020  260A               	addwf	(___wmul@product+1)^0,f,c
  4367   002022  C009  F005         	movff	___wmul@product,?___wmul
  4368   002026  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  4369   00202A  0012               	return		;funcret
  4370   00202C                     __end_of___wmul:
  4371                           	callstack 0
  4372                           
  4373 ;; *************** function ___aldiv *****************
  4374 ;; Defined at:
  4375 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  dividend        4   10[COMRAM] long 
  4378 ;;  divisor         4   14[COMRAM] long 
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;  quotient        4   20[COMRAM] long 
  4381 ;;  sign            1   19[COMRAM] unsigned char 
  4382 ;;  counter         1   18[COMRAM] unsigned char 
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  4   10[COMRAM] long 
  4385 ;; Registers used:
  4386 ;;		wreg, status,2, status,0
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4392 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4393 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4395 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4396 ;;Total ram usage:       14 bytes
  4397 ;; Hardware stack levels used: 1
  4398 ;; Hardware stack levels required when called: 2
  4399 ;; This function calls:
  4400 ;;		Nothing
  4401 ;; This function is called by:
  4402 ;;		_checkColor
  4403 ;;		_vfpfcnvrt
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           	psect	text29
  4408   0016E0                     __ptext29:
  4409                           	callstack 0
  4410   0016E0                     ___aldiv:
  4411                           	callstack 24
  4412   0016E0  0E00               	movlw	0
  4413   0016E2  6E14               	movwf	___aldiv@sign^0,c
  4414   0016E4  BE12               	btfsc	(___aldiv@divisor+3)^0,7,c
  4415   0016E6  EF79  F00B         	goto	u2400
  4416   0016EA  EF77  F00B         	goto	u2401
  4417   0016EE                     u2401:
  4418   0016EE  EF83  F00B         	goto	l3453
  4419   0016F2                     u2400:
  4420   0016F2  1E12               	comf	(___aldiv@divisor+3)^0,f,c
  4421   0016F4  1E11               	comf	(___aldiv@divisor+2)^0,f,c
  4422   0016F6  1E10               	comf	(___aldiv@divisor+1)^0,f,c
  4423   0016F8  6C0F               	negf	___aldiv@divisor^0,c
  4424   0016FA  0E00               	movlw	0
  4425   0016FC  2210               	addwfc	(___aldiv@divisor+1)^0,f,c
  4426   0016FE  2211               	addwfc	(___aldiv@divisor+2)^0,f,c
  4427   001700  2212               	addwfc	(___aldiv@divisor+3)^0,f,c
  4428   001702  0E01               	movlw	1
  4429   001704  6E14               	movwf	___aldiv@sign^0,c
  4430   001706                     l3453:
  4431   001706  BE0E               	btfsc	(___aldiv@dividend+3)^0,7,c
  4432   001708  EF8A  F00B         	goto	u2410
  4433   00170C  EF88  F00B         	goto	u2411
  4434   001710                     u2411:
  4435   001710  EF94  F00B         	goto	l3459
  4436   001714                     u2410:
  4437   001714  1E0E               	comf	(___aldiv@dividend+3)^0,f,c
  4438   001716  1E0D               	comf	(___aldiv@dividend+2)^0,f,c
  4439   001718  1E0C               	comf	(___aldiv@dividend+1)^0,f,c
  4440   00171A  6C0B               	negf	___aldiv@dividend^0,c
  4441   00171C  0E00               	movlw	0
  4442   00171E  220C               	addwfc	(___aldiv@dividend+1)^0,f,c
  4443   001720  220D               	addwfc	(___aldiv@dividend+2)^0,f,c
  4444   001722  220E               	addwfc	(___aldiv@dividend+3)^0,f,c
  4445   001724  0E01               	movlw	1
  4446   001726  1A14               	xorwf	___aldiv@sign^0,f,c
  4447   001728                     l3459:
  4448   001728  0E00               	movlw	0
  4449   00172A  6E15               	movwf	___aldiv@quotient^0,c
  4450   00172C  0E00               	movlw	0
  4451   00172E  6E16               	movwf	(___aldiv@quotient+1)^0,c
  4452   001730  0E00               	movlw	0
  4453   001732  6E17               	movwf	(___aldiv@quotient+2)^0,c
  4454   001734  0E00               	movlw	0
  4455   001736  6E18               	movwf	(___aldiv@quotient+3)^0,c
  4456   001738  500F               	movf	___aldiv@divisor^0,w,c
  4457   00173A  1010               	iorwf	(___aldiv@divisor+1)^0,w,c
  4458   00173C  1011               	iorwf	(___aldiv@divisor+2)^0,w,c
  4459   00173E  1012               	iorwf	(___aldiv@divisor+3)^0,w,c
  4460   001740  B4D8               	btfsc	status,2,c
  4461   001742  EFA5  F00B         	goto	u2421
  4462   001746  EFA7  F00B         	goto	u2420
  4463   00174A                     u2421:
  4464   00174A  EFDD  F00B         	goto	l3481
  4465   00174E                     u2420:
  4466   00174E  0E01               	movlw	1
  4467   001750  6E13               	movwf	___aldiv@counter^0,c
  4468   001752  EFB1  F00B         	goto	l3467
  4469   001756                     l3465:
  4470   001756  90D8               	bcf	status,0,c
  4471   001758  360F               	rlcf	___aldiv@divisor^0,f,c
  4472   00175A  3610               	rlcf	(___aldiv@divisor+1)^0,f,c
  4473   00175C  3611               	rlcf	(___aldiv@divisor+2)^0,f,c
  4474   00175E  3612               	rlcf	(___aldiv@divisor+3)^0,f,c
  4475   001760  2A13               	incf	___aldiv@counter^0,f,c
  4476   001762                     l3467:
  4477   001762  AE12               	btfss	(___aldiv@divisor+3)^0,7,c
  4478   001764  EFB6  F00B         	goto	u2431
  4479   001768  EFB8  F00B         	goto	u2430
  4480   00176C                     u2431:
  4481   00176C  EFAB  F00B         	goto	l3465
  4482   001770                     u2430:
  4483   001770                     l3469:
  4484   001770  90D8               	bcf	status,0,c
  4485   001772  3615               	rlcf	___aldiv@quotient^0,f,c
  4486   001774  3616               	rlcf	(___aldiv@quotient+1)^0,f,c
  4487   001776  3617               	rlcf	(___aldiv@quotient+2)^0,f,c
  4488   001778  3618               	rlcf	(___aldiv@quotient+3)^0,f,c
  4489   00177A  500F               	movf	___aldiv@divisor^0,w,c
  4490   00177C  5C0B               	subwf	___aldiv@dividend^0,w,c
  4491   00177E  5010               	movf	(___aldiv@divisor+1)^0,w,c
  4492   001780  580C               	subwfb	(___aldiv@dividend+1)^0,w,c
  4493   001782  5011               	movf	(___aldiv@divisor+2)^0,w,c
  4494   001784  580D               	subwfb	(___aldiv@dividend+2)^0,w,c
  4495   001786  5012               	movf	(___aldiv@divisor+3)^0,w,c
  4496   001788  580E               	subwfb	(___aldiv@dividend+3)^0,w,c
  4497   00178A  A0D8               	btfss	status,0,c
  4498   00178C  EFCA  F00B         	goto	u2441
  4499   001790  EFCC  F00B         	goto	u2440
  4500   001794                     u2441:
  4501   001794  EFD5  F00B         	goto	l3477
  4502   001798                     u2440:
  4503   001798  500F               	movf	___aldiv@divisor^0,w,c
  4504   00179A  5E0B               	subwf	___aldiv@dividend^0,f,c
  4505   00179C  5010               	movf	(___aldiv@divisor+1)^0,w,c
  4506   00179E  5A0C               	subwfb	(___aldiv@dividend+1)^0,f,c
  4507   0017A0  5011               	movf	(___aldiv@divisor+2)^0,w,c
  4508   0017A2  5A0D               	subwfb	(___aldiv@dividend+2)^0,f,c
  4509   0017A4  5012               	movf	(___aldiv@divisor+3)^0,w,c
  4510   0017A6  5A0E               	subwfb	(___aldiv@dividend+3)^0,f,c
  4511   0017A8  8015               	bsf	___aldiv@quotient^0,0,c
  4512   0017AA                     l3477:
  4513   0017AA  90D8               	bcf	status,0,c
  4514   0017AC  3212               	rrcf	(___aldiv@divisor+3)^0,f,c
  4515   0017AE  3211               	rrcf	(___aldiv@divisor+2)^0,f,c
  4516   0017B0  3210               	rrcf	(___aldiv@divisor+1)^0,f,c
  4517   0017B2  320F               	rrcf	___aldiv@divisor^0,f,c
  4518   0017B4  2E13               	decfsz	___aldiv@counter^0,f,c
  4519   0017B6  EFB8  F00B         	goto	l3469
  4520   0017BA                     l3481:
  4521   0017BA  5014               	movf	___aldiv@sign^0,w,c
  4522   0017BC  B4D8               	btfsc	status,2,c
  4523   0017BE  EFE3  F00B         	goto	u2451
  4524   0017C2  EFE5  F00B         	goto	u2450
  4525   0017C6                     u2451:
  4526   0017C6  EFED  F00B         	goto	l3485
  4527   0017CA                     u2450:
  4528   0017CA  1E18               	comf	(___aldiv@quotient+3)^0,f,c
  4529   0017CC  1E17               	comf	(___aldiv@quotient+2)^0,f,c
  4530   0017CE  1E16               	comf	(___aldiv@quotient+1)^0,f,c
  4531   0017D0  6C15               	negf	___aldiv@quotient^0,c
  4532   0017D2  0E00               	movlw	0
  4533   0017D4  2216               	addwfc	(___aldiv@quotient+1)^0,f,c
  4534   0017D6  2217               	addwfc	(___aldiv@quotient+2)^0,f,c
  4535   0017D8  2218               	addwfc	(___aldiv@quotient+3)^0,f,c
  4536   0017DA                     l3485:
  4537   0017DA  C015  F00B         	movff	___aldiv@quotient,?___aldiv
  4538   0017DE  C016  F00C         	movff	___aldiv@quotient+1,?___aldiv+1
  4539   0017E2  C017  F00D         	movff	___aldiv@quotient+2,?___aldiv+2
  4540   0017E6  C018  F00E         	movff	___aldiv@quotient+3,?___aldiv+3
  4541   0017EA  0012               	return		;funcret
  4542   0017EC                     __end_of___aldiv:
  4543                           	callstack 0
  4544                           
  4545 ;; *************** function _RGBC2color *****************
  4546 ;; Defined at:
  4547 ;;		line 115 in file "color.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;  readVals        2    4[COMRAM] PTR struct RGBC
  4550 ;;		 -> main@Vals(16), calibCards@readVals(16), 
  4551 ;;  Vals            2    6[COMRAM] PTR struct color
  4552 ;;		 -> main@currColor(25), calibCards@readColors(25), 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;		None
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  1    wreg      void 
  4557 ;; Registers used:
  4558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4564 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4567 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4568 ;;Total ram usage:        4 bytes
  4569 ;; Hardware stack levels used: 1
  4570 ;; Hardware stack levels required when called: 2
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		_main
  4575 ;;		_calibCards
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text30
  4580   001C58                     __ptext30:
  4581                           	callstack 0
  4582   001C58                     _RGBC2color:
  4583                           	callstack 28
  4584   001C58                     
  4585                           ;color.c: 119:  Vals -> red = readVals -> red;
  4586   001C58  C005  FFD9         	movff	RGBC2color@readVals,fsr2l
  4587   001C5C  C006  FFDA         	movff	RGBC2color@readVals+1,fsr2h
  4588   001C60  EE10 F001          	lfsr	1,1
  4589   001C64  5007               	movf	RGBC2color@Vals^0,w,c
  4590   001C66  26E1               	addwf	fsr1l,f,c
  4591   001C68  5008               	movf	(RGBC2color@Vals+1)^0,w,c
  4592   001C6A  22E2               	addwfc	fsr1h,f,c
  4593   001C6C  CFDE FFE6          	movff	postinc2,postinc1
  4594   001C70  CFDE FFE6          	movff	postinc2,postinc1
  4595   001C74  CFDE FFE6          	movff	postinc2,postinc1
  4596   001C78  CFDE FFE6          	movff	postinc2,postinc1
  4597                           
  4598                           ;color.c: 120:  Vals -> green = readVals -> green;
  4599   001C7C  EE20 F004          	lfsr	2,4
  4600   001C80  5005               	movf	RGBC2color@readVals^0,w,c
  4601   001C82  26D9               	addwf	fsr2l,f,c
  4602   001C84  5006               	movf	(RGBC2color@readVals+1)^0,w,c
  4603   001C86  22DA               	addwfc	fsr2h,f,c
  4604   001C88  EE10 F005          	lfsr	1,5
  4605   001C8C  5007               	movf	RGBC2color@Vals^0,w,c
  4606   001C8E  26E1               	addwf	fsr1l,f,c
  4607   001C90  5008               	movf	(RGBC2color@Vals+1)^0,w,c
  4608   001C92  22E2               	addwfc	fsr1h,f,c
  4609   001C94  CFDE FFE6          	movff	postinc2,postinc1
  4610   001C98  CFDE FFE6          	movff	postinc2,postinc1
  4611   001C9C  CFDE FFE6          	movff	postinc2,postinc1
  4612   001CA0  CFDE FFE6          	movff	postinc2,postinc1
  4613                           
  4614                           ;color.c: 121:  Vals -> blue = readVals -> blue;
  4615   001CA4  EE20 F008          	lfsr	2,8
  4616   001CA8  5005               	movf	RGBC2color@readVals^0,w,c
  4617   001CAA  26D9               	addwf	fsr2l,f,c
  4618   001CAC  5006               	movf	(RGBC2color@readVals+1)^0,w,c
  4619   001CAE  22DA               	addwfc	fsr2h,f,c
  4620   001CB0  EE10 F009          	lfsr	1,9
  4621   001CB4  5007               	movf	RGBC2color@Vals^0,w,c
  4622   001CB6  26E1               	addwf	fsr1l,f,c
  4623   001CB8  5008               	movf	(RGBC2color@Vals+1)^0,w,c
  4624   001CBA  22E2               	addwfc	fsr1h,f,c
  4625   001CBC  CFDE FFE6          	movff	postinc2,postinc1
  4626   001CC0  CFDE FFE6          	movff	postinc2,postinc1
  4627   001CC4  CFDE FFE6          	movff	postinc2,postinc1
  4628   001CC8  CFDE FFE6          	movff	postinc2,postinc1
  4629                           
  4630                           ;color.c: 122:  Vals -> clear = readVals -> clear;
  4631   001CCC  EE20 F00C          	lfsr	2,12
  4632   001CD0  5005               	movf	RGBC2color@readVals^0,w,c
  4633   001CD2  26D9               	addwf	fsr2l,f,c
  4634   001CD4  5006               	movf	(RGBC2color@readVals+1)^0,w,c
  4635   001CD6  22DA               	addwfc	fsr2h,f,c
  4636   001CD8  EE10 F00D          	lfsr	1,13
  4637   001CDC  5007               	movf	RGBC2color@Vals^0,w,c
  4638   001CDE  26E1               	addwf	fsr1l,f,c
  4639   001CE0  5008               	movf	(RGBC2color@Vals+1)^0,w,c
  4640   001CE2  22E2               	addwfc	fsr1h,f,c
  4641   001CE4  CFDE FFE6          	movff	postinc2,postinc1
  4642   001CE8  CFDE FFE6          	movff	postinc2,postinc1
  4643   001CEC  CFDE FFE6          	movff	postinc2,postinc1
  4644   001CF0  CFDE FFE6          	movff	postinc2,postinc1
  4645   001CF4  0012               	return		;funcret
  4646   001CF6                     __end_of_RGBC2color:
  4647                           	callstack 0
  4648                           
  4649 ;; *************** function _Interrupts_init *****************
  4650 ;; Defined at:
  4651 ;;		line 10 in file "interrupts.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;		None
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;		None
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  1    wreg      void 
  4658 ;; Registers used:
  4659 ;;		None
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4669 ;;Total ram usage:        0 bytes
  4670 ;; Hardware stack levels used: 1
  4671 ;; Hardware stack levels required when called: 2
  4672 ;; This function calls:
  4673 ;;		Nothing
  4674 ;; This function is called by:
  4675 ;;		_main
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           	psect	text31
  4680   0020C4                     __ptext31:
  4681                           	callstack 0
  4682   0020C4                     _Interrupts_init:
  4683                           	callstack 28
  4684   0020C4                     
  4685                           ;interrupts.c: 16:     INTCONbits.IPEN = 0;
  4686   0020C4  9AF2               	bcf	242,5,c	;volatile
  4687                           
  4688                           ;interrupts.c: 17:     INTCONbits.PEIE = 1;
  4689   0020C6  8CF2               	bsf	242,6,c	;volatile
  4690                           
  4691                           ;interrupts.c: 18:     PIE4bits.RC4IE=1;
  4692   0020C8  010E               	movlb	14	; () banked
  4693   0020CA  872D               	bsf	45,3,b	;volatile
  4694                           
  4695                           ;interrupts.c: 20:     INTCONbits.GIE=1;
  4696   0020CC  8EF2               	bsf	242,7,c	;volatile
  4697   0020CE                     
  4698                           ; BSR set to: 14
  4699   0020CE  0012               	return		;funcret
  4700   0020D0                     __end_of_Interrupts_init:
  4701                           	callstack 0
  4702                           
  4703 ;; *************** function _HighISR *****************
  4704 ;; Defined at:
  4705 ;;		line 28 in file "interrupts.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;		None
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;		None
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  1    wreg      void 
  4712 ;; Registers used:
  4713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4721 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4722 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4723 ;;Total ram usage:        2 bytes
  4724 ;; Hardware stack levels used: 1
  4725 ;; Hardware stack levels required when called: 1
  4726 ;; This function calls:
  4727 ;;		_getCharFromTxBuf
  4728 ;;		_isDataInTxBuf
  4729 ;; This function is called by:
  4730 ;;		Interrupt level 2
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           	psect	intcode
  4735   000008                     __pintcode:
  4736                           	callstack 0
  4737   000008                     _HighISR:
  4738                           	callstack 23
  4739                           
  4740                           ; BSR set to: 14
  4741                           ;incstack = 0
  4742   000008  824A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4743   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  4744   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  4745   000012                     
  4746                           ;interrupts.c: 30:     if(PIR4bits.TX4IF) {
  4747   000012  010E               	movlb	14	; () banked
  4748   000014  A537               	btfss	55,2,b	;volatile
  4749   000016  EF0F  F000         	goto	i2u231_41
  4750   00001A  EF11  F000         	goto	i2u231_40
  4751   00001E                     i2u231_41:
  4752   00001E  EF15  F000         	goto	i2l3293
  4753   000022                     i2u231_40:
  4754   000022                     
  4755                           ; BSR set to: 14
  4756                           ;interrupts.c: 31:         TX4REG = getCharFromTxBuf();
  4757   000022  ECB0  F00F         	call	_getCharFromTxBuf	;wreg free
  4758   000026  010E               	movlb	14	; () banked
  4759   000028  6FE4               	movwf	228,b	;volatile
  4760   00002A                     i2l3293:
  4761                           
  4762                           ; BSR set to: 14
  4763                           ;interrupts.c: 33:     if (!isDataInTxBuf()) {
  4764   00002A  EC50  F010         	call	_isDataInTxBuf	;wreg free
  4765   00002E  0900               	iorlw	0
  4766   000030  A4D8               	btfss	status,2,c
  4767   000032  EF1D  F000         	goto	i2u232_41
  4768   000036  EF1F  F000         	goto	i2u232_40
  4769   00003A                     i2u232_41:
  4770   00003A  EF21  F000         	goto	i2l612
  4771   00003E                     i2u232_40:
  4772   00003E                     
  4773                           ;interrupts.c: 34:         PIE4bits.TX4IE=0;
  4774   00003E  010E               	movlb	14	; () banked
  4775   000040  952D               	bcf	45,2,b	;volatile
  4776   000042                     i2l612:
  4777   000042  C004  FFDA         	movff	??_HighISR+1,fsr2h
  4778   000046  C003  FFD9         	movff	??_HighISR,fsr2l
  4779   00004A  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4780   00004C  0011               	retfie		f
  4781   00004E                     __end_of_HighISR:
  4782                           	callstack 0
  4783                           
  4784 ;; *************** function _isDataInTxBuf *****************
  4785 ;; Defined at:
  4786 ;;		line 90 in file "serial.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;		None
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;		None
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  1    wreg      unsigned char 
  4793 ;; Registers used:
  4794 ;;		wreg, status,2, status,0
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4804 ;;Total ram usage:        0 bytes
  4805 ;; Hardware stack levels used: 1
  4806 ;; This function calls:
  4807 ;;		Nothing
  4808 ;; This function is called by:
  4809 ;;		_HighISR
  4810 ;;		_sendTxBuf
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           	psect	text33
  4815   0020A0                     __ptext33:
  4816                           	callstack 0
  4817   0020A0                     _isDataInTxBuf:
  4818                           	callstack 23
  4819   0020A0                     
  4820                           ;serial.c: 91:     return (TxBufWriteCnt!=TxBufReadCnt);
  4821   0020A0  5047               	movf	_TxBufReadCnt^0,w,c	;volatile
  4822   0020A2  1848               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  4823   0020A4  A4D8               	btfss	status,2,c
  4824   0020A6  EF57  F010         	goto	i2u82_41
  4825   0020AA  EF5A  F010         	goto	i2u82_40
  4826   0020AE                     i2u82_41:
  4827   0020AE  0E01               	movlw	1
  4828   0020B0  EF5B  F010         	goto	i2u83_40
  4829   0020B4                     i2u82_40:
  4830   0020B4  0E00               	movlw	0
  4831   0020B6                     i2u83_40:
  4832   0020B6  0012               	return		;funcret
  4833   0020B8                     __end_of_isDataInTxBuf:
  4834                           	callstack 0
  4835                           
  4836 ;; *************** function _getCharFromTxBuf *****************
  4837 ;; Defined at:
  4838 ;;		line 76 in file "serial.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;		None
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;		None
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  1    wreg      unsigned char 
  4845 ;; Registers used:
  4846 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4854 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4856 ;;Total ram usage:        2 bytes
  4857 ;; Hardware stack levels used: 1
  4858 ;; This function calls:
  4859 ;;		Nothing
  4860 ;; This function is called by:
  4861 ;;		_HighISR
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           	psect	text34
  4866   001F60                     __ptext34:
  4867                           	callstack 0
  4868   001F60                     _getCharFromTxBuf:
  4869                           	callstack 23
  4870   001F60                     
  4871                           ;serial.c: 77:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  4872   001F60  0E3B               	movlw	59
  4873   001F62  6447               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  4874   001F64  EFB6  F00F         	goto	i2u198_41
  4875   001F68  EFB8  F00F         	goto	i2u198_40
  4876   001F6C                     i2u198_41:
  4877   001F6C  EFBA  F00F         	goto	i2l2989
  4878   001F70                     i2u198_40:
  4879   001F70  0E00               	movlw	0
  4880   001F72  6E47               	movwf	_TxBufReadCnt^0,c	;volatile
  4881   001F74                     i2l2989:
  4882                           
  4883                           ;serial.c: 78:     return EUSART4TXbuf[TxBufReadCnt++];
  4884   001F74  2A47               	incf	_TxBufReadCnt^0,f,c	;volatile
  4885   001F76  0447               	decf	_TxBufReadCnt^0,w,c	;volatile
  4886   001F78  6E01               	movwf	??_getCharFromTxBuf^0,c
  4887   001F7A  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  4888   001F7C  0E00               	movlw	low _EUSART4TXbuf
  4889   001F7E  2401               	addwf	??_getCharFromTxBuf^0,w,c
  4890   001F80  6ED9               	movwf	fsr2l,c
  4891   001F82  0E03               	movlw	high _EUSART4TXbuf
  4892   001F84  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  4893   001F86  6EDA               	movwf	fsr2h,c
  4894   001F88  50DF               	movf	indf2,w,c
  4895   001F8A  0012               	return		;funcret
  4896   001F8C                     __end_of_getCharFromTxBuf:
  4897                           	callstack 0
  4898                           
  4899                           	psect	rparam
  4900   000000                     
  4901                           	psect	temp
  4902   00004A                     btemp:
  4903                           	callstack 0
  4904   00004A                     	ds	1
  4905   000000                     int$flags	set	btemp
  4906   000000                     wtemp8	set	btemp+1
  4907   000000                     ttemp5	set	btemp+1
  4908   000000                     ttemp6	set	btemp+4
  4909   000000                     ttemp7	set	btemp+8
  4910                           
  4911                           	psect	config
  4912                           
  4913                           ;Config register CONFIG1L @ 0x300000
  4914                           ;	External Oscillator mode Selection bits
  4915                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4916                           ;	Power-up default value for COSC bits
  4917                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4918   300000                     	org	3145728
  4919   300000  AA                 	db	170
  4920                           
  4921                           ;Config register CONFIG1H @ 0x300001
  4922                           ;	unspecified, using default values
  4923                           ;	Clock Out Enable bit
  4924                           ;	CLKOUTEN = 0x1, unprogrammed default
  4925                           ;	Clock Switch Enable bit
  4926                           ;	CSWEN = 0x1, unprogrammed default
  4927                           ;	Fail-Safe Clock Monitor Enable bit
  4928                           ;	FCMEN = 0x1, unprogrammed default
  4929   300001                     	org	3145729
  4930   300001  FF                 	db	255
  4931                           
  4932                           ;Config register CONFIG3L @ 0x300004
  4933                           ;	WDT Period Select bits
  4934                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4935                           ;	WDT operating mode
  4936                           ;	WDTE = OFF, WDT Disabled
  4937   300004                     	org	3145732
  4938   300004  9F                 	db	159
  4939                           
  4940                           ;Config register CONFIG3H @ 0x300005
  4941                           ;	unspecified, using default values
  4942                           ;	WDT Window Select bits
  4943                           ;	WDTCWS = 0x7, unprogrammed default
  4944                           ;	WDT input clock selector
  4945                           ;	WDTCCS = 0x7, unprogrammed default
  4946   300005                     	org	3145733
  4947   300005  FF                 	db	255
  4948                           tosu	equ	0xFFF
  4949                           tosh	equ	0xFFE
  4950                           tosl	equ	0xFFD
  4951                           stkptr	equ	0xFFC
  4952                           pclatu	equ	0xFFB
  4953                           pclath	equ	0xFFA
  4954                           pcl	equ	0xFF9
  4955                           tblptru	equ	0xFF8
  4956                           tblptrh	equ	0xFF7
  4957                           tblptrl	equ	0xFF6
  4958                           tablat	equ	0xFF5
  4959                           prodh	equ	0xFF4
  4960                           prodl	equ	0xFF3
  4961                           indf0	equ	0xFEF
  4962                           postinc0	equ	0xFEE
  4963                           postdec0	equ	0xFED
  4964                           preinc0	equ	0xFEC
  4965                           plusw0	equ	0xFEB
  4966                           fsr0h	equ	0xFEA
  4967                           fsr0l	equ	0xFE9
  4968                           wreg	equ	0xFE8
  4969                           indf1	equ	0xFE7
  4970                           postinc1	equ	0xFE6
  4971                           postdec1	equ	0xFE5
  4972                           preinc1	equ	0xFE4
  4973                           plusw1	equ	0xFE3
  4974                           fsr1h	equ	0xFE2
  4975                           fsr1l	equ	0xFE1
  4976                           bsr	equ	0xFE0
  4977                           indf2	equ	0xFDF
  4978                           postinc2	equ	0xFDE
  4979                           postdec2	equ	0xFDD
  4980                           preinc2	equ	0xFDC
  4981                           plusw2	equ	0xFDB
  4982                           fsr2h	equ	0xFDA
  4983                           fsr2l	equ	0xFD9
  4984                           status	equ	0xFD8

Data Sizes:
    Strings     71
    Constant    0
    Data        233
    BSS         558
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      73
    BANK0           160    142     142
    BANK1           256      0     246
    BANK2           256      0     250
    BANK3           256     41     133
    BANK4           256      0     200
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    bump@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhlll[1]), CCPR4H(BITBIGSFRllllllhhhllllllll[1]), 

    bump@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhlll[1]), CCPR3H(BITBIGSFRllllllhhhllllllll[1]), 

    bump@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhlll[1]), CCPR4H(BITBIGSFRllllllhhhllllllll[1]), 

    bump@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhlll[1]), CCPR3H(BITBIGSFRllllllhhhllllllll[1]), 

    color_read_all@readVals	PTR struct RGBC size(2) Largest target is 16
		 -> calibCards@readVals(COMRAM[16]), checkColor@Vals(BANK0[16]), checkIncidence@tmp(COMRAM[16]), main@Vals(BANK3[16]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    goStraight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhlll[1]), CCPR4H(BITBIGSFRllllllhhhllllllll[1]), 

    goStraight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhlll[1]), CCPR3H(BITBIGSFRllllllhhhllllllll[1]), 

    goStraight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhlll[1]), CCPR4H(BITBIGSFRllllllhhhllllllll[1]), 

    goStraight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhlll[1]), CCPR3H(BITBIGSFRllllllhhhllllllll[1]), 

    mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhlll[1]), CCPR4H(BITBIGSFRllllllhhhllllllll[1]), 

    mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhlll[1]), CCPR3H(BITBIGSFRllllllhhhllllllll[1]), 

    ?_mLinit$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhlll[1]), CCPR4H(BITBIGSFRllllllhhhllllllll[1]), 

    ?_mLinit$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhlll[1]), CCPR3H(BITBIGSFRllllllhhhllllllll[1]), 

    mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhlll[1]), CCPR4H(BITBIGSFRllllllhhhllllllll[1]), 

    mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhlll[1]), CCPR3H(BITBIGSFRllllllhhhllllllll[1]), 

    ?_mRinit$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhlll[1]), CCPR4H(BITBIGSFRllllllhhhllllllll[1]), 

    ?_mRinit$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhlll[1]), CCPR3H(BITBIGSFRllllllhhhllllllll[1]), 

    RGBC2color@readVals	PTR struct RGBC size(2) Largest target is 16
		 -> calibCards@readVals(COMRAM[16]), main@Vals(BANK3[16]), 

    RGBC2color@Vals	PTR struct color size(2) Largest target is 25
		 -> calibCards@readColors(COMRAM[25]), main@currColor(BANK3[25]), 

    S275DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhlll[1]), CCPR4H(BITBIGSFRllllllhhhllllllll[1]), 

    S275DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhlll[1]), CCPR3H(BITBIGSFRllllllhhhllllllll[1]), 

    S2839$buffer	PTR unsigned char  size(2) Largest target is 0

    S2839$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 50
		 -> serialColor@testColor(BANK0[50]), STR_1(CODE[19]), STR_10(CODE[7]), STR_11(CODE[2]), 
		 -> STR_12(CODE[2]), STR_13(CODE[12]), STR_2(CODE[7]), STR_4(CODE[5]), 
		 -> STR_6(CODE[7]), STR_8(CODE[6]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhlll[1]), CCPR4H(BITBIGSFRllllllhhhllllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhlll[1]), CCPR3H(BITBIGSFRllllllhhhllllllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_5(CODE[4]), STR_7(CODE[4]), STR_9(CODE[4]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 50
		 -> serialColor@testColor(BANK0[50]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhlll[1]), CCPR4H(BITBIGSFRllllllhhhllllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhlll[1]), CCPR3H(BITBIGSFRllllllhhhllllllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhlll[1]), CCPR4H(BITBIGSFRllllllhhhllllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhlll[1]), CCPR3H(BITBIGSFRllllllhhhllllllll[1]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhlll[1]), CCPR4H(BITBIGSFRllllllhhhllllllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhlll[1]), CCPR3H(BITBIGSFRllllllhhhllllllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhlll[1]), CCPR4H(BITBIGSFRllllllhhhllllllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhlll[1]), CCPR3H(BITBIGSFRllllllhhhllllllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhlll[1]), CCPR4H(BITBIGSFRllllllhhhllllllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhlll[1]), CCPR3H(BITBIGSFRllllllhhhllllllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhlll[1]), CCPR4H(BITBIGSFRllllllhhhllllllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhlll[1]), CCPR3H(BITBIGSFRllllllhhhllllllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_5(CODE[4]), STR_7(CODE[4]), STR_9(CODE[4]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_5(CODE[4]), STR_7(CODE[4]), STR_9(CODE[4]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_5(CODE[4]), STR_7(CODE[4]), STR_9(CODE[4]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_serialColor
    _serialColor->_checkColor
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->___aldiv
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _checkColor->_color_read_all
    _color_read_all->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _abs->___almod
    ___aldiv->___wmul

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_serialColor
    _serialColor->_checkColor

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                59    59      0   18676
                                             68 COMRAM     2     2      0
                                              0 BANK3     41    41      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                         _RGBC2color
                         _checkColor
                   _color_click_init
                     _color_read_all
                    _initCalibColors
                    _initDCmotorsPWM
                         _initUSART4
                             _mLinit
                             _mRinit
                  _sendStringSerial4
                        _serialColor
                         _triLED_tog
 ---------------------------------------------------------------------------------
 (1) _serialColor                                         77    52     25    8032
                                             66 COMRAM     2     2      0
                                             67 BANK0     75    50     25
                         _checkColor (ARG)
                    _sendCharSerial4
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    6122
                                             40 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    5090
                                             36 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3    4629
                                             24 COMRAM    12     9      3
                            ___aldiv
                            ___almod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                              4 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___almod                                             10     2      8     613
                                              4 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2    1266
                                              5 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      31
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mRinit                                              16     8      8     219
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (1) _mLinit                                              16     8      8     219
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      1     1      0      31
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initCalibColors                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     363
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     363
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkColor                                         100    75     25    5997
                                             33 COMRAM    33     8     25
                                              0 BANK0     67    67      0
                            ___aldiv
                             ___wmul
                                _abs
                     _color_read_all
                         _triLED_tog
 ---------------------------------------------------------------------------------
 (1) _triLED_tog                                           1     1      0      93
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_read_all                                      25    23      2    1396
                                              8 COMRAM    25    23      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      31
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      65
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     543
                                             14 COMRAM     4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1492
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8    1345
                                             10 COMRAM    14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _RGBC2color                                           4     0      4     760
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _HighISR                                              2     2      0       0
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (8) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _getCharFromTxBuf                                     2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _RGBC2color
   _checkColor
     ___aldiv
       ___wmul (ARG)
     ___wmul
     _abs
       ___almod (ARG)
     _color_read_all
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _triLED_tog
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_read_all
   _initCalibColors
   _initDCmotorsPWM
   _initUSART4
   _mLinit
   _mRinit
   _sendStringSerial4
     _sendCharSerial4
   _serialColor
     _checkColor (ARG)
     _sendCharSerial4 (ARG)
     _sendStringSerial4 (ARG)
     _sprintf (ARG)
       _vfprintf
         _vfpfcnvrt
           ___aldiv
           ___almod
           _abs
           _fputc
             _putch
   _triLED_tog

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C8      13       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100     29      85      11       52.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FA       9       97.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F6       7       96.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8E      8E       5       88.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      49       1       77.7%
BITBIGSFRllllll     52      0       0      40        0.0%
BITBIGSFRllllll     37      0       0      42        0.0%
BITBIGSFRhhl        32      0       0      33        0.0%
BITBIGSFRllllll     2D      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      52        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllll     1E      0       0      46        0.0%
BITBIGSFRhlll       1D      0       0      37        0.0%
BITBIGSFRllllll     11      0       0      47        0.0%
BITBIGSFRllllll      F      0       0      54        0.0%
BITBIGSFRhlhh        E      0       0      34        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllll      9      0       0      53        0.0%
BITBIGSFRllllll      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      6      0       0      51        0.0%
BITBIGSFRllllll      5      0       0      50        0.0%
BITBIGSFRllllll      3      0       0      49        0.0%
BITBIGSFRllllll      2      0       0      41        0.0%
BITBIGSFRhllh        2      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      44        0.0%
BITBIGSFRhlhl        1      0       0      35        0.0%
BITBIGSFRllllll      1      0       0      48        0.0%
BITBIGSFRlllllh      1      0       0      39        0.0%
BITBIGSFRllh         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     414      57        0.0%
DATA                 0      0     414       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Dec 12 12:38:50 2023

               _color_read_all 13F6                             l92 1FDC                             l95 206C  
                           l89 1F2A                             l98 15B4            ___wmul@multiplicand 0007  
            ??_Interrupts_init 0005                            l101 1BB8                            l110 1CF4  
                          l116 1134                            l403 1DD6                            l274 1C56  
                          l540 1FDE                            l605 20CE                            l438 16DE  
                          l543 2004                            l623 1EF6                            l552 20D8  
                          l537 1FB4                            l385 204C                            l721 18D6  
                          l546 20E2                            l626 1EC2                            l394 208A  
                          l555 20C2                            l708 17EA                            l629 202A  
                          l549 20EC                            l397 209E                            l558 1E5A  
                          _abs 1F2C                            _red 01AF                            _pos 01E8  
                  ?_RGBC2color 0005                            wreg 0FE8                           ?_abs 000F  
                         l1304 1F46                           l1314 1E8E                           l1307 1F5E  
                         l1362 13F4                           l1380 1B14                           l1391 20EE  
                         l1368 1E18                           l4201 0E74                           l4211 1100  
                         l4203 102C                           l4213 1106                           l4205 109C  
                         l3501 1830                           l4151 13F6                           l4215 1122  
                         l4207 10C2                           l3511 1886                           l3503 1846  
                         l3441 1F2C                           l4153 153C                           l4209 10D2  
                         l3521 18C6                           l3513 1896                           l3505 184E  
                         l3601 13AC                           l4321 19B8                           l4313 19A8  
                         l3451 1702                           l3443 1F3A                           l4155 1554  
                         l3515 18A0                           l3507 185A                           l3531 1A96  
                         l3603 13C2                           l4331 19D0                           l4323 19BC  
                         l4315 19AC                           l3461 1738                           l3453 1706  
                         l3445 16E0                           l3541 1FEE                           l4157 1574  
                         l3509 1868                           l3517 18A6                           l3533 1AB2  
                         l3525 1A6C                           l4341 1A2E                           l4333 19DC  
                         l4325 19C0                           l4317 19B0                           l3471 177A  
                         l3463 174E                           l3455 1714                           l3447 16E4  
                         l4159 1594                           l4191 0E50                           l3711 1DA4  
                         l3519 18B6                           l3535 1AE4                           l3527 1A7C  
                         l3551 1176                           l3607 13CE                           l3543 1136  
                         l4343 1A4C                           l4335 19F0                           l4327 19C4  
                         l4319 19B4                           l3473 1798                           l3465 1756  
                         l3481 17BA                           l3457 1724                           l3449 16F2  
                         l3633 20DA                           l3641 20D0                           l4193 0E5A  
                         l3705 1D76                           l3529 1A8C                           l3553 1180  
                         l3545 115C                           l4337 1A06                           l4329 19CA  
                         l4187 1C58                           l3483 17CA                           l3475 17A8  
                         l3467 1762                           l3459 1728                           l3539 1FDE  
                         l3651 1E20                           l3635 20DE                           l3643 20D4  
                         l4195 0E6C                           l3707 1D7A                           l3491 17F0  
                         l3571 1248                           l3555 1196                           l3563 11AC  
                         l3547 1164                           l4339 1A1E                           l3485 17DA  
                         l3477 17AA                           l3469 1770                           l3653 1E28  
                         l3645 20E4                           l3637 20BA                           l4189 0E4A  
                         l3901 2030                           l3709 1DA0                           l3493 17FE  
                         l3581 12A4                           l4445 11C0                           l3557 119C  
                         l3565 11DE                           l3549 1172                           l3741 1E64  
                         l3479 17B4                           l3751 2006                           l3655 1E30  
                         l3647 20E8                           l3639 20BE                           l3911 204A  
                         l3903 203A                           l3663 208A                           l3495 180E  
                         l3591 1356                           l3583 12B8                           l4447 1280  
                         l3567 11FE                           l3575 126C                           l3559 11A4  
                         l3671 1DF0                           l3743 1E6C                           l3753 2022  
                         l3657 1E56                           l3649 1E1C                           l3681 1F9C  
                         l3761 1F06                           l3905 203C                           l3665 209A  
                         l3497 1812                           l3489 17EC                           l3593 1366  
                         l3585 12FC                           l3577 1296                           l3569 1222  
                         l3673 1E10                           l3745 1E74                           l3921 15FA  
                         l3913 15B6                           l3659 1E58                           l3691 1FB8  
                         l3683 1F9E                           l3763 1F16                           l3851 1BF2  
                         l3907 2046                           l3499 1820                           l3595 1376  
                         l3587 1330                           l3579 12A0                           l3667 1DD8  
                         l3747 1E84                           l3739 1E5C                           l3931 1656  
                         l3923 1604                           l3915 15C6                           l3693 1FBE  
                         l3685 1FA0                           l3677 1F8C                           l3765 1F20  
                         l3757 1EF8                           l3861 1C08                           l3853 1BF6  
                         l3845 1BBC                           l3909 2048                           l3597 138C  
                         l3589 1346                           l3669 1DE0                           l3941 16A6  
                         l3933 1666                           l3925 1620                           l3917 15CE  
                         l3687 1FA2                           l3679 1F96                           l3759 1EFC  
                         l3767 1B16                           l3871 1C1E                           l3863 1C0C  
                         l3855 1BFE                           l3847 1BD8                           l3951 1ED0  
                         l3599 13AA                           l3943 16B6                           l3935 1670  
                         l3927 1630                           l3919 15EA                           l3689 2050  
                         l3881 1C32                           l3873 1C22                           l3865 1C12  
                         l3857 1C02                           l3849 1BEA                           l3953 1ED8  
                         l3961 1E9C                           l3945 16C6                           l3937 168C  
                         l3929 163A                           l3947 20C4                           l3891 1C48  
                         l3883 1C34                           l3875 1C26                           l3867 1C16  
                         l3859 1C04                           l3955 1EE4                           l3963 1EA4  
                         l3939 169C                           l3893 1C4A                           l3885 1C3C  
                         l3877 1C28                           l3869 1C1A                           l3949 1EC4  
                         l3965 1EB0                           l3895 1C4C                           l3887 1C3E  
                         l3879 1C30                           l3959 1E90                           l3897 1C54  
                         l3889 1C40                           l3899 202C                           STR_1 0E01  
                         STR_2 0E20                           STR_3 0E40                           STR_4 0E3B  
                         STR_5 0E40                           STR_6 0E27                           STR_7 0E40  
                         STR_8 0E35                           STR_9 0E40                           u2400 16F2  
                 _BAUD4CONbits 0EE9                           u2401 16EE                           u2410 1714  
                         u2411 1710                           u3051 1EEE                           u2420 174E  
                         u2500 1886                           u2421 174A                           u3301 10F8  
                         u3061 1EBA                           u2501 1882                           u2430 1770  
                         u3310 1122                           u2510 18B6                           u2431 176C  
                         u3311 111E                           u2511 18B2                           u2440 1798  
                         u2520 1A7C                           u2600 121E                           u2441 1794  
                         u3321 112C                           u2521 1A78                           u2601 121A  
                         u2450 17CA                           u2530 1A8C                           u2610 12B4  
                         _T2PR 0FBC                           u2451 17C6                           u2531 1A88  
                         u2611 12AE                           u2700 209A                           u2460 17FE  
                         u2540 1AB2                           u2620 12B6                           u2701 2096  
                         u2461 17FA                           u2541 1AAE                           u2390 1F3A  
                         u2470 1820                           u2550 1AE4                           u2630 1346  
                         u2710 1E10                           u2391 1F36                           u2471 181C  
                         u2551 1AE0                           u2631 1342                           u2711 1E0C  
                         u2560 1FEE                           u2480 1846                           u2640 1356  
                         u2561 1FEA                           u2481 1842                           u2641 1352  
                         u2570 2004                           u3290 10C2                           u2490 1868  
                         u2650 1366                           u2571 2000                           u3291 10BE  
                         u2491 1864                           u2651 1362                           u2660 1376  
                         u2580 115C                           u2725 1FC6                           u2901 1B8C  
                         u2661 1372                           u2581 1158                           u2726 1FC8  
                         u2750 1D9C                           u2670 13BE                           u2590 11FE  
                         u2735 1FD0                           u3607 1F0C                           u2911 1B9E  
                         u2671 13BA                           u2591 11FA                           u3551 19FA  
                         u2680 1E44                           u2736 1FD2                           u2760 1DC6  
                         u2681 1E3C                           u2745 1FDA                           u2921 1BB0  
                         u2841 1B20                           u3561 1A40                           u2746 1FDC  
                         u2770 1DD6                           u2851 1B32                           u2771 1DD2  
                         u2861 1B44                           u2757 1D92                           u2871 1B56  
                         u2767 1DBC                           u2881 1B68                           u3577 1A10  
                         u2698 1E46                           u2891 1B7A                           u3587 1A56  
                         u3597 16D0                           abs@a 000F                           _dbuf 033C  
                         _blue 017D                           _main 19A8                           _hist 0400  
                         _pink 014B                           _prec 01E6                           fsr0h 0FEA  
                         fsr1h 0FE2                           indf0 0FEF                           fsr2h 0FDA  
                         fsr0l 0FE9                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 004A                           prodh 0FF4  
                         prodl 0FF3                           start 004E                __end_of_HighISR 004E  
       __end_of_color_read_all 15B6                   ___param_bank 0000                          ??_abs 0011  
            checkColor@absDiff 007D                __end_of___aldiv 17EC                __end_of___almod 18D8  
                        ?_main 0001                          STR_10 0E2E                          STR_11 0E44  
                        STR_12 0E46                          STR_13 0E14                          i2l425 20B6  
                        i2l418 1F8A                          i2l612 0042                   vfpfcnvrt@fmt 001A  
      __end_of_sendCharSerial4 20A0     __end_of_I2C_2_Master_Start 20E4     __end_of_I2C_2_Master_Write 20C4  
                        _flags 01F4                          _count 01EC                          _green 0196  
                        _fputc 1A6C                          _width 01E4                          _putch 20EE  
                        tablat 0FF5                          plusw0 0FEB                          plusw1 0FE3  
                        plusw2 0FDB                          ttemp5 004B                          ttemp6 004E  
                        ttemp7 0052                          status 0FD8                          wtemp8 004B  
              __end_of_sprintf 1E90          _I2C_2_Master_RepStart 20E4                ?_color_read_all 0009  
              __initialization 1CF6                   __end_of_main 1A6C                         ??_main 0045  
                __activetblptr 0003                 RGBC2color@Vals 0007                         ?_fputc 0005  
                       _CCPR1H 0FAA                         _CCPR2H 0FA6                         _CCPR3H 0F25  
                       _CCPR4H 0F21                         ?_putch 0001                         _RC0PPS 0E62  
                       _RC4REG 0EE3                         _RE2PPS 0E74                         _RD5PPS 0E6F  
                       _RC7PPS 0E69                         _RD6PPS 0E70                         _RE4PPS 0E76  
                       i2l2015 20A0                         i2l3291 0022                         i2l3293 002A  
                       i2l3295 003E                         i2l3289 0012                         _RG6PPS 0E88  
                       i2l2985 1F60                         i2l2987 1F70                         i2l2989 1F74  
                main@currColor 035C                  vfpfcnvrt@done 001E                      ??_HighISR 0003  
     __end_of_color_click_init 1F2C                         _RX4PPS 0E15                         _TX4REG 0EE4  
                 ?_serialColor 00A3                   _CCPTMRS0bits 0FAD                   vfprintf@cfmt 0028  
             _getCharFromTxBuf 1F60                      ??___aldiv 0013                      ??___almod 000D  
                       ___wmul 2006                         _mLinit 1EC4                         _blackC 02E1  
                       _mRinit 1E90                         _minPow 01C8                         clear_0 1D3C  
                       clear_1 1D48                         clear_2 1D54                         clear_3 1D60  
                       _orange 0132                         isa$std 0001                         _whiteC 0100  
                       _yellow 0164                         fputc@c 0005                   __mediumconst 0000  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 1E1A  
                _newColorFound 01EE              ??_initDCmotorsPWM 0005                      ??_sprintf 002F  
        __end_of_isDataInTxBuf 20B8                     __accesstop 0060        __end_of__initialization 1D6C  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 0001                _Interrupts_init 20C4  
               __pcstackCOMRAM 0001                   __pidataBANK1 18D8                   __pidataBANK2 206E  
                __end_of_fputc 1B16                  __end_of_putch 20F0                   ??_RGBC2color 0009  
              triLED_tog@state 0005                        ??_fputc 0008                     _checkColor 0E4A  
                      ??_putch 0005                     __pbssBANK1 01D0                     __pbssBANK2 0200  
                   __pbssBANK3 0300                     __pbssBANK4 0400              _color_writetoaddr 204E  
                 _T2CLKCONbits 0FBF             __end_of_RGBC2color 1CF6             ?_color_writetoaddr 0007  
                      ?___wmul 0005                        ?_mLinit 0005                        ?_mRinit 0005  
          ??_color_writetoaddr 0008            checkColor@colorDiff 0093                        _SP4BRGH 0EE6  
                      _SP4BRGL 0EE5                        i2u82_40 20B4                        i2u82_41 20AE  
                      i2u83_40 20B6                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
          checkColor@currColor 0060        __end_of_Interrupts_init 20D0         color_writetoaddr@value 0007  
               checkColor@Vals 0083                        _HighISR 0008               ??_color_read_all 000B  
    __end_of_color_writetoaddr 206E             _I2C_2_Master_Start 20DA                     _initUSART4 202C  
           _I2C_2_Master_Write 20B8                        __Hparam 0000                        __Lparam 0000  
      sendStringSerial4@string 0006                        ___aldiv 16E0                        ___almod 17EC  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0025  
                 __psmallconst 0E00                        __pcinit 1CF6                        __ramtop 0E00  
            ??_initCalibColors 0005                        __ptext0 19A8                        __ptext1 15B6  
                      __ptext2 1E5C                        __ptext3 1DD8                        __ptext4 1136  
                      __ptext5 1A6C                        __ptext6 20EE                        __ptext7 17EC  
                      __ptext8 1D76                        __ptext9 2088              color_read_all@tmp 0012  
                      _maxPowL 01CC                        _maxPowR 01CA                      _T2CONbits 0FBD  
             ___aldiv@dividend 000B                      _T2HLTbits 0FBE                  _RxBufWriteCnt 0049  
     __end_of_getCharFromTxBuf 1F8C                        _sprintf 1E5C                    ?_checkColor 0022  
         ??_I2C_2_Master_Start 0006           ??_I2C_2_Master_Write 0006           end_of_initialization 1D6C  
                      fputc@fp 0007              ?_color_click_init 0001                     _triLED_tog 1FB6  
       color_read_all@readVals 0009             ??_color_click_init 0009              __end_of_vfpfcnvrt 13F6  
             ___aldiv@quotient 0015                        postdec1 0FE5                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 001F           serialColor@currColor 00A3                     ??_vfprintf 0028  
              _incidenceThresh 01CE                _initDCmotorsPWM 1BBA                      _TRISAbits 0F81  
                    _TRISCbits 0F83                      _TRISDbits 0F84                      _TRISEbits 0F85  
                    _TRISFbits 0F86                      _TRISGbits 0F87                      _TRISHbits 0F88  
     color_writetoaddr@address 0008        ??_I2C_2_Master_RepStart 0006           serialColor@testColor 00BC  
             ?_Interrupts_init 0001                    _CCP1CONbits 0FAB                   _EUSART4RXbuf 01D0  
                 _EUSART4TXbuf 0300                    _CCP2CONbits 0FA7                    _CCP3CONbits 0F26  
                  ?_initUSART4 0001                    _CCP4CONbits 0F22      sendCharSerial4@charToSend 0005  
                  vfpfcnvrt@ap 001B                    vfpfcnvrt@cp 0023                    vfpfcnvrt@fp 0019  
               __end_of___wmul 202C                 __end_of_mLinit 1EF8                 __end_of_mRinit 1EC4  
          start_initialization 1CF6                    __end_of_abs 1F60                  _TxBufWriteCnt 0048  
                  ?_triLED_tog 0001                    _calibColors 0200        __end_of_initDCmotorsPWM 1C58  
                  vfprintf@fmt 0026                       ??___wmul 0009                       ??_mLinit 000D  
                     ??_mRinit 000D                    __pdataBANK1 0100                    __pdataBANK2 02E1  
        checkColor@prevAbsDiff 0079                    __pbssCOMRAM 0047                  __pcstackBANK0 0060  
                __pcstackBANK3 035C                       ?_HighISR 0001             RGBC2color@readVals 0005  
              _initCalibColors 1B16                      __pintcode 0008                       ?___aldiv 000B  
                     ?___almod 0005               ___almod@dividend 0005                   _readingColor 01F2  
         I2C_2_Master_Read@ack 0007           I2C_2_Master_Read@tmp 0008                    __smallconst 0E00  
            _I2C_2_Master_Idle 1FDE              _I2C_2_Master_Init 1F8C              _I2C_2_Master_Read 1E1A  
            _I2C_2_Master_Stop 20D0                   _RxBufReadCnt 01F5                      _lightBlue 0119  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
           ?_I2C_2_Master_Stop 0001                   ??_checkColor 003B       initDCmotorsPWM@PWMperiod 0005  
                     ?_sprintf 0029              ?_getCharFromTxBuf 0001             ??_getCharFromTxBuf 0001  
              ___aldiv@divisor 000F              _sendStringSerial4 1D76            ??_I2C_2_Master_Idle 0005  
              ___aldiv@counter 0013            ??_I2C_2_Master_Init 0005            ??_I2C_2_Master_Read 0006  
               ___wmul@product 0009                       _LATAbits 0F79            ??_I2C_2_Master_Stop 0006  
                     _LATCbits 0F7B                  _isDataInTxBuf 20A0                       _LATDbits 0F7C  
                     _LATEbits 0F7D                       _LATFbits 0F7E                       _LATGbits 0F7F  
                     _LATHbits 0F80             ?_sendStringSerial4 0006                       _PIE4bits 0E2D  
                ??_serialColor 0043                       i2u231_40 0022                       i2u231_41 001E  
                     i2u232_40 003E                       i2u232_41 003A                       i2u198_40 1F70  
                     i2u198_41 1F6C                       _PIR4bits 0E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0005                       _SSP2CON2 0EDA            ??_sendStringSerial4 0008  
                     _SSP2STAT 0ED8                      _vfpfcnvrt 1136             __end_of_checkColor 1136  
    __end_of_I2C_2_Master_Idle 2006      __end_of_I2C_2_Master_Init 1FB6      __end_of_I2C_2_Master_Read 1E5C  
            ___wmul@multiplier 0005      __end_of_I2C_2_Master_Stop 20DA    I2C_2_Master_Write@data_byte 0006  
                    _squaresb4 01EA                   _TxBufReadCnt 0047                     vfpfcnvrt@c 0024  
                    copy_data0 1D0A                      copy_data1 1D2A      __end_of_sendStringSerial4 1DD8  
      __end_of_initCalibColors 1BBA                 ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 20EE  
                 ??_initUSART4 0005                       __Hrparam 0000                    checkColor@i 0081  
                   vfprintf@ap 0027                       __Lrparam 0000                     vfprintf@fp 0025  
          __end_of_serialColor 16E0                     ?_vfpfcnvrt 0019                     _ANSELDbits 0EA7  
                   sprintf@fmt 002A             __end_of_initUSART4 204E                       __ptext10 1E90  
                     __ptext11 1EC4                       __ptext20 13F6                       __ptext12 202C  
                     __ptext21 20B8                       __ptext13 1BBA                       __ptext30 1C58  
                     __ptext22 20D0                       __ptext14 1B16                       __ptext31 20C4  
                     __ptext23 20DA                       __ptext15 1EF8                       __ptext24 20E4  
                     __ptext16 204E                       __ptext33 20A0                       __ptext25 1E1A  
                     __ptext17 1F8C                       __ptext34 1F60                       __ptext26 1FDE  
                     __ptext18 0E4A                       __ptext27 1F2C                       __ptext19 1FB6  
                     __ptext28 2006                       __ptext29 16E0                   _SSP2CON1bits 0ED9  
                 _SSP2CON2bits 0EDA                ___almod@divisor 0009                       _finished 01F0  
                     mLinit@mL 000D                ___almod@counter 000D                   ??_triLED_tog 0005  
                     mRinit@mR 000D                       isa$xinst 0000                     _RC4STAbits 0EE7  
                     int$flags 004A                       _vfprintf 1DD8                       main@Vals 0375  
                   _INTCONbits 0FF2                     _RGBC2color 1C58             __end_of_triLED_tog 1FDE  
              ??_isDataInTxBuf 0001                       intlevel2 0000                      sprintf@ap 002F  
             ?_initCalibColors 0001                    _serialColor 15B6                    ??_vfpfcnvrt 001C  
             _color_click_init 1EF8                       sprintf@f 0030                       sprintf@s 0029  
                   _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C                   ___aldiv@sign 0014  
                   _TX4STAbits 0EE8                _sendCharSerial4 2088                   ___almod@sign 000E  
